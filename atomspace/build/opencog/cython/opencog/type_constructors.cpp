/* Generated by Cython 0.29.32 */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_32"
#define CYTHON_HEX_VERSION 0x001D20F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC (PYPY_VERSION_HEX >= 0x07030900)
  #endif
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PY_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #if PY_VERSION_HEX >= 0x030B00A4
    #undef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 0
  #elif !defined(CYTHON_FAST_THREAD_STATE)
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL (PY_VERSION_HEX < 0x030A0000)
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #if PY_VERSION_HEX >= 0x030B00A4
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if PY_VERSION_HEX >= 0x030B00A1
    static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *kwds=NULL, *argcount=NULL, *posonlyargcount=NULL, *kwonlyargcount=NULL;
        PyObject *nlocals=NULL, *stacksize=NULL, *flags=NULL, *replace=NULL, *call_result=NULL, *empty=NULL;
        const char *fn_cstr=NULL;
        const char *name_cstr=NULL;
        PyCodeObject* co=NULL;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        if (!(kwds=PyDict_New())) goto end;
        if (!(argcount=PyLong_FromLong(a))) goto end;
        if (PyDict_SetItemString(kwds, "co_argcount", argcount) != 0) goto end;
        if (!(posonlyargcount=PyLong_FromLong(0))) goto end;
        if (PyDict_SetItemString(kwds, "co_posonlyargcount", posonlyargcount) != 0) goto end;
        if (!(kwonlyargcount=PyLong_FromLong(k))) goto end;
        if (PyDict_SetItemString(kwds, "co_kwonlyargcount", kwonlyargcount) != 0) goto end;
        if (!(nlocals=PyLong_FromLong(l))) goto end;
        if (PyDict_SetItemString(kwds, "co_nlocals", nlocals) != 0) goto end;
        if (!(stacksize=PyLong_FromLong(s))) goto end;
        if (PyDict_SetItemString(kwds, "co_stacksize", stacksize) != 0) goto end;
        if (!(flags=PyLong_FromLong(f))) goto end;
        if (PyDict_SetItemString(kwds, "co_flags", flags) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_code", code) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_consts", c) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_names", n) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_varnames", v) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_freevars", fv) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_cellvars", cell) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_linetable", lnos) != 0) goto end;
        if (!(fn_cstr=PyUnicode_AsUTF8AndSize(fn, NULL))) goto end;
        if (!(name_cstr=PyUnicode_AsUTF8AndSize(name, NULL))) goto end;
        if (!(co = PyCode_NewEmpty(fn_cstr, name_cstr, fline))) goto end;
        if (!(replace = PyObject_GetAttrString((PyObject*)co, "replace"))) goto cleanup_code_too;
        if (!(empty = PyTuple_New(0))) goto cleanup_code_too; // unfortunately __pyx_empty_tuple isn't available here
        if (!(call_result = PyObject_Call(replace, empty, kwds))) goto cleanup_code_too;
        Py_XDECREF((PyObject*)co);
        co = (PyCodeObject*)call_result;
        call_result = NULL;
        if (0) {
            cleanup_code_too:
            Py_XDECREF((PyObject*)co);
            co = NULL;
        }
        end:
        Py_XDECREF(kwds);
        Py_XDECREF(argcount);
        Py_XDECREF(posonlyargcount);
        Py_XDECREF(kwonlyargcount);
        Py_XDECREF(nlocals);
        Py_XDECREF(stacksize);
        Py_XDECREF(replace);
        Py_XDECREF(call_result);
        Py_XDECREF(empty);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return co;
    }
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if defined(PyUnicode_IS_READY)
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #else
  #define __Pyx_PyUnicode_READY(op)       (0)
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
  #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
  #endif
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__opencog__type_constructors
#define __PYX_HAVE_API__opencog__type_constructors
/* Early includes */
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <memory>
#include <utility>

    #if __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600)
    // move should be defined for these versions of MSVC, but __cplusplus isn't set usefully
    #include <type_traits>

    namespace cython_std {
    template <typename T> typename std::remove_reference<T>::type&& move(T& t) noexcept { return std::move(t); }
    template <typename T> typename std::remove_reference<T>::type&& move(T&& t) noexcept { return std::move(t); }
    }

    #endif
    
#include <set>
#include <string.h>
#include <string>
#include "opencog/atoms/atom_types/NameServer.h"
#include "opencog/atoms/atom_types/atom_types.h"
#include "opencog/atoms/value/Value.h"
#include "opencog/atoms/truthvalue/TruthValue.h"
#include "opencog/atoms/truthvalue/SimpleTruthValue.h"
#include "opencog/atoms/base/Link.h"
#include "opencog/atoms/base/Atom.h"
#include "opencog/atoms/base/Handle.h"
#include "opencog/atomspace/AtomSpace.h"
#include "opencog/atoms/value/FloatValue.h"
#include "opencog/atoms/value/StringValue.h"
#include "opencog/atoms/value/LinkValue.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "type_constructors.pyx",
  "core_types.pyx",
  "atomspace.pxd",
  "value_types.pxd",
};

/* "opencog/atomspace.pxd":16
 *     cdef object PyLong_FromVoidPtr(void *p)
 * 
 * ctypedef public long PANDLE             # <<<<<<<<<<<<<<
 * 
 * # Basic wrapping for back_insert_iterator conversion.
 */
typedef long PANDLE;

/* "opencog/atomspace.pxd":25
 * # Basic OpenCog types
 * # NameServer
 * ctypedef short Type             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "opencog/atoms/atom_types/NameServer.h" namespace "opencog":
 */
typedef short __pyx_t_7opencog_9atomspace_Type;

/* "opencog/atomspace.pxd":77
 * 
 * # TruthValue
 * ctypedef double count_t             # <<<<<<<<<<<<<<
 * ctypedef double confidence_t
 * ctypedef double strength_t
 */
typedef double __pyx_t_7opencog_9atomspace_count_t;

/* "opencog/atomspace.pxd":78
 * # TruthValue
 * ctypedef double count_t
 * ctypedef double confidence_t             # <<<<<<<<<<<<<<
 * ctypedef double strength_t
 * 
 */
typedef double __pyx_t_7opencog_9atomspace_confidence_t;

/* "opencog/atomspace.pxd":79
 * ctypedef double count_t
 * ctypedef double confidence_t
 * ctypedef double strength_t             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "opencog/atoms/truthvalue/TruthValue.h" namespace "opencog":
 */
typedef double __pyx_t_7opencog_9atomspace_strength_t;

/* "opencog/atomspace.pxd":115
 * # ContentHash
 * 
 * ctypedef size_t ContentHash;             # <<<<<<<<<<<<<<
 * 
 * # Atom
 */
typedef size_t __pyx_t_7opencog_9atomspace_ContentHash;

/*--- Type declarations ---*/
struct __pyx_obj_7opencog_9atomspace_PtrHolder;
struct __pyx_obj_7opencog_9atomspace_Value;
struct __pyx_obj_7opencog_9atomspace_TruthValue;
struct __pyx_obj_7opencog_9atomspace_Atom;
struct __pyx_obj_7opencog_9atomspace_AtomSpace;
struct __pyx_obj_7opencog_9atomspace_FloatValue;
struct __pyx_obj_7opencog_9atomspace_StringValue;
struct __pyx_obj_7opencog_9atomspace_LinkValue;

/* "opencog/atomspace.pxd":62
 *     ctypedef shared_ptr[cValue] cValuePtr "opencog::ValuePtr"
 * 
 * cdef class PtrHolder:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[void] shared_ptr
 * 
 */
struct __pyx_obj_7opencog_9atomspace_PtrHolder {
  PyObject_HEAD
  struct __pyx_vtabstruct_7opencog_9atomspace_PtrHolder *__pyx_vtab;
  std::shared_ptr<void>  shared_ptr;
};


/* "opencog/atomspace.pxd":68
 *     cdef PtrHolder create(shared_ptr[void]& ptr)
 * 
 * cdef class Value:             # <<<<<<<<<<<<<<
 *     cdef PtrHolder ptr_holder
 *     cdef cValuePtr get_c_value_ptr(self)
 */
struct __pyx_obj_7opencog_9atomspace_Value {
  PyObject_HEAD
  struct __pyx_vtabstruct_7opencog_9atomspace_Value *__pyx_vtab;
  struct __pyx_obj_7opencog_9atomspace_PtrHolder *ptr_holder;
};


/* "opencog/atomspace.pxd":106
 *         bint operator!=(cTruthValue h)
 * 
 * cdef class TruthValue(Value):             # <<<<<<<<<<<<<<
 *     cdef strength_t _mean(self)
 *     cdef confidence_t _confidence(self)
 */
struct __pyx_obj_7opencog_9atomspace_TruthValue {
  struct __pyx_obj_7opencog_9atomspace_Value __pyx_base;
};


/* "opencog/atomspace.pxd":172
 *     cdef cppclass cHandleSeq "opencog::HandleSeq"
 * 
 * cdef class Atom(Value):             # <<<<<<<<<<<<<<
 *     cdef cHandle* handle
 *     cdef object _atom_type
 */
struct __pyx_obj_7opencog_9atomspace_Atom {
  struct __pyx_obj_7opencog_9atomspace_Value __pyx_base;
  opencog::Handle *handle;
  PyObject *_atom_type;
  PyObject *_name;
  PyObject *_outgoing;
};


/* "opencog/atomspace.pxd":222
 * 
 * 
 * cdef class AtomSpace(Value):             # <<<<<<<<<<<<<<
 *     cdef cValuePtr asp
 *     cdef cAtomSpace *atomspace
 */
struct __pyx_obj_7opencog_9atomspace_AtomSpace {
  struct __pyx_obj_7opencog_9atomspace_Value __pyx_base;
  opencog::ValuePtr asp;
  opencog::AtomSpace *atomspace;
  PyObject *parent_atomspace;
};


/* "../../../../opencog/cython/opencog/value_types.pxd":1
 * cdef class FloatValue(Value):             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     cdef vector[double] list_of_doubles_to_vector(list python_list)
 */
struct __pyx_obj_7opencog_9atomspace_FloatValue {
  struct __pyx_obj_7opencog_9atomspace_Value __pyx_base;
};


/* "../../../../opencog/cython/opencog/value_types.pxd":9
 * 
 * 
 * cdef class StringValue(Value):             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     cdef vector[string] list_of_strings_to_vector(list python_list)
 */
struct __pyx_obj_7opencog_9atomspace_StringValue {
  struct __pyx_obj_7opencog_9atomspace_Value __pyx_base;
};


/* "../../../../opencog/cython/opencog/value_types.pxd":17
 * 
 * 
 * cdef class LinkValue(Value):             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     cdef vector[cValuePtr] list_of_values_to_vector(list python_list)
 */
struct __pyx_obj_7opencog_9atomspace_LinkValue {
  struct __pyx_obj_7opencog_9atomspace_Value __pyx_base;
};



/* "opencog/atomspace.pxd":62
 *     ctypedef shared_ptr[cValue] cValuePtr "opencog::ValuePtr"
 * 
 * cdef class PtrHolder:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[void] shared_ptr
 * 
 */

struct __pyx_vtabstruct_7opencog_9atomspace_PtrHolder {
  struct __pyx_obj_7opencog_9atomspace_PtrHolder *(*create)(std::shared_ptr<void>  &);
};
static struct __pyx_vtabstruct_7opencog_9atomspace_PtrHolder *__pyx_vtabptr_7opencog_9atomspace_PtrHolder;


/* "opencog/atomspace.pxd":68
 *     cdef PtrHolder create(shared_ptr[void]& ptr)
 * 
 * cdef class Value:             # <<<<<<<<<<<<<<
 *     cdef PtrHolder ptr_holder
 *     cdef cValuePtr get_c_value_ptr(self)
 */

struct __pyx_vtabstruct_7opencog_9atomspace_Value {
  opencog::ValuePtr (*get_c_value_ptr)(struct __pyx_obj_7opencog_9atomspace_Value *);
  struct __pyx_obj_7opencog_9atomspace_Value *(*create)(opencog::ValuePtr &);
};
static struct __pyx_vtabstruct_7opencog_9atomspace_Value *__pyx_vtabptr_7opencog_9atomspace_Value;


/* "opencog/atomspace.pxd":106
 *         bint operator!=(cTruthValue h)
 * 
 * cdef class TruthValue(Value):             # <<<<<<<<<<<<<<
 *     cdef strength_t _mean(self)
 *     cdef confidence_t _confidence(self)
 */

struct __pyx_vtabstruct_7opencog_9atomspace_TruthValue {
  struct __pyx_vtabstruct_7opencog_9atomspace_Value __pyx_base;
  __pyx_t_7opencog_9atomspace_strength_t (*_mean)(struct __pyx_obj_7opencog_9atomspace_TruthValue *);
  __pyx_t_7opencog_9atomspace_confidence_t (*_confidence)(struct __pyx_obj_7opencog_9atomspace_TruthValue *);
  __pyx_t_7opencog_9atomspace_count_t (*_count)(struct __pyx_obj_7opencog_9atomspace_TruthValue *);
  const opencog::TruthValue *(*_ptr)(struct __pyx_obj_7opencog_9atomspace_TruthValue *);
  opencog::TruthValuePtr *(*_tvptr)(struct __pyx_obj_7opencog_9atomspace_TruthValue *);
};
static struct __pyx_vtabstruct_7opencog_9atomspace_TruthValue *__pyx_vtabptr_7opencog_9atomspace_TruthValue;


/* "opencog/atomspace.pxd":172
 *     cdef cppclass cHandleSeq "opencog::HandleSeq"
 * 
 * cdef class Atom(Value):             # <<<<<<<<<<<<<<
 *     cdef cHandle* handle
 *     cdef object _atom_type
 */

struct __pyx_vtabstruct_7opencog_9atomspace_Atom {
  struct __pyx_vtabstruct_7opencog_9atomspace_Value __pyx_base;
  opencog::Handle (*get_c_handle)(struct __pyx_obj_7opencog_9atomspace_Atom *);
  struct __pyx_obj_7opencog_9atomspace_Atom *(*createAtom)(opencog::Handle &);
};
static struct __pyx_vtabstruct_7opencog_9atomspace_Atom *__pyx_vtabptr_7opencog_9atomspace_Atom;


/* "opencog/atomspace.pxd":222
 * 
 * 
 * cdef class AtomSpace(Value):             # <<<<<<<<<<<<<<
 *     cdef cValuePtr asp
 *     cdef cAtomSpace *atomspace
 */

struct __pyx_vtabstruct_7opencog_9atomspace_AtomSpace {
  struct __pyx_vtabstruct_7opencog_9atomspace_Value __pyx_base;
};
static struct __pyx_vtabstruct_7opencog_9atomspace_AtomSpace *__pyx_vtabptr_7opencog_9atomspace_AtomSpace;


/* "../../../../opencog/cython/opencog/value_types.pxd":1
 * cdef class FloatValue(Value):             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     cdef vector[double] list_of_doubles_to_vector(list python_list)
 */

struct __pyx_vtabstruct_7opencog_9atomspace_FloatValue {
  struct __pyx_vtabstruct_7opencog_9atomspace_Value __pyx_base;
  std::vector<double>  (*list_of_doubles_to_vector)(PyObject *);
  PyObject *(*vector_of_doubles_to_list)(std::vector<double>  const *);
};
static struct __pyx_vtabstruct_7opencog_9atomspace_FloatValue *__pyx_vtabptr_7opencog_9atomspace_FloatValue;


/* "../../../../opencog/cython/opencog/value_types.pxd":9
 * 
 * 
 * cdef class StringValue(Value):             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     cdef vector[string] list_of_strings_to_vector(list python_list)
 */

struct __pyx_vtabstruct_7opencog_9atomspace_StringValue {
  struct __pyx_vtabstruct_7opencog_9atomspace_Value __pyx_base;
  std::vector<std::string>  (*list_of_strings_to_vector)(PyObject *);
  PyObject *(*vector_of_strings_to_list)(std::vector<std::string>  const *);
};
static struct __pyx_vtabstruct_7opencog_9atomspace_StringValue *__pyx_vtabptr_7opencog_9atomspace_StringValue;


/* "../../../../opencog/cython/opencog/value_types.pxd":17
 * 
 * 
 * cdef class LinkValue(Value):             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     cdef vector[cValuePtr] list_of_values_to_vector(list python_list)
 */

struct __pyx_vtabstruct_7opencog_9atomspace_LinkValue {
  struct __pyx_vtabstruct_7opencog_9atomspace_Value __pyx_base;
  std::vector<opencog::ValuePtr>  (*list_of_values_to_vector)(PyObject *);
  PyObject *(*vector_of_values_to_list)(std::vector<opencog::ValuePtr>  const *);
};
static struct __pyx_vtabstruct_7opencog_9atomspace_LinkValue *__pyx_vtabptr_7opencog_9atomspace_LinkValue;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if CYTHON_FAST_PYCALL
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif // CYTHON_FAST_PYCALL
#endif

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto
#define __PYX_HAVE_RT_ImportType_proto
enum __Pyx_ImportType_CheckSize {
   __Pyx_ImportType_CheckSize_Error = 0,
   __Pyx_ImportType_CheckSize_Warn = 1,
   __Pyx_ImportType_CheckSize_Ignore = 2
};
static PyTypeObject *__Pyx_ImportType(PyObject* module, const char *module_name, const char *class_name, size_t size, enum __Pyx_ImportType_CheckSize check_size);
#endif

/* GetVTable.proto */
static void* __Pyx_GetVtable(PyObject *dict);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* None.proto */
#include <new>

/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'libcpp' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp.memory' */

/* Module declarations from 'libcpp.utility' */

/* Module declarations from 'libcpp.set' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'opencog.atomspace' */
static PyTypeObject *__pyx_ptype_7opencog_9atomspace_PtrHolder = 0;
static PyTypeObject *__pyx_ptype_7opencog_9atomspace_Value = 0;
static PyTypeObject *__pyx_ptype_7opencog_9atomspace_TruthValue = 0;
static PyTypeObject *__pyx_ptype_7opencog_9atomspace_Atom = 0;
static PyTypeObject *__pyx_ptype_7opencog_9atomspace_AtomSpace = 0;
static PyTypeObject *__pyx_ptype_7opencog_9atomspace_FloatValue = 0;
static PyTypeObject *__pyx_ptype_7opencog_9atomspace_StringValue = 0;
static PyTypeObject *__pyx_ptype_7opencog_9atomspace_LinkValue = 0;

/* Module declarations from 'opencog.type_constructors' */
#define __Pyx_MODULE_NAME "opencog.type_constructors"
extern int __pyx_module_is_main_opencog__type_constructors;
int __pyx_module_is_main_opencog__type_constructors = 0;

/* Implementation of 'opencog.type_constructors' */
static PyObject *__pyx_builtin_DeprecationWarning;
static const char __pyx_k_tv[] = "tv";
static const char __pyx_k_arg[] = "arg";
static const char __pyx_k_Link[] = "Link";
static const char __pyx_k_Node[] = "Node";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_warn[] = "warn";
static const char __pyx_k_Frame[] = "Frame";
static const char __pyx_k_types[] = "types";
static const char __pyx_k_Notype[] = "Notype";
static const char __pyx_k_OrLink[] = "OrLink";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_AndLink[] = "AndLink";
static const char __pyx_k_AnyNode[] = "AnyNode";
static const char __pyx_k_GetLink[] = "GetLink";
static const char __pyx_k_JsonAst[] = "JsonAst";
static const char __pyx_k_MaxLink[] = "MaxLink";
static const char __pyx_k_MinLink[] = "MinLink";
static const char __pyx_k_NotLink[] = "NotLink";
static const char __pyx_k_PowLink[] = "PowLink";
static const char __pyx_k_PutLink[] = "PutLink";
static const char __pyx_k_Section[] = "Section";
static const char __pyx_k_SetLink[] = "SetLink";
static const char __pyx_k_SexNode[] = "SexNode";
static const char __pyx_k_TagLink[] = "TagLink";
static const char __pyx_k_TagNode[] = "TagNode";
static const char __pyx_k_TopType[] = "TopType";
static const char __pyx_k_BindLink[] = "BindLink";
static const char __pyx_k_BondNode[] = "BondNode";
static const char __pyx_k_CondLink[] = "CondLink";
static const char __pyx_k_DualLink[] = "DualLink";
static const char __pyx_k_EdgeLink[] = "EdgeLink";
static const char __pyx_k_FoldLink[] = "FoldLink";
static const char __pyx_k_FreeLink[] = "FreeLink";
static const char __pyx_k_GlobNode[] = "GlobNode";
static const char __pyx_k_ItemNode[] = "ItemNode";
static const char __pyx_k_JoinLink[] = "JoinLink";
static const char __pyx_k_ListLink[] = "ListLink";
static const char __pyx_k_Log2Link[] = "Log2Link";
static const char __pyx_k_MeetLink[] = "MeetLink";
static const char __pyx_k_PlusLink[] = "PlusLink";
static const char __pyx_k_RuleLink[] = "RuleLink";
static const char __pyx_k_SexprAst[] = "SexprAst";
static const char __pyx_k_SignNode[] = "SignNode";
static const char __pyx_k_SineLink[] = "SineLink";
static const char __pyx_k_TimeLink[] = "TimeLink";
static const char __pyx_k_TrueLink[] = "TrueLink";
static const char __pyx_k_TypeNode[] = "TypeNode";
static const char __pyx_k_add_link[] = "add_link";
static const char __pyx_k_add_node[] = "add_node";
static const char __pyx_k_strength[] = "strength";
static const char __pyx_k_warnings[] = "warnings";
static const char __pyx_k_ArrowLink[] = "ArrowLink";
static const char __pyx_k_AtomSpace[] = "AtomSpace";
static const char __pyx_k_Connector[] = "Connector";
static const char __pyx_k_EqualLink[] = "EqualLink";
static const char __pyx_k_FalseLink[] = "FalseLink";
static const char __pyx_k_FloorLink[] = "FloorLink";
static const char __pyx_k_GrantLink[] = "GrantLink";
static const char __pyx_k_LinkValue[] = "LinkValue";
static const char __pyx_k_MinusLink[] = "MinusLink";
static const char __pyx_k_PythonAst[] = "PythonAst";
static const char __pyx_k_QueryLink[] = "QueryLink";
static const char __pyx_k_QuoteLink[] = "QuoteLink";
static const char __pyx_k_ScopeLink[] = "ScopeLink";
static const char __pyx_k_SetTVLink[] = "SetTVLink";
static const char __pyx_k_ShapeLink[] = "ShapeLink";
static const char __pyx_k_SleepLink[] = "SleepLink";
static const char __pyx_k_StateLink[] = "StateLink";
static const char __pyx_k_TimesLink[] = "TimesLink";
static const char __pyx_k_UnionLink[] = "UnionLink";
static const char __pyx_k_Valuation[] = "Valuation";
static const char __pyx_k_node_name[] = "node_name";
static const char __pyx_k_AbsentLink[] = "AbsentLink";
static const char __pyx_k_AlwaysLink[] = "AlwaysLink";
static const char __pyx_k_AnchorNode[] = "AnchorNode";
static const char __pyx_k_BoolOpLink[] = "BoolOpLink";
static const char __pyx_k_BoolOrLink[] = "BoolOrLink";
static const char __pyx_k_ChoiceLink[] = "ChoiceLink";
static const char __pyx_k_DatalogAst[] = "DatalogAst";
static const char __pyx_k_DefineLink[] = "DefineLink";
static const char __pyx_k_DeleteLink[] = "DeleteLink";
static const char __pyx_k_DivideLink[] = "DivideLink";
static const char __pyx_k_ExistsLink[] = "ExistsLink";
static const char __pyx_k_FilterLink[] = "FilterLink";
static const char __pyx_k_FloatValue[] = "FloatValue";
static const char __pyx_k_ForAllLink[] = "ForAllLink";
static const char __pyx_k_ForeignAst[] = "ForeignAst";
static const char __pyx_k_IsTrueLink[] = "IsTrueLink";
static const char __pyx_k_LambdaLink[] = "LambdaLink";
static const char __pyx_k_MemberLink[] = "MemberLink";
static const char __pyx_k_NumberNode[] = "NumberNode";
static const char __pyx_k_PrenexLink[] = "PrenexLink";
static const char __pyx_k_SchemaNode[] = "SchemaNode";
static const char __pyx_k_SizeOfLink[] = "SizeOfLink";
static const char __pyx_k_SubsetLink[] = "SubsetLink";
static const char __pyx_k_TruthValue[] = "TruthValue";
static const char __pyx_k_TypeChoice[] = "TypeChoice";
static const char __pyx_k_TypeOfLink[] = "TypeOfLink";
static const char __pyx_k_UniqueLink[] = "UniqueLink";
static const char __pyx_k_confidence[] = "confidence";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_BoolAndLink[] = "BoolAndLink";
static const char __pyx_k_BoolNotLink[] = "BoolNotLink";
static const char __pyx_k_ConceptNode[] = "ConceptNode";
static const char __pyx_k_ContextLink[] = "ContextLink";
static const char __pyx_k_CountOfLink[] = "CountOfLink";
static const char __pyx_k_ImpulseLink[] = "ImpulseLink";
static const char __pyx_k_IsFalseLink[] = "IsFalseLink";
static const char __pyx_k_LexicalNode[] = "LexicalNode";
static const char __pyx_k_OrderedLink[] = "OrderedLink";
static const char __pyx_k_PatternLink[] = "PatternLink";
static const char __pyx_k_PresentLink[] = "PresentLink";
static const char __pyx_k_PromiseLink[] = "PromiseLink";
static const char __pyx_k_RewriteLink[] = "RewriteLink";
static const char __pyx_k_StringValue[] = "StringValue";
static const char __pyx_k_TypeInhNode[] = "TypeInhNode";
static const char __pyx_k_UnquoteLink[] = "UnquoteLink";
static const char __pyx_k_ValueOfLink[] = "ValueOfLink";
static const char __pyx_k_VariableSet[] = "VariableSet";
static const char __pyx_k_VirtualLink[] = "VirtualLink";
static const char __pyx_k_ConnectorDir[] = "ConnectorDir";
static const char __pyx_k_ConnectorSeq[] = "ConnectorSeq";
static const char __pyx_k_ConnectorSet[] = "ConnectorSet";
static const char __pyx_k_CrossSection[] = "CrossSection";
static const char __pyx_k_DecimateLink[] = "DecimateLink";
static const char __pyx_k_DontExecLink[] = "DontExecLink";
static const char __pyx_k_FunctionLink[] = "FunctionLink";
static const char __pyx_k_IntervalLink[] = "IntervalLink";
static const char __pyx_k_IsClosedLink[] = "IsClosedLink";
static const char __pyx_k_LessThanLink[] = "LessThanLink";
static const char __pyx_k_NumberOfLink[] = "NumberOfLink";
static const char __pyx_k_ParallelLink[] = "ParallelLink";
static const char __pyx_k_PureExecLink[] = "PureExecLink";
static const char __pyx_k_SetValueLink[] = "SetValueLink";
static const char __pyx_k_UpperSetLink[] = "UpperSetLink";
static const char __pyx_k_ValuableLink[] = "ValuableLink";
static const char __pyx_k_VariableList[] = "VariableList";
static const char __pyx_k_VariableNode[] = "VariableNode";
static const char __pyx_k_ElementOfLink[] = "ElementOfLink";
static const char __pyx_k_ExclusiveLink[] = "ExclusiveLink";
static const char __pyx_k_ExecutionLink[] = "ExecutionLink";
static const char __pyx_k_HeavisideLink[] = "HeavisideLink";
static const char __pyx_k_IdenticalLink[] = "IdenticalLink";
static const char __pyx_k_ItemClassNode[] = "ItemClassNode";
static const char __pyx_k_PredicateNode[] = "PredicateNode";
static const char __pyx_k_PremiseOfLink[] = "PremiseOfLink";
static const char __pyx_k_ProcedureNode[] = "ProcedureNode";
static const char __pyx_k_SignatureLink[] = "SignatureLink";
static const char __pyx_k_TypeCoInhNode[] = "TypeCoInhNode";
static const char __pyx_k_TypeInputLink[] = "TypeInputLink";
static const char __pyx_k_TypedAtomLink[] = "TypedAtomLink";
static const char __pyx_k_UnorderedLink[] = "UnorderedLink";
static const char __pyx_k_ValueShimLink[] = "ValueShimLink";
static const char __pyx_k_VardeclOfLink[] = "VardeclOfLink";
static const char __pyx_k_new_atomspace[] = "new_atomspace";
static const char __pyx_k_AccumulateLink[] = "AccumulateLink";
static const char __pyx_k_AlphaEqualLink[] = "AlphaEqualLink";
static const char __pyx_k_ArithmeticLink[] = "ArithmeticLink";
static const char __pyx_k_CollectionLink[] = "CollectionLink";
static const char __pyx_k_ComplementLink[] = "ComplementLink";
static const char __pyx_k_CrispInputLink[] = "CrispInputLink";
static const char __pyx_k_EvaluationLink[] = "EvaluationLink";
static const char __pyx_k_ExecutableLink[] = "ExecutableLink";
static const char __pyx_k_IncomingOfLink[] = "IncomingOfLink";
static const char __pyx_k_LocalQuoteLink[] = "LocalQuoteLink";
static const char __pyx_k_SatisfyingLink[] = "SatisfyingLink";
static const char __pyx_k_SimilarityLink[] = "SimilarityLink";
static const char __pyx_k_StrengthOfLink[] = "StrengthOfLink";
static const char __pyx_k_ThreadJoinLink[] = "ThreadJoinLink";
static const char __pyx_k_TypeOutputLink[] = "TypeOutputLink";
static const char __pyx_k_AssociativeLink[] = "AssociativeLink";
static const char __pyx_k_BoolValueOfLink[] = "BoolValueOfLink";
static const char __pyx_k_ConnectorChoice[] = "ConnectorChoice";
static const char __pyx_k_CrispOutputLink[] = "CrispOutputLink";
static const char __pyx_k_DefinedTypeNode[] = "DefinedTypeNode";
static const char __pyx_k_EquivalenceLink[] = "EquivalenceLink";
static const char __pyx_k_EvaluatableLink[] = "EvaluatableLink";
static const char __pyx_k_GreaterThanLink[] = "GreaterThanLink";
static const char __pyx_k_ImplicationLink[] = "ImplicationLink";
static const char __pyx_k_InheritanceLink[] = "InheritanceLink";
static const char __pyx_k_MaximalJoinLink[] = "MaximalJoinLink";
static const char __pyx_k_MinimalJoinLink[] = "MinimalJoinLink";
static const char __pyx_k_ReplacementLink[] = "ReplacementLink";
static const char __pyx_k_createLinkValue[] = "createLinkValue";
static const char __pyx_k_BooleanInputLink[] = "BooleanInputLink";
static const char __pyx_k_CollectionOfLink[] = "CollectionOfLink";
static const char __pyx_k_ConclusionOfLink[] = "ConclusionOfLink";
static const char __pyx_k_ConfidenceOfLink[] = "ConfidenceOfLink";
static const char __pyx_k_ContinuationLink[] = "ContinuationLink";
static const char __pyx_k_FloatValueOfLink[] = "FloatValueOfLink";
static const char __pyx_k_IntersectionLink[] = "IntersectionLink";
static const char __pyx_k_NumericInputLink[] = "NumericInputLink";
static const char __pyx_k_RandomChoiceLink[] = "RandomChoiceLink";
static const char __pyx_k_RandomNumberLink[] = "RandomNumberLink";
static const char __pyx_k_SatisfactionLink[] = "SatisfactionLink";
static const char __pyx_k_SequentialOrLink[] = "SequentialOrLink";
static const char __pyx_k_TruthValueOfLink[] = "TruthValueOfLink";
static const char __pyx_k_createFloatValue[] = "createFloatValue";
static const char __pyx_k_createTruthValue[] = "createTruthValue";
static const char __pyx_k_BooleanOutputLink[] = "BooleanOutputLink";
static const char __pyx_k_DefinedSchemaNode[] = "DefinedSchemaNode";
static const char __pyx_k_LinkSignatureLink[] = "LinkSignatureLink";
static const char __pyx_k_NumericOutputLink[] = "NumericOutputLink";
static const char __pyx_k_SequentialAndLink[] = "SequentialAndLink";
static const char __pyx_k_SetDifferenceLink[] = "SetDifferenceLink";
static const char __pyx_k_StreamValueOfLink[] = "StreamValueOfLink";
static const char __pyx_k_TypedVariableLink[] = "TypedVariableLink";
static const char __pyx_k_createStringValue[] = "createStringValue";
static const char __pyx_k_opencog_atomspace[] = "opencog.atomspace";
static const char __pyx_k_opencog_utilities[] = "opencog.utilities";
static const char __pyx_k_DeprecationWarning[] = "DeprecationWarning";
static const char __pyx_k_GroundedSchemaNode[] = "GroundedSchemaNode";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_ExecuteThreadedLink[] = "ExecuteThreadedLink";
static const char __pyx_k_ExecutionOutputLink[] = "ExecutionOutputLink";
static const char __pyx_k_NumericFunctionLink[] = "NumericFunctionLink";
static const char __pyx_k_AlphaConvertibleLink[] = "AlphaConvertibleLink";
static const char __pyx_k_DefinedPredicateNode[] = "DefinedPredicateNode";
static const char __pyx_k_DefinedProcedureNode[] = "DefinedProcedureNode";
static const char __pyx_k_FormulaPredicateLink[] = "FormulaPredicateLink";
static const char __pyx_k_PromisePredicateLink[] = "PromisePredicateLink";
static const char __pyx_k_TypeIntersectionLink[] = "TypeIntersectionLink";
static const char __pyx_k_GroundedPredicateNode[] = "GroundedPredicateNode";
static const char __pyx_k_GroundedProcedureNode[] = "GroundedProcedureNode";
static const char __pyx_k_get_default_atomspace[] = "get_default_atomspace";
static const char __pyx_k_set_default_atomspace[] = "set_default_atomspace";
static const char __pyx_k_DirectlyEvaluatableLink[] = "DirectlyEvaluatableLink";
static const char __pyx_k_get_type_ctor_atomspace[] = "get_type_ctor_atomspace";
static const char __pyx_k_set_type_ctor_atomspace[] = "set_type_ctor_atomspace";
static const char __pyx_k_opencog_type_constructors[] = "opencog.type_constructors";
static const char __pyx_k_workspaces_opencog_central_atom[] = "/workspaces/opencog-central/atomspace/opencog/cython/opencog/type_constructors.pyx";
static const char __pyx_k_get_type_ctor_atomspace_is_depre[] = "get_type_ctor_atomspace is deprecated, use get_default_atomspace instead";
static const char __pyx_k_set_type_ctor_atomspace_is_depre[] = "set_type_ctor_atomspace is deprecated, use set_default_atomspace instead";
static const char __pyx_k_workspaces_opencog_central_atom_2[] = "/workspaces/opencog-central/atomspace/build/opencog/atoms/atom_types/core_types.pyx";
static PyObject *__pyx_n_s_AbsentLink;
static PyObject *__pyx_n_s_AccumulateLink;
static PyObject *__pyx_n_s_AlphaConvertibleLink;
static PyObject *__pyx_n_s_AlphaEqualLink;
static PyObject *__pyx_n_s_AlwaysLink;
static PyObject *__pyx_n_s_AnchorNode;
static PyObject *__pyx_n_s_AndLink;
static PyObject *__pyx_n_s_AnyNode;
static PyObject *__pyx_n_s_ArithmeticLink;
static PyObject *__pyx_n_s_ArrowLink;
static PyObject *__pyx_n_s_AssociativeLink;
static PyObject *__pyx_n_s_AtomSpace;
static PyObject *__pyx_n_s_BindLink;
static PyObject *__pyx_n_s_BondNode;
static PyObject *__pyx_n_s_BoolAndLink;
static PyObject *__pyx_n_s_BoolNotLink;
static PyObject *__pyx_n_s_BoolOpLink;
static PyObject *__pyx_n_s_BoolOrLink;
static PyObject *__pyx_n_s_BoolValueOfLink;
static PyObject *__pyx_n_s_BooleanInputLink;
static PyObject *__pyx_n_s_BooleanOutputLink;
static PyObject *__pyx_n_s_ChoiceLink;
static PyObject *__pyx_n_s_CollectionLink;
static PyObject *__pyx_n_s_CollectionOfLink;
static PyObject *__pyx_n_s_ComplementLink;
static PyObject *__pyx_n_s_ConceptNode;
static PyObject *__pyx_n_s_ConclusionOfLink;
static PyObject *__pyx_n_s_CondLink;
static PyObject *__pyx_n_s_ConfidenceOfLink;
static PyObject *__pyx_n_s_Connector;
static PyObject *__pyx_n_s_ConnectorChoice;
static PyObject *__pyx_n_s_ConnectorDir;
static PyObject *__pyx_n_s_ConnectorSeq;
static PyObject *__pyx_n_s_ConnectorSet;
static PyObject *__pyx_n_s_ContextLink;
static PyObject *__pyx_n_s_ContinuationLink;
static PyObject *__pyx_n_s_CountOfLink;
static PyObject *__pyx_n_s_CrispInputLink;
static PyObject *__pyx_n_s_CrispOutputLink;
static PyObject *__pyx_n_s_CrossSection;
static PyObject *__pyx_n_s_DatalogAst;
static PyObject *__pyx_n_s_DecimateLink;
static PyObject *__pyx_n_s_DefineLink;
static PyObject *__pyx_n_s_DefinedPredicateNode;
static PyObject *__pyx_n_s_DefinedProcedureNode;
static PyObject *__pyx_n_s_DefinedSchemaNode;
static PyObject *__pyx_n_s_DefinedTypeNode;
static PyObject *__pyx_n_s_DeleteLink;
static PyObject *__pyx_n_s_DeprecationWarning;
static PyObject *__pyx_n_s_DirectlyEvaluatableLink;
static PyObject *__pyx_n_s_DivideLink;
static PyObject *__pyx_n_s_DontExecLink;
static PyObject *__pyx_n_s_DualLink;
static PyObject *__pyx_n_s_EdgeLink;
static PyObject *__pyx_n_s_ElementOfLink;
static PyObject *__pyx_n_s_EqualLink;
static PyObject *__pyx_n_s_EquivalenceLink;
static PyObject *__pyx_n_s_EvaluatableLink;
static PyObject *__pyx_n_s_EvaluationLink;
static PyObject *__pyx_n_s_ExclusiveLink;
static PyObject *__pyx_n_s_ExecutableLink;
static PyObject *__pyx_n_s_ExecuteThreadedLink;
static PyObject *__pyx_n_s_ExecutionLink;
static PyObject *__pyx_n_s_ExecutionOutputLink;
static PyObject *__pyx_n_s_ExistsLink;
static PyObject *__pyx_n_s_FalseLink;
static PyObject *__pyx_n_s_FilterLink;
static PyObject *__pyx_n_s_FloatValue;
static PyObject *__pyx_n_s_FloatValueOfLink;
static PyObject *__pyx_n_s_FloorLink;
static PyObject *__pyx_n_s_FoldLink;
static PyObject *__pyx_n_s_ForAllLink;
static PyObject *__pyx_n_s_ForeignAst;
static PyObject *__pyx_n_s_FormulaPredicateLink;
static PyObject *__pyx_n_s_Frame;
static PyObject *__pyx_n_s_FreeLink;
static PyObject *__pyx_n_s_FunctionLink;
static PyObject *__pyx_n_s_GetLink;
static PyObject *__pyx_n_s_GlobNode;
static PyObject *__pyx_n_s_GrantLink;
static PyObject *__pyx_n_s_GreaterThanLink;
static PyObject *__pyx_n_s_GroundedPredicateNode;
static PyObject *__pyx_n_s_GroundedProcedureNode;
static PyObject *__pyx_n_s_GroundedSchemaNode;
static PyObject *__pyx_n_s_HeavisideLink;
static PyObject *__pyx_n_s_IdenticalLink;
static PyObject *__pyx_n_s_ImplicationLink;
static PyObject *__pyx_n_s_ImpulseLink;
static PyObject *__pyx_n_s_IncomingOfLink;
static PyObject *__pyx_n_s_InheritanceLink;
static PyObject *__pyx_n_s_IntersectionLink;
static PyObject *__pyx_n_s_IntervalLink;
static PyObject *__pyx_n_s_IsClosedLink;
static PyObject *__pyx_n_s_IsFalseLink;
static PyObject *__pyx_n_s_IsTrueLink;
static PyObject *__pyx_n_s_ItemClassNode;
static PyObject *__pyx_n_s_ItemNode;
static PyObject *__pyx_n_s_JoinLink;
static PyObject *__pyx_n_s_JsonAst;
static PyObject *__pyx_n_s_LambdaLink;
static PyObject *__pyx_n_s_LessThanLink;
static PyObject *__pyx_n_s_LexicalNode;
static PyObject *__pyx_n_s_Link;
static PyObject *__pyx_n_s_LinkSignatureLink;
static PyObject *__pyx_n_s_LinkValue;
static PyObject *__pyx_n_s_ListLink;
static PyObject *__pyx_n_s_LocalQuoteLink;
static PyObject *__pyx_n_s_Log2Link;
static PyObject *__pyx_n_s_MaxLink;
static PyObject *__pyx_n_s_MaximalJoinLink;
static PyObject *__pyx_n_s_MeetLink;
static PyObject *__pyx_n_s_MemberLink;
static PyObject *__pyx_n_s_MinLink;
static PyObject *__pyx_n_s_MinimalJoinLink;
static PyObject *__pyx_n_s_MinusLink;
static PyObject *__pyx_n_s_Node;
static PyObject *__pyx_n_s_NotLink;
static PyObject *__pyx_n_s_Notype;
static PyObject *__pyx_n_s_NumberNode;
static PyObject *__pyx_n_s_NumberOfLink;
static PyObject *__pyx_n_s_NumericFunctionLink;
static PyObject *__pyx_n_s_NumericInputLink;
static PyObject *__pyx_n_s_NumericOutputLink;
static PyObject *__pyx_n_s_OrLink;
static PyObject *__pyx_n_s_OrderedLink;
static PyObject *__pyx_n_s_ParallelLink;
static PyObject *__pyx_n_s_PatternLink;
static PyObject *__pyx_n_s_PlusLink;
static PyObject *__pyx_n_s_PowLink;
static PyObject *__pyx_n_s_PredicateNode;
static PyObject *__pyx_n_s_PremiseOfLink;
static PyObject *__pyx_n_s_PrenexLink;
static PyObject *__pyx_n_s_PresentLink;
static PyObject *__pyx_n_s_ProcedureNode;
static PyObject *__pyx_n_s_PromiseLink;
static PyObject *__pyx_n_s_PromisePredicateLink;
static PyObject *__pyx_n_s_PureExecLink;
static PyObject *__pyx_n_s_PutLink;
static PyObject *__pyx_n_s_PythonAst;
static PyObject *__pyx_n_s_QueryLink;
static PyObject *__pyx_n_s_QuoteLink;
static PyObject *__pyx_n_s_RandomChoiceLink;
static PyObject *__pyx_n_s_RandomNumberLink;
static PyObject *__pyx_n_s_ReplacementLink;
static PyObject *__pyx_n_s_RewriteLink;
static PyObject *__pyx_n_s_RuleLink;
static PyObject *__pyx_n_s_SatisfactionLink;
static PyObject *__pyx_n_s_SatisfyingLink;
static PyObject *__pyx_n_s_SchemaNode;
static PyObject *__pyx_n_s_ScopeLink;
static PyObject *__pyx_n_s_Section;
static PyObject *__pyx_n_s_SequentialAndLink;
static PyObject *__pyx_n_s_SequentialOrLink;
static PyObject *__pyx_n_s_SetDifferenceLink;
static PyObject *__pyx_n_s_SetLink;
static PyObject *__pyx_n_s_SetTVLink;
static PyObject *__pyx_n_s_SetValueLink;
static PyObject *__pyx_n_s_SexNode;
static PyObject *__pyx_n_s_SexprAst;
static PyObject *__pyx_n_s_ShapeLink;
static PyObject *__pyx_n_s_SignNode;
static PyObject *__pyx_n_s_SignatureLink;
static PyObject *__pyx_n_s_SimilarityLink;
static PyObject *__pyx_n_s_SineLink;
static PyObject *__pyx_n_s_SizeOfLink;
static PyObject *__pyx_n_s_SleepLink;
static PyObject *__pyx_n_s_StateLink;
static PyObject *__pyx_n_s_StreamValueOfLink;
static PyObject *__pyx_n_s_StrengthOfLink;
static PyObject *__pyx_n_s_StringValue;
static PyObject *__pyx_n_s_SubsetLink;
static PyObject *__pyx_n_s_TagLink;
static PyObject *__pyx_n_s_TagNode;
static PyObject *__pyx_n_s_ThreadJoinLink;
static PyObject *__pyx_n_s_TimeLink;
static PyObject *__pyx_n_s_TimesLink;
static PyObject *__pyx_n_s_TopType;
static PyObject *__pyx_n_s_TrueLink;
static PyObject *__pyx_n_s_TruthValue;
static PyObject *__pyx_n_s_TruthValueOfLink;
static PyObject *__pyx_n_s_TypeChoice;
static PyObject *__pyx_n_s_TypeCoInhNode;
static PyObject *__pyx_n_s_TypeInhNode;
static PyObject *__pyx_n_s_TypeInputLink;
static PyObject *__pyx_n_s_TypeIntersectionLink;
static PyObject *__pyx_n_s_TypeNode;
static PyObject *__pyx_n_s_TypeOfLink;
static PyObject *__pyx_n_s_TypeOutputLink;
static PyObject *__pyx_n_s_TypedAtomLink;
static PyObject *__pyx_n_s_TypedVariableLink;
static PyObject *__pyx_n_s_UnionLink;
static PyObject *__pyx_n_s_UniqueLink;
static PyObject *__pyx_n_s_UnorderedLink;
static PyObject *__pyx_n_s_UnquoteLink;
static PyObject *__pyx_n_s_UpperSetLink;
static PyObject *__pyx_n_s_ValuableLink;
static PyObject *__pyx_n_s_Valuation;
static PyObject *__pyx_n_s_ValueOfLink;
static PyObject *__pyx_n_s_ValueShimLink;
static PyObject *__pyx_n_s_VardeclOfLink;
static PyObject *__pyx_n_s_VariableList;
static PyObject *__pyx_n_s_VariableNode;
static PyObject *__pyx_n_s_VariableSet;
static PyObject *__pyx_n_s_VirtualLink;
static PyObject *__pyx_n_s_add_link;
static PyObject *__pyx_n_s_add_node;
static PyObject *__pyx_n_s_arg;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_confidence;
static PyObject *__pyx_n_s_createFloatValue;
static PyObject *__pyx_n_s_createLinkValue;
static PyObject *__pyx_n_s_createStringValue;
static PyObject *__pyx_n_s_createTruthValue;
static PyObject *__pyx_n_s_get_default_atomspace;
static PyObject *__pyx_n_s_get_type_ctor_atomspace;
static PyObject *__pyx_kp_u_get_type_ctor_atomspace_is_depre;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_new_atomspace;
static PyObject *__pyx_n_s_node_name;
static PyObject *__pyx_n_s_opencog_atomspace;
static PyObject *__pyx_n_s_opencog_type_constructors;
static PyObject *__pyx_n_s_opencog_utilities;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_set_default_atomspace;
static PyObject *__pyx_n_s_set_type_ctor_atomspace;
static PyObject *__pyx_kp_u_set_type_ctor_atomspace_is_depre;
static PyObject *__pyx_n_s_strength;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_tv;
static PyObject *__pyx_n_s_types;
static PyObject *__pyx_n_s_warn;
static PyObject *__pyx_n_s_warnings;
static PyObject *__pyx_kp_s_workspaces_opencog_central_atom;
static PyObject *__pyx_kp_s_workspaces_opencog_central_atom_2;
static PyObject *__pyx_pf_7opencog_17type_constructors_set_type_ctor_atomspace(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_new_atomspace); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_2get_type_ctor_atomspace(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_4Notype(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_6TopType(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_8Valuation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_10Frame(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_12Node(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_14Link(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_16ConceptNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_18NumberNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_20OrderedLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_22UnorderedLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_24PredicateNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_26ValuableLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_28EvaluatableLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_30ExecutableLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_32CrispInputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_34CrispOutputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_36BooleanInputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_38BooleanOutputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_40NumericInputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_42NumericOutputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_44TypeInputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_46TypeOutputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_48AlphaConvertibleLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_50CollectionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_52ListLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_54SetLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_56UnionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_58IntersectionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_60ComplementLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_62SetDifferenceLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_64MemberLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_66SubsetLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_68ContextLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_70TrueLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_72FalseLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_74AndLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_76OrLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_78NotLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_80SequentialAndLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_82SequentialOrLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_84ChoiceLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_86PresentLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_88AbsentLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_90AlwaysLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_92ContinuationLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_94EdgeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_96LexicalNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_98AnyNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_100Connector(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_102SexNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_104ConnectorDir(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_106BondNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_108ConnectorSeq(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_110ConnectorSet(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_112ConnectorChoice(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_114Section(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_116ShapeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_118CrossSection(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_120ItemNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_122ItemClassNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_124TagNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_126TagLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_128VariableNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_130VariableList(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_132VariableSet(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_134GlobNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_136QuoteLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_138UnquoteLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_140DontExecLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_142LocalQuoteLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_144ReplacementLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_146FreeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_148DeleteLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_150UniqueLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_152StateLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_154DefineLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_156GrantLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_158ScopeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_160RewriteLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_162PrenexLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_164LambdaLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_166PutLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_168JoinLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_170MinimalJoinLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_172UpperSetLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_174MaximalJoinLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_176RuleLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_178VardeclOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_180PremiseOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_182ConclusionOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_184PatternLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_186SatisfyingLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_188MeetLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_190GetLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_192QueryLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_194BindLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_196DualLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_198EvaluationLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_200TypeNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_202TypeInhNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_204TypeCoInhNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_206DefinedTypeNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_208TypeChoice(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_210TypeIntersectionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_212ArrowLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_214SignatureLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_216SignNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_218LinkSignatureLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_220TypedVariableLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_222TypedAtomLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_224IntervalLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_226AnchorNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_228SimilarityLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_230VirtualLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_232GreaterThanLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_234LessThanLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_236IsClosedLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_238IsTrueLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_240IsFalseLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_242IdenticalLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_244EqualLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_246AlphaEqualLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_248ExclusiveLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_250SatisfactionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_252FunctionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_254BoolOpLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_256BoolAndLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_258BoolOrLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_260BoolNotLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_262NumericFunctionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_264FoldLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_266ArithmeticLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_268PlusLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_270MinusLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_272TimesLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_274DivideLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_276MinLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_278MaxLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_280FloorLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_282HeavisideLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_284ImpulseLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_286Log2Link(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_288PowLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_290RandomNumberLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_292SineLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_294AccumulateLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_296DecimateLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_298ElementOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_300NumberOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_302TimeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_304ValueOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_306BoolValueOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_308FloatValueOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_310StreamValueOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_312TruthValueOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_314StrengthOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_316ConfidenceOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_318CountOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_320SizeOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_322TypeOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_324IncomingOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_326CollectionOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_328SetValueLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_330SetTVLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_332ValueShimLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_334PromiseLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_336PromisePredicateLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_338FormulaPredicateLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_340FilterLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_342ExecutionOutputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_344RandomChoiceLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_346CondLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_348SleepLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_350ParallelLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_352ThreadJoinLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_354ExecuteThreadedLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_356PureExecLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_358ProcedureNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_360DefinedProcedureNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_362GroundedProcedureNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_364GroundedPredicateNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_366DefinedPredicateNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_368SchemaNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_370DefinedSchemaNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_372GroundedSchemaNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_374ForeignAst(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_376SexprAst(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_378DatalogAst(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_380JsonAst(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_382PythonAst(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_384DirectlyEvaluatableLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_386ImplicationLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_388InheritanceLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_390ForAllLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_392ExistsLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_394AssociativeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_396EquivalenceLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_398ExecutionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_400FloatValue(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_arg); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_402LinkValue(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_arg); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_404StringValue(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_arg); /* proto */
static PyObject *__pyx_pf_7opencog_17type_constructors_406TruthValue(CYTHON_UNUSED PyObject *__pyx_self, __pyx_t_7opencog_9atomspace_strength_t __pyx_v_strength, __pyx_t_7opencog_9atomspace_confidence_t __pyx_v_confidence); /* proto */
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__64;
static PyObject *__pyx_tuple__66;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_tuple__70;
static PyObject *__pyx_tuple__72;
static PyObject *__pyx_tuple__74;
static PyObject *__pyx_tuple__76;
static PyObject *__pyx_tuple__78;
static PyObject *__pyx_tuple__80;
static PyObject *__pyx_tuple__82;
static PyObject *__pyx_tuple__84;
static PyObject *__pyx_tuple__86;
static PyObject *__pyx_tuple__88;
static PyObject *__pyx_tuple__90;
static PyObject *__pyx_tuple__92;
static PyObject *__pyx_tuple__94;
static PyObject *__pyx_tuple__96;
static PyObject *__pyx_tuple__98;
static PyObject *__pyx_codeobj__4;
static PyObject *__pyx_codeobj__5;
static PyObject *__pyx_codeobj__7;
static PyObject *__pyx_codeobj__9;
static PyObject *__pyx_tuple__100;
static PyObject *__pyx_tuple__102;
static PyObject *__pyx_tuple__104;
static PyObject *__pyx_tuple__106;
static PyObject *__pyx_tuple__108;
static PyObject *__pyx_tuple__110;
static PyObject *__pyx_tuple__112;
static PyObject *__pyx_tuple__114;
static PyObject *__pyx_tuple__116;
static PyObject *__pyx_tuple__118;
static PyObject *__pyx_tuple__120;
static PyObject *__pyx_tuple__122;
static PyObject *__pyx_tuple__124;
static PyObject *__pyx_tuple__126;
static PyObject *__pyx_tuple__128;
static PyObject *__pyx_tuple__130;
static PyObject *__pyx_tuple__132;
static PyObject *__pyx_tuple__134;
static PyObject *__pyx_tuple__136;
static PyObject *__pyx_tuple__138;
static PyObject *__pyx_tuple__140;
static PyObject *__pyx_tuple__142;
static PyObject *__pyx_tuple__144;
static PyObject *__pyx_tuple__146;
static PyObject *__pyx_tuple__148;
static PyObject *__pyx_tuple__150;
static PyObject *__pyx_tuple__152;
static PyObject *__pyx_tuple__154;
static PyObject *__pyx_tuple__156;
static PyObject *__pyx_tuple__158;
static PyObject *__pyx_tuple__160;
static PyObject *__pyx_tuple__162;
static PyObject *__pyx_tuple__164;
static PyObject *__pyx_tuple__166;
static PyObject *__pyx_tuple__168;
static PyObject *__pyx_tuple__170;
static PyObject *__pyx_tuple__172;
static PyObject *__pyx_tuple__174;
static PyObject *__pyx_tuple__176;
static PyObject *__pyx_tuple__178;
static PyObject *__pyx_tuple__180;
static PyObject *__pyx_tuple__182;
static PyObject *__pyx_tuple__184;
static PyObject *__pyx_tuple__186;
static PyObject *__pyx_tuple__188;
static PyObject *__pyx_tuple__190;
static PyObject *__pyx_tuple__192;
static PyObject *__pyx_tuple__194;
static PyObject *__pyx_tuple__196;
static PyObject *__pyx_tuple__198;
static PyObject *__pyx_tuple__200;
static PyObject *__pyx_tuple__202;
static PyObject *__pyx_tuple__204;
static PyObject *__pyx_tuple__206;
static PyObject *__pyx_tuple__208;
static PyObject *__pyx_tuple__210;
static PyObject *__pyx_tuple__212;
static PyObject *__pyx_tuple__214;
static PyObject *__pyx_tuple__216;
static PyObject *__pyx_tuple__218;
static PyObject *__pyx_tuple__220;
static PyObject *__pyx_tuple__222;
static PyObject *__pyx_tuple__224;
static PyObject *__pyx_tuple__226;
static PyObject *__pyx_tuple__228;
static PyObject *__pyx_tuple__230;
static PyObject *__pyx_tuple__232;
static PyObject *__pyx_tuple__234;
static PyObject *__pyx_tuple__236;
static PyObject *__pyx_tuple__238;
static PyObject *__pyx_tuple__240;
static PyObject *__pyx_tuple__242;
static PyObject *__pyx_tuple__244;
static PyObject *__pyx_tuple__246;
static PyObject *__pyx_tuple__248;
static PyObject *__pyx_tuple__250;
static PyObject *__pyx_tuple__252;
static PyObject *__pyx_tuple__254;
static PyObject *__pyx_tuple__256;
static PyObject *__pyx_tuple__258;
static PyObject *__pyx_tuple__260;
static PyObject *__pyx_tuple__262;
static PyObject *__pyx_tuple__264;
static PyObject *__pyx_tuple__266;
static PyObject *__pyx_tuple__268;
static PyObject *__pyx_tuple__270;
static PyObject *__pyx_tuple__272;
static PyObject *__pyx_tuple__274;
static PyObject *__pyx_tuple__276;
static PyObject *__pyx_tuple__278;
static PyObject *__pyx_tuple__280;
static PyObject *__pyx_tuple__282;
static PyObject *__pyx_tuple__284;
static PyObject *__pyx_tuple__286;
static PyObject *__pyx_tuple__288;
static PyObject *__pyx_tuple__290;
static PyObject *__pyx_tuple__292;
static PyObject *__pyx_tuple__294;
static PyObject *__pyx_tuple__296;
static PyObject *__pyx_tuple__298;
static PyObject *__pyx_tuple__300;
static PyObject *__pyx_tuple__302;
static PyObject *__pyx_tuple__304;
static PyObject *__pyx_tuple__306;
static PyObject *__pyx_tuple__308;
static PyObject *__pyx_tuple__310;
static PyObject *__pyx_tuple__312;
static PyObject *__pyx_tuple__314;
static PyObject *__pyx_tuple__316;
static PyObject *__pyx_tuple__318;
static PyObject *__pyx_tuple__320;
static PyObject *__pyx_tuple__322;
static PyObject *__pyx_tuple__324;
static PyObject *__pyx_tuple__326;
static PyObject *__pyx_tuple__328;
static PyObject *__pyx_tuple__330;
static PyObject *__pyx_tuple__332;
static PyObject *__pyx_tuple__334;
static PyObject *__pyx_tuple__336;
static PyObject *__pyx_tuple__338;
static PyObject *__pyx_tuple__340;
static PyObject *__pyx_tuple__342;
static PyObject *__pyx_tuple__344;
static PyObject *__pyx_tuple__346;
static PyObject *__pyx_tuple__348;
static PyObject *__pyx_tuple__350;
static PyObject *__pyx_tuple__352;
static PyObject *__pyx_tuple__354;
static PyObject *__pyx_tuple__356;
static PyObject *__pyx_tuple__358;
static PyObject *__pyx_tuple__360;
static PyObject *__pyx_tuple__362;
static PyObject *__pyx_tuple__364;
static PyObject *__pyx_tuple__366;
static PyObject *__pyx_tuple__368;
static PyObject *__pyx_tuple__370;
static PyObject *__pyx_tuple__372;
static PyObject *__pyx_tuple__374;
static PyObject *__pyx_tuple__376;
static PyObject *__pyx_tuple__378;
static PyObject *__pyx_tuple__380;
static PyObject *__pyx_tuple__382;
static PyObject *__pyx_tuple__384;
static PyObject *__pyx_tuple__386;
static PyObject *__pyx_tuple__388;
static PyObject *__pyx_tuple__390;
static PyObject *__pyx_tuple__392;
static PyObject *__pyx_tuple__394;
static PyObject *__pyx_tuple__396;
static PyObject *__pyx_tuple__398;
static PyObject *__pyx_tuple__400;
static PyObject *__pyx_tuple__402;
static PyObject *__pyx_tuple__404;
static PyObject *__pyx_tuple__406;
static PyObject *__pyx_tuple__408;
static PyObject *__pyx_codeobj__11;
static PyObject *__pyx_codeobj__13;
static PyObject *__pyx_codeobj__15;
static PyObject *__pyx_codeobj__17;
static PyObject *__pyx_codeobj__19;
static PyObject *__pyx_codeobj__21;
static PyObject *__pyx_codeobj__23;
static PyObject *__pyx_codeobj__25;
static PyObject *__pyx_codeobj__27;
static PyObject *__pyx_codeobj__29;
static PyObject *__pyx_codeobj__31;
static PyObject *__pyx_codeobj__33;
static PyObject *__pyx_codeobj__35;
static PyObject *__pyx_codeobj__37;
static PyObject *__pyx_codeobj__39;
static PyObject *__pyx_codeobj__41;
static PyObject *__pyx_codeobj__43;
static PyObject *__pyx_codeobj__45;
static PyObject *__pyx_codeobj__47;
static PyObject *__pyx_codeobj__49;
static PyObject *__pyx_codeobj__51;
static PyObject *__pyx_codeobj__53;
static PyObject *__pyx_codeobj__55;
static PyObject *__pyx_codeobj__57;
static PyObject *__pyx_codeobj__59;
static PyObject *__pyx_codeobj__61;
static PyObject *__pyx_codeobj__63;
static PyObject *__pyx_codeobj__65;
static PyObject *__pyx_codeobj__67;
static PyObject *__pyx_codeobj__69;
static PyObject *__pyx_codeobj__71;
static PyObject *__pyx_codeobj__73;
static PyObject *__pyx_codeobj__75;
static PyObject *__pyx_codeobj__77;
static PyObject *__pyx_codeobj__79;
static PyObject *__pyx_codeobj__81;
static PyObject *__pyx_codeobj__83;
static PyObject *__pyx_codeobj__85;
static PyObject *__pyx_codeobj__87;
static PyObject *__pyx_codeobj__89;
static PyObject *__pyx_codeobj__91;
static PyObject *__pyx_codeobj__93;
static PyObject *__pyx_codeobj__95;
static PyObject *__pyx_codeobj__97;
static PyObject *__pyx_codeobj__99;
static PyObject *__pyx_codeobj__101;
static PyObject *__pyx_codeobj__103;
static PyObject *__pyx_codeobj__105;
static PyObject *__pyx_codeobj__107;
static PyObject *__pyx_codeobj__109;
static PyObject *__pyx_codeobj__111;
static PyObject *__pyx_codeobj__113;
static PyObject *__pyx_codeobj__115;
static PyObject *__pyx_codeobj__117;
static PyObject *__pyx_codeobj__119;
static PyObject *__pyx_codeobj__121;
static PyObject *__pyx_codeobj__123;
static PyObject *__pyx_codeobj__125;
static PyObject *__pyx_codeobj__127;
static PyObject *__pyx_codeobj__129;
static PyObject *__pyx_codeobj__131;
static PyObject *__pyx_codeobj__133;
static PyObject *__pyx_codeobj__135;
static PyObject *__pyx_codeobj__137;
static PyObject *__pyx_codeobj__139;
static PyObject *__pyx_codeobj__141;
static PyObject *__pyx_codeobj__143;
static PyObject *__pyx_codeobj__145;
static PyObject *__pyx_codeobj__147;
static PyObject *__pyx_codeobj__149;
static PyObject *__pyx_codeobj__151;
static PyObject *__pyx_codeobj__153;
static PyObject *__pyx_codeobj__155;
static PyObject *__pyx_codeobj__157;
static PyObject *__pyx_codeobj__159;
static PyObject *__pyx_codeobj__161;
static PyObject *__pyx_codeobj__163;
static PyObject *__pyx_codeobj__165;
static PyObject *__pyx_codeobj__167;
static PyObject *__pyx_codeobj__169;
static PyObject *__pyx_codeobj__171;
static PyObject *__pyx_codeobj__173;
static PyObject *__pyx_codeobj__175;
static PyObject *__pyx_codeobj__177;
static PyObject *__pyx_codeobj__179;
static PyObject *__pyx_codeobj__181;
static PyObject *__pyx_codeobj__183;
static PyObject *__pyx_codeobj__185;
static PyObject *__pyx_codeobj__187;
static PyObject *__pyx_codeobj__189;
static PyObject *__pyx_codeobj__191;
static PyObject *__pyx_codeobj__193;
static PyObject *__pyx_codeobj__195;
static PyObject *__pyx_codeobj__197;
static PyObject *__pyx_codeobj__199;
static PyObject *__pyx_codeobj__201;
static PyObject *__pyx_codeobj__203;
static PyObject *__pyx_codeobj__205;
static PyObject *__pyx_codeobj__207;
static PyObject *__pyx_codeobj__209;
static PyObject *__pyx_codeobj__211;
static PyObject *__pyx_codeobj__213;
static PyObject *__pyx_codeobj__215;
static PyObject *__pyx_codeobj__217;
static PyObject *__pyx_codeobj__219;
static PyObject *__pyx_codeobj__221;
static PyObject *__pyx_codeobj__223;
static PyObject *__pyx_codeobj__225;
static PyObject *__pyx_codeobj__227;
static PyObject *__pyx_codeobj__229;
static PyObject *__pyx_codeobj__231;
static PyObject *__pyx_codeobj__233;
static PyObject *__pyx_codeobj__235;
static PyObject *__pyx_codeobj__237;
static PyObject *__pyx_codeobj__239;
static PyObject *__pyx_codeobj__241;
static PyObject *__pyx_codeobj__243;
static PyObject *__pyx_codeobj__245;
static PyObject *__pyx_codeobj__247;
static PyObject *__pyx_codeobj__249;
static PyObject *__pyx_codeobj__251;
static PyObject *__pyx_codeobj__253;
static PyObject *__pyx_codeobj__255;
static PyObject *__pyx_codeobj__257;
static PyObject *__pyx_codeobj__259;
static PyObject *__pyx_codeobj__261;
static PyObject *__pyx_codeobj__263;
static PyObject *__pyx_codeobj__265;
static PyObject *__pyx_codeobj__267;
static PyObject *__pyx_codeobj__269;
static PyObject *__pyx_codeobj__271;
static PyObject *__pyx_codeobj__273;
static PyObject *__pyx_codeobj__275;
static PyObject *__pyx_codeobj__277;
static PyObject *__pyx_codeobj__279;
static PyObject *__pyx_codeobj__281;
static PyObject *__pyx_codeobj__283;
static PyObject *__pyx_codeobj__285;
static PyObject *__pyx_codeobj__287;
static PyObject *__pyx_codeobj__289;
static PyObject *__pyx_codeobj__291;
static PyObject *__pyx_codeobj__293;
static PyObject *__pyx_codeobj__295;
static PyObject *__pyx_codeobj__297;
static PyObject *__pyx_codeobj__299;
static PyObject *__pyx_codeobj__301;
static PyObject *__pyx_codeobj__303;
static PyObject *__pyx_codeobj__305;
static PyObject *__pyx_codeobj__307;
static PyObject *__pyx_codeobj__309;
static PyObject *__pyx_codeobj__311;
static PyObject *__pyx_codeobj__313;
static PyObject *__pyx_codeobj__315;
static PyObject *__pyx_codeobj__317;
static PyObject *__pyx_codeobj__319;
static PyObject *__pyx_codeobj__321;
static PyObject *__pyx_codeobj__323;
static PyObject *__pyx_codeobj__325;
static PyObject *__pyx_codeobj__327;
static PyObject *__pyx_codeobj__329;
static PyObject *__pyx_codeobj__331;
static PyObject *__pyx_codeobj__333;
static PyObject *__pyx_codeobj__335;
static PyObject *__pyx_codeobj__337;
static PyObject *__pyx_codeobj__339;
static PyObject *__pyx_codeobj__341;
static PyObject *__pyx_codeobj__343;
static PyObject *__pyx_codeobj__345;
static PyObject *__pyx_codeobj__347;
static PyObject *__pyx_codeobj__349;
static PyObject *__pyx_codeobj__351;
static PyObject *__pyx_codeobj__353;
static PyObject *__pyx_codeobj__355;
static PyObject *__pyx_codeobj__357;
static PyObject *__pyx_codeobj__359;
static PyObject *__pyx_codeobj__361;
static PyObject *__pyx_codeobj__363;
static PyObject *__pyx_codeobj__365;
static PyObject *__pyx_codeobj__367;
static PyObject *__pyx_codeobj__369;
static PyObject *__pyx_codeobj__371;
static PyObject *__pyx_codeobj__373;
static PyObject *__pyx_codeobj__375;
static PyObject *__pyx_codeobj__377;
static PyObject *__pyx_codeobj__379;
static PyObject *__pyx_codeobj__381;
static PyObject *__pyx_codeobj__383;
static PyObject *__pyx_codeobj__385;
static PyObject *__pyx_codeobj__387;
static PyObject *__pyx_codeobj__389;
static PyObject *__pyx_codeobj__391;
static PyObject *__pyx_codeobj__393;
static PyObject *__pyx_codeobj__395;
static PyObject *__pyx_codeobj__397;
static PyObject *__pyx_codeobj__399;
static PyObject *__pyx_codeobj__401;
static PyObject *__pyx_codeobj__403;
static PyObject *__pyx_codeobj__405;
static PyObject *__pyx_codeobj__407;
static PyObject *__pyx_codeobj__409;
/* Late includes */

/* "opencog/type_constructors.pyx":20
 * 
 * 
 * def set_type_ctor_atomspace(new_atomspace):             # <<<<<<<<<<<<<<
 *     warnings.warn('set_type_ctor_atomspace is deprecated, use set_default_atomspace instead',
 *             DeprecationWarning)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_1set_type_ctor_atomspace(PyObject *__pyx_self, PyObject *__pyx_v_new_atomspace); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_1set_type_ctor_atomspace = {"set_type_ctor_atomspace", (PyCFunction)__pyx_pw_7opencog_17type_constructors_1set_type_ctor_atomspace, METH_O, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_1set_type_ctor_atomspace(PyObject *__pyx_self, PyObject *__pyx_v_new_atomspace) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_type_ctor_atomspace (wrapper)", 0);
  __pyx_r = __pyx_pf_7opencog_17type_constructors_set_type_ctor_atomspace(__pyx_self, ((PyObject *)__pyx_v_new_atomspace));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_set_type_ctor_atomspace(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_new_atomspace) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_type_ctor_atomspace", 0);

  /* "opencog/type_constructors.pyx":21
 * 
 * def set_type_ctor_atomspace(new_atomspace):
 *     warnings.warn('set_type_ctor_atomspace is deprecated, use set_default_atomspace instead',             # <<<<<<<<<<<<<<
 *             DeprecationWarning)
 *     return set_default_atomspace(new_atomspace)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":22
 * def set_type_ctor_atomspace(new_atomspace):
 *     warnings.warn('set_type_ctor_atomspace is deprecated, use set_default_atomspace instead',
 *             DeprecationWarning)             # <<<<<<<<<<<<<<
 *     return set_default_atomspace(new_atomspace)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":23
 *     warnings.warn('set_type_ctor_atomspace is deprecated, use set_default_atomspace instead',
 *             DeprecationWarning)
 *     return set_default_atomspace(new_atomspace)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_set_default_atomspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_new_atomspace) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_new_atomspace);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "opencog/type_constructors.pyx":20
 * 
 * 
 * def set_type_ctor_atomspace(new_atomspace):             # <<<<<<<<<<<<<<
 *     warnings.warn('set_type_ctor_atomspace is deprecated, use set_default_atomspace instead',
 *             DeprecationWarning)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("opencog.type_constructors.set_type_ctor_atomspace", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "opencog/type_constructors.pyx":26
 * 
 * 
 * def get_type_ctor_atomspace():             # <<<<<<<<<<<<<<
 *     warnings.warn('get_type_ctor_atomspace is deprecated, use get_default_atomspace instead',
 *             DeprecationWarning)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_3get_type_ctor_atomspace(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_3get_type_ctor_atomspace = {"get_type_ctor_atomspace", (PyCFunction)__pyx_pw_7opencog_17type_constructors_3get_type_ctor_atomspace, METH_NOARGS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_3get_type_ctor_atomspace(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_type_ctor_atomspace (wrapper)", 0);
  __pyx_r = __pyx_pf_7opencog_17type_constructors_2get_type_ctor_atomspace(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_2get_type_ctor_atomspace(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_type_ctor_atomspace", 0);

  /* "opencog/type_constructors.pyx":27
 * 
 * def get_type_ctor_atomspace():
 *     warnings.warn('get_type_ctor_atomspace is deprecated, use get_default_atomspace instead',             # <<<<<<<<<<<<<<
 *             DeprecationWarning)
 *     return get_default_atomspace()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":28
 * def get_type_ctor_atomspace():
 *     warnings.warn('get_type_ctor_atomspace is deprecated, use get_default_atomspace instead',
 *             DeprecationWarning)             # <<<<<<<<<<<<<<
 *     return get_default_atomspace()
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":29
 *     warnings.warn('get_type_ctor_atomspace is deprecated, use get_default_atomspace instead',
 *             DeprecationWarning)
 *     return get_default_atomspace()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_get_default_atomspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "opencog/type_constructors.pyx":26
 * 
 * 
 * def get_type_ctor_atomspace():             # <<<<<<<<<<<<<<
 *     warnings.warn('get_type_ctor_atomspace is deprecated, use get_default_atomspace instead',
 *             DeprecationWarning)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("opencog.type_constructors.get_type_ctor_atomspace", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":10
 * #
 * 
 * def Notype(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Notype, args, tv=tv)
 * def TopType(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_5Notype(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_5Notype = {"Notype", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_5Notype, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_5Notype(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Notype (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "Notype") < 0)) __PYX_ERR(1, 10, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Notype", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 10, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.Notype", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_4Notype(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_4Notype(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Notype", 0);

  /* "../../atoms/atom_types/core_types.pyx":11
 * 
 * def Notype(*args, tv=None):
 *     return add_link(types.Notype, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TopType(*args, tv=None):
 *     return add_link(types.TopType, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_Notype); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 11, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":10
 * #
 * 
 * def Notype(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Notype, args, tv=tv)
 * def TopType(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.Notype", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":12
 * def Notype(*args, tv=None):
 *     return add_link(types.Notype, args, tv=tv)
 * def TopType(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TopType, args, tv=tv)
 * def Valuation(*args):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_7TopType(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_7TopType = {"TopType", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_7TopType, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_7TopType(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TopType (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TopType") < 0)) __PYX_ERR(1, 12, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TopType", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 12, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TopType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_6TopType(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_6TopType(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TopType", 0);

  /* "../../atoms/atom_types/core_types.pyx":13
 *     return add_link(types.Notype, args, tv=tv)
 * def TopType(*args, tv=None):
 *     return add_link(types.TopType, args, tv=tv)             # <<<<<<<<<<<<<<
 * def Valuation(*args):
 *     return add_link(types.Valuation, args)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TopType); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":12
 * def Notype(*args, tv=None):
 *     return add_link(types.Notype, args, tv=tv)
 * def TopType(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TopType, args, tv=tv)
 * def Valuation(*args):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TopType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":14
 * def TopType(*args, tv=None):
 *     return add_link(types.TopType, args, tv=tv)
 * def Valuation(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.Valuation, args)
 * def Frame(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_9Valuation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_9Valuation = {"Valuation", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_9Valuation, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_9Valuation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Valuation (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "Valuation", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_8Valuation(__pyx_self, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_8Valuation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Valuation", 0);

  /* "../../atoms/atom_types/core_types.pyx":15
 *     return add_link(types.TopType, args, tv=tv)
 * def Valuation(*args):
 *     return add_link(types.Valuation, args)             # <<<<<<<<<<<<<<
 * def Frame(*args, tv=None):
 *     return add_link(types.Frame, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_link); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_Valuation); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_args);
    __Pyx_GIVEREF(__pyx_v_args);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_args);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":14
 * def TopType(*args, tv=None):
 *     return add_link(types.TopType, args, tv=tv)
 * def Valuation(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.Valuation, args)
 * def Frame(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.Valuation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":16
 * def Valuation(*args):
 *     return add_link(types.Valuation, args)
 * def Frame(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Frame, args, tv=tv)
 * def Node(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_11Frame(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_11Frame = {"Frame", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_11Frame, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_11Frame(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Frame (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "Frame") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Frame", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.Frame", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_10Frame(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_10Frame(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Frame", 0);

  /* "../../atoms/atom_types/core_types.pyx":17
 *     return add_link(types.Valuation, args)
 * def Frame(*args, tv=None):
 *     return add_link(types.Frame, args, tv=tv)             # <<<<<<<<<<<<<<
 * def Node(node_name, tv=None):
 *     return add_node(types.Node, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_Frame); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":16
 * def Valuation(*args):
 *     return add_link(types.Valuation, args)
 * def Frame(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Frame, args, tv=tv)
 * def Node(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.Frame", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":18
 * def Frame(*args, tv=None):
 *     return add_link(types.Frame, args, tv=tv)
 * def Node(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.Node, node_name, tv)
 * def Link(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_13Node(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_13Node = {"Node", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_13Node, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_13Node(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Node (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "Node") < 0)) __PYX_ERR(1, 18, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Node", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 18, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.Node", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_12Node(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_12Node(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Node", 0);

  /* "../../atoms/atom_types/core_types.pyx":19
 *     return add_link(types.Frame, args, tv=tv)
 * def Node(node_name, tv=None):
 *     return add_node(types.Node, node_name, tv)             # <<<<<<<<<<<<<<
 * def Link(*args, tv=None):
 *     return add_link(types.Link, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_Node); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 19, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 19, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":18
 * def Frame(*args, tv=None):
 *     return add_link(types.Frame, args, tv=tv)
 * def Node(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.Node, node_name, tv)
 * def Link(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.Node", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":20
 * def Node(node_name, tv=None):
 *     return add_node(types.Node, node_name, tv)
 * def Link(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Link, args, tv=tv)
 * def ConceptNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_15Link(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_15Link = {"Link", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_15Link, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_15Link(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Link (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "Link") < 0)) __PYX_ERR(1, 20, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Link", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 20, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.Link", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_14Link(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_14Link(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Link", 0);

  /* "../../atoms/atom_types/core_types.pyx":21
 *     return add_node(types.Node, node_name, tv)
 * def Link(*args, tv=None):
 *     return add_link(types.Link, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ConceptNode(node_name, tv=None):
 *     return add_node(types.ConceptNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_Link); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 21, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":20
 * def Node(node_name, tv=None):
 *     return add_node(types.Node, node_name, tv)
 * def Link(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Link, args, tv=tv)
 * def ConceptNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.Link", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":22
 * def Link(*args, tv=None):
 *     return add_link(types.Link, args, tv=tv)
 * def ConceptNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ConceptNode, node_name, tv)
 * def NumberNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_17ConceptNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_17ConceptNode = {"ConceptNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_17ConceptNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_17ConceptNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ConceptNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ConceptNode") < 0)) __PYX_ERR(1, 22, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ConceptNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 22, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.ConceptNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_16ConceptNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_16ConceptNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ConceptNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":23
 *     return add_link(types.Link, args, tv=tv)
 * def ConceptNode(node_name, tv=None):
 *     return add_node(types.ConceptNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def NumberNode(node_name, tv=None):
 *     return add_node(types.NumberNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ConceptNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 23, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 23, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 23, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 23, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":22
 * def Link(*args, tv=None):
 *     return add_link(types.Link, args, tv=tv)
 * def ConceptNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ConceptNode, node_name, tv)
 * def NumberNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.ConceptNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":24
 * def ConceptNode(node_name, tv=None):
 *     return add_node(types.ConceptNode, node_name, tv)
 * def NumberNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.NumberNode, node_name, tv)
 * def OrderedLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_19NumberNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_19NumberNode = {"NumberNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_19NumberNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_19NumberNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("NumberNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "NumberNode") < 0)) __PYX_ERR(1, 24, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("NumberNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 24, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.NumberNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_18NumberNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_18NumberNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("NumberNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":25
 *     return add_node(types.ConceptNode, node_name, tv)
 * def NumberNode(node_name, tv=None):
 *     return add_node(types.NumberNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def OrderedLink(*args, tv=None):
 *     return add_link(types.OrderedLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_NumberNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 25, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 25, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":24
 * def ConceptNode(node_name, tv=None):
 *     return add_node(types.ConceptNode, node_name, tv)
 * def NumberNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.NumberNode, node_name, tv)
 * def OrderedLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.NumberNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":26
 * def NumberNode(node_name, tv=None):
 *     return add_node(types.NumberNode, node_name, tv)
 * def OrderedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.OrderedLink, args, tv=tv)
 * def UnorderedLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_21OrderedLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_21OrderedLink = {"OrderedLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_21OrderedLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_21OrderedLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("OrderedLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "OrderedLink") < 0)) __PYX_ERR(1, 26, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("OrderedLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 26, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.OrderedLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_20OrderedLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_20OrderedLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("OrderedLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":27
 *     return add_node(types.NumberNode, node_name, tv)
 * def OrderedLink(*args, tv=None):
 *     return add_link(types.OrderedLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def UnorderedLink(*args, tv=None):
 *     return add_link(types.UnorderedLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_OrderedLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 27, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":26
 * def NumberNode(node_name, tv=None):
 *     return add_node(types.NumberNode, node_name, tv)
 * def OrderedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.OrderedLink, args, tv=tv)
 * def UnorderedLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.OrderedLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":28
 * def OrderedLink(*args, tv=None):
 *     return add_link(types.OrderedLink, args, tv=tv)
 * def UnorderedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnorderedLink, args, tv=tv)
 * def PredicateNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_23UnorderedLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_23UnorderedLink = {"UnorderedLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_23UnorderedLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_23UnorderedLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("UnorderedLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "UnorderedLink") < 0)) __PYX_ERR(1, 28, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("UnorderedLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 28, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.UnorderedLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_22UnorderedLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_22UnorderedLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("UnorderedLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":29
 *     return add_link(types.OrderedLink, args, tv=tv)
 * def UnorderedLink(*args, tv=None):
 *     return add_link(types.UnorderedLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def PredicateNode(node_name, tv=None):
 *     return add_node(types.PredicateNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_UnorderedLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 29, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":28
 * def OrderedLink(*args, tv=None):
 *     return add_link(types.OrderedLink, args, tv=tv)
 * def UnorderedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnorderedLink, args, tv=tv)
 * def PredicateNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.UnorderedLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":30
 * def UnorderedLink(*args, tv=None):
 *     return add_link(types.UnorderedLink, args, tv=tv)
 * def PredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.PredicateNode, node_name, tv)
 * def ValuableLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_25PredicateNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_25PredicateNode = {"PredicateNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_25PredicateNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_25PredicateNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PredicateNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "PredicateNode") < 0)) __PYX_ERR(1, 30, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PredicateNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 30, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.PredicateNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_24PredicateNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_24PredicateNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PredicateNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":31
 *     return add_link(types.UnorderedLink, args, tv=tv)
 * def PredicateNode(node_name, tv=None):
 *     return add_node(types.PredicateNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def ValuableLink(*args, tv=None):
 *     return add_link(types.ValuableLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_PredicateNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 31, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 31, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 31, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 31, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":30
 * def UnorderedLink(*args, tv=None):
 *     return add_link(types.UnorderedLink, args, tv=tv)
 * def PredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.PredicateNode, node_name, tv)
 * def ValuableLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.PredicateNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":32
 * def PredicateNode(node_name, tv=None):
 *     return add_node(types.PredicateNode, node_name, tv)
 * def ValuableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValuableLink, args, tv=tv)
 * def EvaluatableLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_27ValuableLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_27ValuableLink = {"ValuableLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_27ValuableLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_27ValuableLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ValuableLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ValuableLink") < 0)) __PYX_ERR(1, 32, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ValuableLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 32, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ValuableLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_26ValuableLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_26ValuableLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ValuableLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":33
 *     return add_node(types.PredicateNode, node_name, tv)
 * def ValuableLink(*args, tv=None):
 *     return add_link(types.ValuableLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def EvaluatableLink(*args, tv=None):
 *     return add_link(types.EvaluatableLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ValuableLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 33, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":32
 * def PredicateNode(node_name, tv=None):
 *     return add_node(types.PredicateNode, node_name, tv)
 * def ValuableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValuableLink, args, tv=tv)
 * def EvaluatableLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ValuableLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":34
 * def ValuableLink(*args, tv=None):
 *     return add_link(types.ValuableLink, args, tv=tv)
 * def EvaluatableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EvaluatableLink, args, tv=tv)
 * def ExecutableLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_29EvaluatableLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_29EvaluatableLink = {"EvaluatableLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_29EvaluatableLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_29EvaluatableLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("EvaluatableLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "EvaluatableLink") < 0)) __PYX_ERR(1, 34, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("EvaluatableLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 34, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.EvaluatableLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_28EvaluatableLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_28EvaluatableLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("EvaluatableLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":35
 *     return add_link(types.ValuableLink, args, tv=tv)
 * def EvaluatableLink(*args, tv=None):
 *     return add_link(types.EvaluatableLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ExecutableLink(*args, tv=None):
 *     return add_link(types.ExecutableLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_EvaluatableLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 35, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":34
 * def ValuableLink(*args, tv=None):
 *     return add_link(types.ValuableLink, args, tv=tv)
 * def EvaluatableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EvaluatableLink, args, tv=tv)
 * def ExecutableLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.EvaluatableLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":36
 * def EvaluatableLink(*args, tv=None):
 *     return add_link(types.EvaluatableLink, args, tv=tv)
 * def ExecutableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutableLink, args, tv=tv)
 * def CrispInputLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_31ExecutableLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_31ExecutableLink = {"ExecutableLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_31ExecutableLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_31ExecutableLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ExecutableLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ExecutableLink") < 0)) __PYX_ERR(1, 36, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ExecutableLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 36, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ExecutableLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_30ExecutableLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_30ExecutableLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ExecutableLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":37
 *     return add_link(types.EvaluatableLink, args, tv=tv)
 * def ExecutableLink(*args, tv=None):
 *     return add_link(types.ExecutableLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def CrispInputLink(*args, tv=None):
 *     return add_link(types.CrispInputLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ExecutableLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 37, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":36
 * def EvaluatableLink(*args, tv=None):
 *     return add_link(types.EvaluatableLink, args, tv=tv)
 * def ExecutableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutableLink, args, tv=tv)
 * def CrispInputLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ExecutableLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":38
 * def ExecutableLink(*args, tv=None):
 *     return add_link(types.ExecutableLink, args, tv=tv)
 * def CrispInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrispInputLink, args, tv=tv)
 * def CrispOutputLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_33CrispInputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_33CrispInputLink = {"CrispInputLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_33CrispInputLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_33CrispInputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CrispInputLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "CrispInputLink") < 0)) __PYX_ERR(1, 38, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CrispInputLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 38, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.CrispInputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_32CrispInputLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_32CrispInputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("CrispInputLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":39
 *     return add_link(types.ExecutableLink, args, tv=tv)
 * def CrispInputLink(*args, tv=None):
 *     return add_link(types.CrispInputLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def CrispOutputLink(*args, tv=None):
 *     return add_link(types.CrispOutputLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_CrispInputLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 39, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":38
 * def ExecutableLink(*args, tv=None):
 *     return add_link(types.ExecutableLink, args, tv=tv)
 * def CrispInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrispInputLink, args, tv=tv)
 * def CrispOutputLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.CrispInputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":40
 * def CrispInputLink(*args, tv=None):
 *     return add_link(types.CrispInputLink, args, tv=tv)
 * def CrispOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrispOutputLink, args, tv=tv)
 * def BooleanInputLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_35CrispOutputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_35CrispOutputLink = {"CrispOutputLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_35CrispOutputLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_35CrispOutputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CrispOutputLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "CrispOutputLink") < 0)) __PYX_ERR(1, 40, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CrispOutputLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 40, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.CrispOutputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_34CrispOutputLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_34CrispOutputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("CrispOutputLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":41
 *     return add_link(types.CrispInputLink, args, tv=tv)
 * def CrispOutputLink(*args, tv=None):
 *     return add_link(types.CrispOutputLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def BooleanInputLink(*args, tv=None):
 *     return add_link(types.BooleanInputLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_CrispOutputLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 41, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":40
 * def CrispInputLink(*args, tv=None):
 *     return add_link(types.CrispInputLink, args, tv=tv)
 * def CrispOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrispOutputLink, args, tv=tv)
 * def BooleanInputLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.CrispOutputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":42
 * def CrispOutputLink(*args, tv=None):
 *     return add_link(types.CrispOutputLink, args, tv=tv)
 * def BooleanInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BooleanInputLink, args, tv=tv)
 * def BooleanOutputLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_37BooleanInputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_37BooleanInputLink = {"BooleanInputLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_37BooleanInputLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_37BooleanInputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BooleanInputLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "BooleanInputLink") < 0)) __PYX_ERR(1, 42, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("BooleanInputLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 42, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.BooleanInputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_36BooleanInputLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_36BooleanInputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BooleanInputLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":43
 *     return add_link(types.CrispOutputLink, args, tv=tv)
 * def BooleanInputLink(*args, tv=None):
 *     return add_link(types.BooleanInputLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def BooleanOutputLink(*args, tv=None):
 *     return add_link(types.BooleanOutputLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_BooleanInputLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 43, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":42
 * def CrispOutputLink(*args, tv=None):
 *     return add_link(types.CrispOutputLink, args, tv=tv)
 * def BooleanInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BooleanInputLink, args, tv=tv)
 * def BooleanOutputLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.BooleanInputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":44
 * def BooleanInputLink(*args, tv=None):
 *     return add_link(types.BooleanInputLink, args, tv=tv)
 * def BooleanOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BooleanOutputLink, args, tv=tv)
 * def NumericInputLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_39BooleanOutputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_39BooleanOutputLink = {"BooleanOutputLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_39BooleanOutputLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_39BooleanOutputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BooleanOutputLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "BooleanOutputLink") < 0)) __PYX_ERR(1, 44, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("BooleanOutputLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 44, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.BooleanOutputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_38BooleanOutputLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_38BooleanOutputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BooleanOutputLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":45
 *     return add_link(types.BooleanInputLink, args, tv=tv)
 * def BooleanOutputLink(*args, tv=None):
 *     return add_link(types.BooleanOutputLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def NumericInputLink(*args, tv=None):
 *     return add_link(types.NumericInputLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_BooleanOutputLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 45, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":44
 * def BooleanInputLink(*args, tv=None):
 *     return add_link(types.BooleanInputLink, args, tv=tv)
 * def BooleanOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BooleanOutputLink, args, tv=tv)
 * def NumericInputLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.BooleanOutputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":46
 * def BooleanOutputLink(*args, tv=None):
 *     return add_link(types.BooleanOutputLink, args, tv=tv)
 * def NumericInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericInputLink, args, tv=tv)
 * def NumericOutputLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_41NumericInputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_41NumericInputLink = {"NumericInputLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_41NumericInputLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_41NumericInputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("NumericInputLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "NumericInputLink") < 0)) __PYX_ERR(1, 46, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("NumericInputLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 46, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.NumericInputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_40NumericInputLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_40NumericInputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("NumericInputLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":47
 *     return add_link(types.BooleanOutputLink, args, tv=tv)
 * def NumericInputLink(*args, tv=None):
 *     return add_link(types.NumericInputLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def NumericOutputLink(*args, tv=None):
 *     return add_link(types.NumericOutputLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_NumericInputLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 47, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":46
 * def BooleanOutputLink(*args, tv=None):
 *     return add_link(types.BooleanOutputLink, args, tv=tv)
 * def NumericInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericInputLink, args, tv=tv)
 * def NumericOutputLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.NumericInputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":48
 * def NumericInputLink(*args, tv=None):
 *     return add_link(types.NumericInputLink, args, tv=tv)
 * def NumericOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericOutputLink, args, tv=tv)
 * def TypeInputLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_43NumericOutputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_43NumericOutputLink = {"NumericOutputLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_43NumericOutputLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_43NumericOutputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("NumericOutputLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "NumericOutputLink") < 0)) __PYX_ERR(1, 48, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("NumericOutputLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 48, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.NumericOutputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_42NumericOutputLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_42NumericOutputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("NumericOutputLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":49
 *     return add_link(types.NumericInputLink, args, tv=tv)
 * def NumericOutputLink(*args, tv=None):
 *     return add_link(types.NumericOutputLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TypeInputLink(*args, tv=None):
 *     return add_link(types.TypeInputLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_NumericOutputLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 49, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":48
 * def NumericInputLink(*args, tv=None):
 *     return add_link(types.NumericInputLink, args, tv=tv)
 * def NumericOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericOutputLink, args, tv=tv)
 * def TypeInputLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.NumericOutputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":50
 * def NumericOutputLink(*args, tv=None):
 *     return add_link(types.NumericOutputLink, args, tv=tv)
 * def TypeInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeInputLink, args, tv=tv)
 * def TypeOutputLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_45TypeInputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_45TypeInputLink = {"TypeInputLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_45TypeInputLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_45TypeInputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TypeInputLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TypeInputLink") < 0)) __PYX_ERR(1, 50, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TypeInputLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 50, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TypeInputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_44TypeInputLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_44TypeInputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TypeInputLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":51
 *     return add_link(types.NumericOutputLink, args, tv=tv)
 * def TypeInputLink(*args, tv=None):
 *     return add_link(types.TypeInputLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TypeOutputLink(*args, tv=None):
 *     return add_link(types.TypeOutputLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TypeInputLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 51, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":50
 * def NumericOutputLink(*args, tv=None):
 *     return add_link(types.NumericOutputLink, args, tv=tv)
 * def TypeInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeInputLink, args, tv=tv)
 * def TypeOutputLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TypeInputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":52
 * def TypeInputLink(*args, tv=None):
 *     return add_link(types.TypeInputLink, args, tv=tv)
 * def TypeOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeOutputLink, args, tv=tv)
 * def AlphaConvertibleLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_47TypeOutputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_47TypeOutputLink = {"TypeOutputLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_47TypeOutputLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_47TypeOutputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TypeOutputLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TypeOutputLink") < 0)) __PYX_ERR(1, 52, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TypeOutputLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 52, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TypeOutputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_46TypeOutputLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_46TypeOutputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TypeOutputLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":53
 *     return add_link(types.TypeInputLink, args, tv=tv)
 * def TypeOutputLink(*args, tv=None):
 *     return add_link(types.TypeOutputLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def AlphaConvertibleLink(*args, tv=None):
 *     return add_link(types.AlphaConvertibleLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TypeOutputLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 53, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":52
 * def TypeInputLink(*args, tv=None):
 *     return add_link(types.TypeInputLink, args, tv=tv)
 * def TypeOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeOutputLink, args, tv=tv)
 * def AlphaConvertibleLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TypeOutputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":54
 * def TypeOutputLink(*args, tv=None):
 *     return add_link(types.TypeOutputLink, args, tv=tv)
 * def AlphaConvertibleLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlphaConvertibleLink, args, tv=tv)
 * def CollectionLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_49AlphaConvertibleLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_49AlphaConvertibleLink = {"AlphaConvertibleLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_49AlphaConvertibleLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_49AlphaConvertibleLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AlphaConvertibleLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "AlphaConvertibleLink") < 0)) __PYX_ERR(1, 54, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AlphaConvertibleLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 54, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.AlphaConvertibleLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_48AlphaConvertibleLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_48AlphaConvertibleLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AlphaConvertibleLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":55
 *     return add_link(types.TypeOutputLink, args, tv=tv)
 * def AlphaConvertibleLink(*args, tv=None):
 *     return add_link(types.AlphaConvertibleLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def CollectionLink(*args, tv=None):
 *     return add_link(types.CollectionLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_AlphaConvertibleLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 55, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":54
 * def TypeOutputLink(*args, tv=None):
 *     return add_link(types.TypeOutputLink, args, tv=tv)
 * def AlphaConvertibleLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlphaConvertibleLink, args, tv=tv)
 * def CollectionLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.AlphaConvertibleLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":56
 * def AlphaConvertibleLink(*args, tv=None):
 *     return add_link(types.AlphaConvertibleLink, args, tv=tv)
 * def CollectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CollectionLink, args, tv=tv)
 * def ListLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_51CollectionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_51CollectionLink = {"CollectionLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_51CollectionLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_51CollectionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CollectionLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "CollectionLink") < 0)) __PYX_ERR(1, 56, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CollectionLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 56, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.CollectionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_50CollectionLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_50CollectionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("CollectionLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":57
 *     return add_link(types.AlphaConvertibleLink, args, tv=tv)
 * def CollectionLink(*args, tv=None):
 *     return add_link(types.CollectionLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ListLink(*args, tv=None):
 *     return add_link(types.ListLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_CollectionLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 57, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":56
 * def AlphaConvertibleLink(*args, tv=None):
 *     return add_link(types.AlphaConvertibleLink, args, tv=tv)
 * def CollectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CollectionLink, args, tv=tv)
 * def ListLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.CollectionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":58
 * def CollectionLink(*args, tv=None):
 *     return add_link(types.CollectionLink, args, tv=tv)
 * def ListLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ListLink, args, tv=tv)
 * def SetLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_53ListLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_53ListLink = {"ListLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_53ListLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_53ListLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ListLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ListLink") < 0)) __PYX_ERR(1, 58, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ListLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 58, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ListLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_52ListLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_52ListLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ListLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":59
 *     return add_link(types.CollectionLink, args, tv=tv)
 * def ListLink(*args, tv=None):
 *     return add_link(types.ListLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SetLink(*args, tv=None):
 *     return add_link(types.SetLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ListLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 59, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":58
 * def CollectionLink(*args, tv=None):
 *     return add_link(types.CollectionLink, args, tv=tv)
 * def ListLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ListLink, args, tv=tv)
 * def SetLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ListLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":60
 * def ListLink(*args, tv=None):
 *     return add_link(types.ListLink, args, tv=tv)
 * def SetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetLink, args, tv=tv)
 * def UnionLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_55SetLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_55SetLink = {"SetLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_55SetLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_55SetLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SetLink") < 0)) __PYX_ERR(1, 60, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SetLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 60, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SetLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_54SetLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_54SetLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SetLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":61
 *     return add_link(types.ListLink, args, tv=tv)
 * def SetLink(*args, tv=None):
 *     return add_link(types.SetLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def UnionLink(*args, tv=None):
 *     return add_link(types.UnionLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SetLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 61, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":60
 * def ListLink(*args, tv=None):
 *     return add_link(types.ListLink, args, tv=tv)
 * def SetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetLink, args, tv=tv)
 * def UnionLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SetLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":62
 * def SetLink(*args, tv=None):
 *     return add_link(types.SetLink, args, tv=tv)
 * def UnionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnionLink, args, tv=tv)
 * def IntersectionLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_57UnionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_57UnionLink = {"UnionLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_57UnionLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_57UnionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("UnionLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "UnionLink") < 0)) __PYX_ERR(1, 62, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("UnionLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 62, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.UnionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_56UnionLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_56UnionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("UnionLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":63
 *     return add_link(types.SetLink, args, tv=tv)
 * def UnionLink(*args, tv=None):
 *     return add_link(types.UnionLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def IntersectionLink(*args, tv=None):
 *     return add_link(types.IntersectionLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_UnionLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 63, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":62
 * def SetLink(*args, tv=None):
 *     return add_link(types.SetLink, args, tv=tv)
 * def UnionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnionLink, args, tv=tv)
 * def IntersectionLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.UnionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":64
 * def UnionLink(*args, tv=None):
 *     return add_link(types.UnionLink, args, tv=tv)
 * def IntersectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IntersectionLink, args, tv=tv)
 * def ComplementLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_59IntersectionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_59IntersectionLink = {"IntersectionLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_59IntersectionLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_59IntersectionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("IntersectionLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "IntersectionLink") < 0)) __PYX_ERR(1, 64, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("IntersectionLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 64, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.IntersectionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_58IntersectionLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_58IntersectionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("IntersectionLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":65
 *     return add_link(types.UnionLink, args, tv=tv)
 * def IntersectionLink(*args, tv=None):
 *     return add_link(types.IntersectionLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ComplementLink(*args, tv=None):
 *     return add_link(types.ComplementLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_IntersectionLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 65, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":64
 * def UnionLink(*args, tv=None):
 *     return add_link(types.UnionLink, args, tv=tv)
 * def IntersectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IntersectionLink, args, tv=tv)
 * def ComplementLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.IntersectionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":66
 * def IntersectionLink(*args, tv=None):
 *     return add_link(types.IntersectionLink, args, tv=tv)
 * def ComplementLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ComplementLink, args, tv=tv)
 * def SetDifferenceLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_61ComplementLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_61ComplementLink = {"ComplementLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_61ComplementLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_61ComplementLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ComplementLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ComplementLink") < 0)) __PYX_ERR(1, 66, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ComplementLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 66, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ComplementLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_60ComplementLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_60ComplementLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ComplementLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":67
 *     return add_link(types.IntersectionLink, args, tv=tv)
 * def ComplementLink(*args, tv=None):
 *     return add_link(types.ComplementLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SetDifferenceLink(*args, tv=None):
 *     return add_link(types.SetDifferenceLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ComplementLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 67, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":66
 * def IntersectionLink(*args, tv=None):
 *     return add_link(types.IntersectionLink, args, tv=tv)
 * def ComplementLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ComplementLink, args, tv=tv)
 * def SetDifferenceLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ComplementLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":68
 * def ComplementLink(*args, tv=None):
 *     return add_link(types.ComplementLink, args, tv=tv)
 * def SetDifferenceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetDifferenceLink, args, tv=tv)
 * def MemberLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_63SetDifferenceLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_63SetDifferenceLink = {"SetDifferenceLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_63SetDifferenceLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_63SetDifferenceLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetDifferenceLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SetDifferenceLink") < 0)) __PYX_ERR(1, 68, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SetDifferenceLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 68, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SetDifferenceLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_62SetDifferenceLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_62SetDifferenceLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SetDifferenceLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":69
 *     return add_link(types.ComplementLink, args, tv=tv)
 * def SetDifferenceLink(*args, tv=None):
 *     return add_link(types.SetDifferenceLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def MemberLink(*args, tv=None):
 *     return add_link(types.MemberLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SetDifferenceLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 69, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":68
 * def ComplementLink(*args, tv=None):
 *     return add_link(types.ComplementLink, args, tv=tv)
 * def SetDifferenceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetDifferenceLink, args, tv=tv)
 * def MemberLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SetDifferenceLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":70
 * def SetDifferenceLink(*args, tv=None):
 *     return add_link(types.SetDifferenceLink, args, tv=tv)
 * def MemberLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MemberLink, args, tv=tv)
 * def SubsetLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_65MemberLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_65MemberLink = {"MemberLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_65MemberLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_65MemberLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("MemberLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "MemberLink") < 0)) __PYX_ERR(1, 70, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("MemberLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 70, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.MemberLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_64MemberLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_64MemberLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("MemberLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":71
 *     return add_link(types.SetDifferenceLink, args, tv=tv)
 * def MemberLink(*args, tv=None):
 *     return add_link(types.MemberLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SubsetLink(*args, tv=None):
 *     return add_link(types.SubsetLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_MemberLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 71, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":70
 * def SetDifferenceLink(*args, tv=None):
 *     return add_link(types.SetDifferenceLink, args, tv=tv)
 * def MemberLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MemberLink, args, tv=tv)
 * def SubsetLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.MemberLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":72
 * def MemberLink(*args, tv=None):
 *     return add_link(types.MemberLink, args, tv=tv)
 * def SubsetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SubsetLink, args, tv=tv)
 * def ContextLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_67SubsetLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_67SubsetLink = {"SubsetLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_67SubsetLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_67SubsetLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SubsetLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SubsetLink") < 0)) __PYX_ERR(1, 72, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SubsetLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 72, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SubsetLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_66SubsetLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_66SubsetLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SubsetLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":73
 *     return add_link(types.MemberLink, args, tv=tv)
 * def SubsetLink(*args, tv=None):
 *     return add_link(types.SubsetLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ContextLink(*args, tv=None):
 *     return add_link(types.ContextLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SubsetLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 73, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":72
 * def MemberLink(*args, tv=None):
 *     return add_link(types.MemberLink, args, tv=tv)
 * def SubsetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SubsetLink, args, tv=tv)
 * def ContextLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SubsetLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":74
 * def SubsetLink(*args, tv=None):
 *     return add_link(types.SubsetLink, args, tv=tv)
 * def ContextLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ContextLink, args, tv=tv)
 * def TrueLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_69ContextLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_69ContextLink = {"ContextLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_69ContextLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_69ContextLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ContextLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ContextLink") < 0)) __PYX_ERR(1, 74, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ContextLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 74, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ContextLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_68ContextLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_68ContextLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ContextLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":75
 *     return add_link(types.SubsetLink, args, tv=tv)
 * def ContextLink(*args, tv=None):
 *     return add_link(types.ContextLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TrueLink(*args, tv=None):
 *     return add_link(types.TrueLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ContextLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 75, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":74
 * def SubsetLink(*args, tv=None):
 *     return add_link(types.SubsetLink, args, tv=tv)
 * def ContextLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ContextLink, args, tv=tv)
 * def TrueLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ContextLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":76
 * def ContextLink(*args, tv=None):
 *     return add_link(types.ContextLink, args, tv=tv)
 * def TrueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TrueLink, args, tv=tv)
 * def FalseLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_71TrueLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_71TrueLink = {"TrueLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_71TrueLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_71TrueLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TrueLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TrueLink") < 0)) __PYX_ERR(1, 76, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TrueLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 76, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TrueLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_70TrueLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_70TrueLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TrueLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":77
 *     return add_link(types.ContextLink, args, tv=tv)
 * def TrueLink(*args, tv=None):
 *     return add_link(types.TrueLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def FalseLink(*args, tv=None):
 *     return add_link(types.FalseLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TrueLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 77, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":76
 * def ContextLink(*args, tv=None):
 *     return add_link(types.ContextLink, args, tv=tv)
 * def TrueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TrueLink, args, tv=tv)
 * def FalseLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TrueLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":78
 * def TrueLink(*args, tv=None):
 *     return add_link(types.TrueLink, args, tv=tv)
 * def FalseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FalseLink, args, tv=tv)
 * def AndLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_73FalseLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_73FalseLink = {"FalseLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_73FalseLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_73FalseLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("FalseLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "FalseLink") < 0)) __PYX_ERR(1, 78, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("FalseLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 78, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.FalseLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_72FalseLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_72FalseLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FalseLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":79
 *     return add_link(types.TrueLink, args, tv=tv)
 * def FalseLink(*args, tv=None):
 *     return add_link(types.FalseLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def AndLink(*args, tv=None):
 *     return add_link(types.AndLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_FalseLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 79, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":78
 * def TrueLink(*args, tv=None):
 *     return add_link(types.TrueLink, args, tv=tv)
 * def FalseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FalseLink, args, tv=tv)
 * def AndLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.FalseLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":80
 * def FalseLink(*args, tv=None):
 *     return add_link(types.FalseLink, args, tv=tv)
 * def AndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AndLink, args, tv=tv)
 * def OrLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_75AndLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_75AndLink = {"AndLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_75AndLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_75AndLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AndLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "AndLink") < 0)) __PYX_ERR(1, 80, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AndLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 80, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.AndLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_74AndLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_74AndLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AndLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":81
 *     return add_link(types.FalseLink, args, tv=tv)
 * def AndLink(*args, tv=None):
 *     return add_link(types.AndLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def OrLink(*args, tv=None):
 *     return add_link(types.OrLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_AndLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 81, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":80
 * def FalseLink(*args, tv=None):
 *     return add_link(types.FalseLink, args, tv=tv)
 * def AndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AndLink, args, tv=tv)
 * def OrLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.AndLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":82
 * def AndLink(*args, tv=None):
 *     return add_link(types.AndLink, args, tv=tv)
 * def OrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.OrLink, args, tv=tv)
 * def NotLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_77OrLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_77OrLink = {"OrLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_77OrLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_77OrLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("OrLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "OrLink") < 0)) __PYX_ERR(1, 82, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("OrLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 82, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.OrLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_76OrLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_76OrLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("OrLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":83
 *     return add_link(types.AndLink, args, tv=tv)
 * def OrLink(*args, tv=None):
 *     return add_link(types.OrLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def NotLink(*args, tv=None):
 *     return add_link(types.NotLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_OrLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 83, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":82
 * def AndLink(*args, tv=None):
 *     return add_link(types.AndLink, args, tv=tv)
 * def OrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.OrLink, args, tv=tv)
 * def NotLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.OrLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":84
 * def OrLink(*args, tv=None):
 *     return add_link(types.OrLink, args, tv=tv)
 * def NotLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NotLink, args, tv=tv)
 * def SequentialAndLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_79NotLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_79NotLink = {"NotLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_79NotLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_79NotLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("NotLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "NotLink") < 0)) __PYX_ERR(1, 84, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("NotLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 84, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.NotLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_78NotLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_78NotLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("NotLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":85
 *     return add_link(types.OrLink, args, tv=tv)
 * def NotLink(*args, tv=None):
 *     return add_link(types.NotLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SequentialAndLink(*args, tv=None):
 *     return add_link(types.SequentialAndLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_NotLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 85, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":84
 * def OrLink(*args, tv=None):
 *     return add_link(types.OrLink, args, tv=tv)
 * def NotLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NotLink, args, tv=tv)
 * def SequentialAndLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.NotLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":86
 * def NotLink(*args, tv=None):
 *     return add_link(types.NotLink, args, tv=tv)
 * def SequentialAndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SequentialAndLink, args, tv=tv)
 * def SequentialOrLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_81SequentialAndLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_81SequentialAndLink = {"SequentialAndLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_81SequentialAndLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_81SequentialAndLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SequentialAndLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SequentialAndLink") < 0)) __PYX_ERR(1, 86, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SequentialAndLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 86, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SequentialAndLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_80SequentialAndLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_80SequentialAndLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SequentialAndLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":87
 *     return add_link(types.NotLink, args, tv=tv)
 * def SequentialAndLink(*args, tv=None):
 *     return add_link(types.SequentialAndLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SequentialOrLink(*args, tv=None):
 *     return add_link(types.SequentialOrLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SequentialAndLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 87, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":86
 * def NotLink(*args, tv=None):
 *     return add_link(types.NotLink, args, tv=tv)
 * def SequentialAndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SequentialAndLink, args, tv=tv)
 * def SequentialOrLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SequentialAndLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":88
 * def SequentialAndLink(*args, tv=None):
 *     return add_link(types.SequentialAndLink, args, tv=tv)
 * def SequentialOrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SequentialOrLink, args, tv=tv)
 * def ChoiceLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_83SequentialOrLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_83SequentialOrLink = {"SequentialOrLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_83SequentialOrLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_83SequentialOrLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SequentialOrLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SequentialOrLink") < 0)) __PYX_ERR(1, 88, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SequentialOrLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 88, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SequentialOrLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_82SequentialOrLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_82SequentialOrLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SequentialOrLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":89
 *     return add_link(types.SequentialAndLink, args, tv=tv)
 * def SequentialOrLink(*args, tv=None):
 *     return add_link(types.SequentialOrLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ChoiceLink(*args, tv=None):
 *     return add_link(types.ChoiceLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SequentialOrLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 89, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":88
 * def SequentialAndLink(*args, tv=None):
 *     return add_link(types.SequentialAndLink, args, tv=tv)
 * def SequentialOrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SequentialOrLink, args, tv=tv)
 * def ChoiceLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SequentialOrLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":90
 * def SequentialOrLink(*args, tv=None):
 *     return add_link(types.SequentialOrLink, args, tv=tv)
 * def ChoiceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ChoiceLink, args, tv=tv)
 * def PresentLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_85ChoiceLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_85ChoiceLink = {"ChoiceLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_85ChoiceLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_85ChoiceLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ChoiceLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ChoiceLink") < 0)) __PYX_ERR(1, 90, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ChoiceLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 90, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ChoiceLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_84ChoiceLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_84ChoiceLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ChoiceLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":91
 *     return add_link(types.SequentialOrLink, args, tv=tv)
 * def ChoiceLink(*args, tv=None):
 *     return add_link(types.ChoiceLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def PresentLink(*args, tv=None):
 *     return add_link(types.PresentLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ChoiceLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 91, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":90
 * def SequentialOrLink(*args, tv=None):
 *     return add_link(types.SequentialOrLink, args, tv=tv)
 * def ChoiceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ChoiceLink, args, tv=tv)
 * def PresentLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ChoiceLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":92
 * def ChoiceLink(*args, tv=None):
 *     return add_link(types.ChoiceLink, args, tv=tv)
 * def PresentLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PresentLink, args, tv=tv)
 * def AbsentLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_87PresentLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_87PresentLink = {"PresentLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_87PresentLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_87PresentLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PresentLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "PresentLink") < 0)) __PYX_ERR(1, 92, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PresentLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 92, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.PresentLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_86PresentLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_86PresentLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PresentLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":93
 *     return add_link(types.ChoiceLink, args, tv=tv)
 * def PresentLink(*args, tv=None):
 *     return add_link(types.PresentLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def AbsentLink(*args, tv=None):
 *     return add_link(types.AbsentLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_PresentLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 93, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":92
 * def ChoiceLink(*args, tv=None):
 *     return add_link(types.ChoiceLink, args, tv=tv)
 * def PresentLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PresentLink, args, tv=tv)
 * def AbsentLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.PresentLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":94
 * def PresentLink(*args, tv=None):
 *     return add_link(types.PresentLink, args, tv=tv)
 * def AbsentLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AbsentLink, args, tv=tv)
 * def AlwaysLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_89AbsentLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_89AbsentLink = {"AbsentLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_89AbsentLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_89AbsentLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AbsentLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "AbsentLink") < 0)) __PYX_ERR(1, 94, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AbsentLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 94, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.AbsentLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_88AbsentLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_88AbsentLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AbsentLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":95
 *     return add_link(types.PresentLink, args, tv=tv)
 * def AbsentLink(*args, tv=None):
 *     return add_link(types.AbsentLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def AlwaysLink(*args, tv=None):
 *     return add_link(types.AlwaysLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_AbsentLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 95, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":94
 * def PresentLink(*args, tv=None):
 *     return add_link(types.PresentLink, args, tv=tv)
 * def AbsentLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AbsentLink, args, tv=tv)
 * def AlwaysLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.AbsentLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":96
 * def AbsentLink(*args, tv=None):
 *     return add_link(types.AbsentLink, args, tv=tv)
 * def AlwaysLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlwaysLink, args, tv=tv)
 * def ContinuationLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_91AlwaysLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_91AlwaysLink = {"AlwaysLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_91AlwaysLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_91AlwaysLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AlwaysLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "AlwaysLink") < 0)) __PYX_ERR(1, 96, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AlwaysLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 96, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.AlwaysLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_90AlwaysLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_90AlwaysLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AlwaysLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":97
 *     return add_link(types.AbsentLink, args, tv=tv)
 * def AlwaysLink(*args, tv=None):
 *     return add_link(types.AlwaysLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ContinuationLink(*args, tv=None):
 *     return add_link(types.ContinuationLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_AlwaysLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 97, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":96
 * def AbsentLink(*args, tv=None):
 *     return add_link(types.AbsentLink, args, tv=tv)
 * def AlwaysLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlwaysLink, args, tv=tv)
 * def ContinuationLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.AlwaysLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":98
 * def AlwaysLink(*args, tv=None):
 *     return add_link(types.AlwaysLink, args, tv=tv)
 * def ContinuationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ContinuationLink, args, tv=tv)
 * def EdgeLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_93ContinuationLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_93ContinuationLink = {"ContinuationLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_93ContinuationLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_93ContinuationLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ContinuationLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ContinuationLink") < 0)) __PYX_ERR(1, 98, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ContinuationLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 98, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ContinuationLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_92ContinuationLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_92ContinuationLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ContinuationLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":99
 *     return add_link(types.AlwaysLink, args, tv=tv)
 * def ContinuationLink(*args, tv=None):
 *     return add_link(types.ContinuationLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def EdgeLink(*args, tv=None):
 *     return add_link(types.EdgeLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ContinuationLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 99, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":98
 * def AlwaysLink(*args, tv=None):
 *     return add_link(types.AlwaysLink, args, tv=tv)
 * def ContinuationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ContinuationLink, args, tv=tv)
 * def EdgeLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ContinuationLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":100
 * def ContinuationLink(*args, tv=None):
 *     return add_link(types.ContinuationLink, args, tv=tv)
 * def EdgeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EdgeLink, args, tv=tv)
 * def LexicalNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_95EdgeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_95EdgeLink = {"EdgeLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_95EdgeLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_95EdgeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("EdgeLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "EdgeLink") < 0)) __PYX_ERR(1, 100, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("EdgeLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 100, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.EdgeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_94EdgeLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_94EdgeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("EdgeLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":101
 *     return add_link(types.ContinuationLink, args, tv=tv)
 * def EdgeLink(*args, tv=None):
 *     return add_link(types.EdgeLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def LexicalNode(node_name, tv=None):
 *     return add_node(types.LexicalNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_EdgeLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 101, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":100
 * def ContinuationLink(*args, tv=None):
 *     return add_link(types.ContinuationLink, args, tv=tv)
 * def EdgeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EdgeLink, args, tv=tv)
 * def LexicalNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.EdgeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":102
 * def EdgeLink(*args, tv=None):
 *     return add_link(types.EdgeLink, args, tv=tv)
 * def LexicalNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.LexicalNode, node_name, tv)
 * def AnyNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_97LexicalNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_97LexicalNode = {"LexicalNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_97LexicalNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_97LexicalNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LexicalNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "LexicalNode") < 0)) __PYX_ERR(1, 102, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LexicalNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 102, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.LexicalNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_96LexicalNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_96LexicalNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LexicalNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":103
 *     return add_link(types.EdgeLink, args, tv=tv)
 * def LexicalNode(node_name, tv=None):
 *     return add_node(types.LexicalNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def AnyNode(node_name, tv=None):
 *     return add_node(types.AnyNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_LexicalNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 103, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 103, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 103, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 103, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":102
 * def EdgeLink(*args, tv=None):
 *     return add_link(types.EdgeLink, args, tv=tv)
 * def LexicalNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.LexicalNode, node_name, tv)
 * def AnyNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.LexicalNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":104
 * def LexicalNode(node_name, tv=None):
 *     return add_node(types.LexicalNode, node_name, tv)
 * def AnyNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.AnyNode, node_name, tv)
 * def Connector(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_99AnyNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_99AnyNode = {"AnyNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_99AnyNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_99AnyNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AnyNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AnyNode") < 0)) __PYX_ERR(1, 104, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AnyNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 104, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.AnyNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_98AnyNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_98AnyNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AnyNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":105
 *     return add_node(types.LexicalNode, node_name, tv)
 * def AnyNode(node_name, tv=None):
 *     return add_node(types.AnyNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def Connector(*args, tv=None):
 *     return add_link(types.Connector, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_AnyNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 105, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 105, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":104
 * def LexicalNode(node_name, tv=None):
 *     return add_node(types.LexicalNode, node_name, tv)
 * def AnyNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.AnyNode, node_name, tv)
 * def Connector(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.AnyNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":106
 * def AnyNode(node_name, tv=None):
 *     return add_node(types.AnyNode, node_name, tv)
 * def Connector(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Connector, args, tv=tv)
 * def SexNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_101Connector(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_101Connector = {"Connector", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_101Connector, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_101Connector(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Connector (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "Connector") < 0)) __PYX_ERR(1, 106, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Connector", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 106, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.Connector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_100Connector(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_100Connector(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Connector", 0);

  /* "../../atoms/atom_types/core_types.pyx":107
 *     return add_node(types.AnyNode, node_name, tv)
 * def Connector(*args, tv=None):
 *     return add_link(types.Connector, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SexNode(node_name, tv=None):
 *     return add_node(types.SexNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_Connector); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 107, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":106
 * def AnyNode(node_name, tv=None):
 *     return add_node(types.AnyNode, node_name, tv)
 * def Connector(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Connector, args, tv=tv)
 * def SexNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.Connector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":108
 * def Connector(*args, tv=None):
 *     return add_link(types.Connector, args, tv=tv)
 * def SexNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SexNode, node_name, tv)
 * def ConnectorDir(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_103SexNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_103SexNode = {"SexNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_103SexNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_103SexNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SexNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "SexNode") < 0)) __PYX_ERR(1, 108, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SexNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 108, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.SexNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_102SexNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_102SexNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SexNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":109
 *     return add_link(types.Connector, args, tv=tv)
 * def SexNode(node_name, tv=None):
 *     return add_node(types.SexNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def ConnectorDir(node_name, tv=None):
 *     return add_node(types.ConnectorDir, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_SexNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 109, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 109, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":108
 * def Connector(*args, tv=None):
 *     return add_link(types.Connector, args, tv=tv)
 * def SexNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SexNode, node_name, tv)
 * def ConnectorDir(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.SexNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":110
 * def SexNode(node_name, tv=None):
 *     return add_node(types.SexNode, node_name, tv)
 * def ConnectorDir(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ConnectorDir, node_name, tv)
 * def BondNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_105ConnectorDir(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_105ConnectorDir = {"ConnectorDir", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_105ConnectorDir, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_105ConnectorDir(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ConnectorDir (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ConnectorDir") < 0)) __PYX_ERR(1, 110, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ConnectorDir", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 110, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.ConnectorDir", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_104ConnectorDir(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_104ConnectorDir(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ConnectorDir", 0);

  /* "../../atoms/atom_types/core_types.pyx":111
 *     return add_node(types.SexNode, node_name, tv)
 * def ConnectorDir(node_name, tv=None):
 *     return add_node(types.ConnectorDir, node_name, tv)             # <<<<<<<<<<<<<<
 * def BondNode(node_name, tv=None):
 *     return add_node(types.BondNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ConnectorDir); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 111, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 111, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":110
 * def SexNode(node_name, tv=None):
 *     return add_node(types.SexNode, node_name, tv)
 * def ConnectorDir(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ConnectorDir, node_name, tv)
 * def BondNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.ConnectorDir", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":112
 * def ConnectorDir(node_name, tv=None):
 *     return add_node(types.ConnectorDir, node_name, tv)
 * def BondNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.BondNode, node_name, tv)
 * def ConnectorSeq(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_107BondNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_107BondNode = {"BondNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_107BondNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_107BondNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BondNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "BondNode") < 0)) __PYX_ERR(1, 112, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("BondNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 112, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.BondNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_106BondNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_106BondNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BondNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":113
 *     return add_node(types.ConnectorDir, node_name, tv)
 * def BondNode(node_name, tv=None):
 *     return add_node(types.BondNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def ConnectorSeq(*args, tv=None):
 *     return add_link(types.ConnectorSeq, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_BondNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 113, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 113, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":112
 * def ConnectorDir(node_name, tv=None):
 *     return add_node(types.ConnectorDir, node_name, tv)
 * def BondNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.BondNode, node_name, tv)
 * def ConnectorSeq(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.BondNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":114
 * def BondNode(node_name, tv=None):
 *     return add_node(types.BondNode, node_name, tv)
 * def ConnectorSeq(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorSeq, args, tv=tv)
 * def ConnectorSet(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_109ConnectorSeq(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_109ConnectorSeq = {"ConnectorSeq", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_109ConnectorSeq, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_109ConnectorSeq(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ConnectorSeq (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ConnectorSeq") < 0)) __PYX_ERR(1, 114, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ConnectorSeq", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 114, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ConnectorSeq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_108ConnectorSeq(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_108ConnectorSeq(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ConnectorSeq", 0);

  /* "../../atoms/atom_types/core_types.pyx":115
 *     return add_node(types.BondNode, node_name, tv)
 * def ConnectorSeq(*args, tv=None):
 *     return add_link(types.ConnectorSeq, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ConnectorSet(*args, tv=None):
 *     return add_link(types.ConnectorSet, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ConnectorSeq); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 115, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":114
 * def BondNode(node_name, tv=None):
 *     return add_node(types.BondNode, node_name, tv)
 * def ConnectorSeq(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorSeq, args, tv=tv)
 * def ConnectorSet(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ConnectorSeq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":116
 * def ConnectorSeq(*args, tv=None):
 *     return add_link(types.ConnectorSeq, args, tv=tv)
 * def ConnectorSet(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorSet, args, tv=tv)
 * def ConnectorChoice(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_111ConnectorSet(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_111ConnectorSet = {"ConnectorSet", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_111ConnectorSet, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_111ConnectorSet(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ConnectorSet (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ConnectorSet") < 0)) __PYX_ERR(1, 116, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ConnectorSet", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 116, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ConnectorSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_110ConnectorSet(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_110ConnectorSet(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ConnectorSet", 0);

  /* "../../atoms/atom_types/core_types.pyx":117
 *     return add_link(types.ConnectorSeq, args, tv=tv)
 * def ConnectorSet(*args, tv=None):
 *     return add_link(types.ConnectorSet, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ConnectorChoice(*args, tv=None):
 *     return add_link(types.ConnectorChoice, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ConnectorSet); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 117, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":116
 * def ConnectorSeq(*args, tv=None):
 *     return add_link(types.ConnectorSeq, args, tv=tv)
 * def ConnectorSet(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorSet, args, tv=tv)
 * def ConnectorChoice(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ConnectorSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":118
 * def ConnectorSet(*args, tv=None):
 *     return add_link(types.ConnectorSet, args, tv=tv)
 * def ConnectorChoice(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorChoice, args, tv=tv)
 * def Section(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_113ConnectorChoice(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_113ConnectorChoice = {"ConnectorChoice", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_113ConnectorChoice, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_113ConnectorChoice(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ConnectorChoice (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ConnectorChoice") < 0)) __PYX_ERR(1, 118, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ConnectorChoice", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 118, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ConnectorChoice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_112ConnectorChoice(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_112ConnectorChoice(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ConnectorChoice", 0);

  /* "../../atoms/atom_types/core_types.pyx":119
 *     return add_link(types.ConnectorSet, args, tv=tv)
 * def ConnectorChoice(*args, tv=None):
 *     return add_link(types.ConnectorChoice, args, tv=tv)             # <<<<<<<<<<<<<<
 * def Section(*args, tv=None):
 *     return add_link(types.Section, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ConnectorChoice); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 119, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":118
 * def ConnectorSet(*args, tv=None):
 *     return add_link(types.ConnectorSet, args, tv=tv)
 * def ConnectorChoice(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorChoice, args, tv=tv)
 * def Section(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ConnectorChoice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":120
 * def ConnectorChoice(*args, tv=None):
 *     return add_link(types.ConnectorChoice, args, tv=tv)
 * def Section(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Section, args, tv=tv)
 * def ShapeLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_115Section(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_115Section = {"Section", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_115Section, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_115Section(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Section (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "Section") < 0)) __PYX_ERR(1, 120, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Section", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 120, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.Section", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_114Section(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_114Section(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Section", 0);

  /* "../../atoms/atom_types/core_types.pyx":121
 *     return add_link(types.ConnectorChoice, args, tv=tv)
 * def Section(*args, tv=None):
 *     return add_link(types.Section, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ShapeLink(*args, tv=None):
 *     return add_link(types.ShapeLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_Section); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 121, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":120
 * def ConnectorChoice(*args, tv=None):
 *     return add_link(types.ConnectorChoice, args, tv=tv)
 * def Section(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Section, args, tv=tv)
 * def ShapeLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.Section", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":122
 * def Section(*args, tv=None):
 *     return add_link(types.Section, args, tv=tv)
 * def ShapeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ShapeLink, args, tv=tv)
 * def CrossSection(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_117ShapeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_117ShapeLink = {"ShapeLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_117ShapeLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_117ShapeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ShapeLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ShapeLink") < 0)) __PYX_ERR(1, 122, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ShapeLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 122, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ShapeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_116ShapeLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_116ShapeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ShapeLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":123
 *     return add_link(types.Section, args, tv=tv)
 * def ShapeLink(*args, tv=None):
 *     return add_link(types.ShapeLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def CrossSection(*args, tv=None):
 *     return add_link(types.CrossSection, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ShapeLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 123, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":122
 * def Section(*args, tv=None):
 *     return add_link(types.Section, args, tv=tv)
 * def ShapeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ShapeLink, args, tv=tv)
 * def CrossSection(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ShapeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":124
 * def ShapeLink(*args, tv=None):
 *     return add_link(types.ShapeLink, args, tv=tv)
 * def CrossSection(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrossSection, args, tv=tv)
 * def ItemNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_119CrossSection(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_119CrossSection = {"CrossSection", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_119CrossSection, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_119CrossSection(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CrossSection (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "CrossSection") < 0)) __PYX_ERR(1, 124, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CrossSection", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 124, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.CrossSection", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_118CrossSection(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_118CrossSection(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("CrossSection", 0);

  /* "../../atoms/atom_types/core_types.pyx":125
 *     return add_link(types.ShapeLink, args, tv=tv)
 * def CrossSection(*args, tv=None):
 *     return add_link(types.CrossSection, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ItemNode(node_name, tv=None):
 *     return add_node(types.ItemNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_CrossSection); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 125, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":124
 * def ShapeLink(*args, tv=None):
 *     return add_link(types.ShapeLink, args, tv=tv)
 * def CrossSection(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrossSection, args, tv=tv)
 * def ItemNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.CrossSection", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":126
 * def CrossSection(*args, tv=None):
 *     return add_link(types.CrossSection, args, tv=tv)
 * def ItemNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ItemNode, node_name, tv)
 * def ItemClassNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_121ItemNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_121ItemNode = {"ItemNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_121ItemNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_121ItemNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ItemNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ItemNode") < 0)) __PYX_ERR(1, 126, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ItemNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 126, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.ItemNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_120ItemNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_120ItemNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ItemNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":127
 *     return add_link(types.CrossSection, args, tv=tv)
 * def ItemNode(node_name, tv=None):
 *     return add_node(types.ItemNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def ItemClassNode(node_name, tv=None):
 *     return add_node(types.ItemClassNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ItemNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 127, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 127, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":126
 * def CrossSection(*args, tv=None):
 *     return add_link(types.CrossSection, args, tv=tv)
 * def ItemNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ItemNode, node_name, tv)
 * def ItemClassNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.ItemNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":128
 * def ItemNode(node_name, tv=None):
 *     return add_node(types.ItemNode, node_name, tv)
 * def ItemClassNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ItemClassNode, node_name, tv)
 * def TagNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_123ItemClassNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_123ItemClassNode = {"ItemClassNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_123ItemClassNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_123ItemClassNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ItemClassNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ItemClassNode") < 0)) __PYX_ERR(1, 128, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ItemClassNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 128, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.ItemClassNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_122ItemClassNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_122ItemClassNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ItemClassNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":129
 *     return add_node(types.ItemNode, node_name, tv)
 * def ItemClassNode(node_name, tv=None):
 *     return add_node(types.ItemClassNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def TagNode(node_name, tv=None):
 *     return add_node(types.TagNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ItemClassNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":128
 * def ItemNode(node_name, tv=None):
 *     return add_node(types.ItemNode, node_name, tv)
 * def ItemClassNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ItemClassNode, node_name, tv)
 * def TagNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.ItemClassNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":130
 * def ItemClassNode(node_name, tv=None):
 *     return add_node(types.ItemClassNode, node_name, tv)
 * def TagNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TagNode, node_name, tv)
 * def TagLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_125TagNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_125TagNode = {"TagNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_125TagNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_125TagNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TagNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "TagNode") < 0)) __PYX_ERR(1, 130, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TagNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 130, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.TagNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_124TagNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_124TagNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TagNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":131
 *     return add_node(types.ItemClassNode, node_name, tv)
 * def TagNode(node_name, tv=None):
 *     return add_node(types.TagNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def TagLink(*args, tv=None):
 *     return add_link(types.TagLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_TagNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 131, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 131, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":130
 * def ItemClassNode(node_name, tv=None):
 *     return add_node(types.ItemClassNode, node_name, tv)
 * def TagNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TagNode, node_name, tv)
 * def TagLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.TagNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":132
 * def TagNode(node_name, tv=None):
 *     return add_node(types.TagNode, node_name, tv)
 * def TagLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TagLink, args, tv=tv)
 * def VariableNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_127TagLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_127TagLink = {"TagLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_127TagLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_127TagLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TagLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TagLink") < 0)) __PYX_ERR(1, 132, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TagLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 132, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TagLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_126TagLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_126TagLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TagLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":133
 *     return add_node(types.TagNode, node_name, tv)
 * def TagLink(*args, tv=None):
 *     return add_link(types.TagLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def VariableNode(node_name, tv=None):
 *     return add_node(types.VariableNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TagLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 133, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":132
 * def TagNode(node_name, tv=None):
 *     return add_node(types.TagNode, node_name, tv)
 * def TagLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TagLink, args, tv=tv)
 * def VariableNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TagLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":134
 * def TagLink(*args, tv=None):
 *     return add_link(types.TagLink, args, tv=tv)
 * def VariableNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.VariableNode, node_name, tv)
 * def VariableList(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_129VariableNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_129VariableNode = {"VariableNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_129VariableNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_129VariableNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("VariableNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "VariableNode") < 0)) __PYX_ERR(1, 134, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("VariableNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 134, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.VariableNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_128VariableNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_128VariableNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("VariableNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":135
 *     return add_link(types.TagLink, args, tv=tv)
 * def VariableNode(node_name, tv=None):
 *     return add_node(types.VariableNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def VariableList(*args, tv=None):
 *     return add_link(types.VariableList, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_VariableNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 135, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 135, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":134
 * def TagLink(*args, tv=None):
 *     return add_link(types.TagLink, args, tv=tv)
 * def VariableNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.VariableNode, node_name, tv)
 * def VariableList(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.VariableNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":136
 * def VariableNode(node_name, tv=None):
 *     return add_node(types.VariableNode, node_name, tv)
 * def VariableList(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VariableList, args, tv=tv)
 * def VariableSet(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_131VariableList(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_131VariableList = {"VariableList", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_131VariableList, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_131VariableList(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("VariableList (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "VariableList") < 0)) __PYX_ERR(1, 136, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("VariableList", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 136, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.VariableList", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_130VariableList(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_130VariableList(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("VariableList", 0);

  /* "../../atoms/atom_types/core_types.pyx":137
 *     return add_node(types.VariableNode, node_name, tv)
 * def VariableList(*args, tv=None):
 *     return add_link(types.VariableList, args, tv=tv)             # <<<<<<<<<<<<<<
 * def VariableSet(*args, tv=None):
 *     return add_link(types.VariableSet, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_VariableList); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 137, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":136
 * def VariableNode(node_name, tv=None):
 *     return add_node(types.VariableNode, node_name, tv)
 * def VariableList(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VariableList, args, tv=tv)
 * def VariableSet(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.VariableList", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":138
 * def VariableList(*args, tv=None):
 *     return add_link(types.VariableList, args, tv=tv)
 * def VariableSet(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VariableSet, args, tv=tv)
 * def GlobNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_133VariableSet(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_133VariableSet = {"VariableSet", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_133VariableSet, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_133VariableSet(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("VariableSet (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "VariableSet") < 0)) __PYX_ERR(1, 138, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("VariableSet", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 138, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.VariableSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_132VariableSet(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_132VariableSet(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("VariableSet", 0);

  /* "../../atoms/atom_types/core_types.pyx":139
 *     return add_link(types.VariableList, args, tv=tv)
 * def VariableSet(*args, tv=None):
 *     return add_link(types.VariableSet, args, tv=tv)             # <<<<<<<<<<<<<<
 * def GlobNode(node_name, tv=None):
 *     return add_node(types.GlobNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_VariableSet); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 139, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":138
 * def VariableList(*args, tv=None):
 *     return add_link(types.VariableList, args, tv=tv)
 * def VariableSet(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VariableSet, args, tv=tv)
 * def GlobNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.VariableSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":140
 * def VariableSet(*args, tv=None):
 *     return add_link(types.VariableSet, args, tv=tv)
 * def GlobNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GlobNode, node_name, tv)
 * def QuoteLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_135GlobNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_135GlobNode = {"GlobNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_135GlobNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_135GlobNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GlobNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "GlobNode") < 0)) __PYX_ERR(1, 140, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("GlobNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 140, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.GlobNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_134GlobNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_134GlobNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("GlobNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":141
 *     return add_link(types.VariableSet, args, tv=tv)
 * def GlobNode(node_name, tv=None):
 *     return add_node(types.GlobNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def QuoteLink(*args, tv=None):
 *     return add_link(types.QuoteLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GlobNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 141, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 141, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":140
 * def VariableSet(*args, tv=None):
 *     return add_link(types.VariableSet, args, tv=tv)
 * def GlobNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GlobNode, node_name, tv)
 * def QuoteLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.GlobNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":142
 * def GlobNode(node_name, tv=None):
 *     return add_node(types.GlobNode, node_name, tv)
 * def QuoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.QuoteLink, args, tv=tv)
 * def UnquoteLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_137QuoteLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_137QuoteLink = {"QuoteLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_137QuoteLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_137QuoteLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("QuoteLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "QuoteLink") < 0)) __PYX_ERR(1, 142, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("QuoteLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 142, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.QuoteLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_136QuoteLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_136QuoteLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("QuoteLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":143
 *     return add_node(types.GlobNode, node_name, tv)
 * def QuoteLink(*args, tv=None):
 *     return add_link(types.QuoteLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def UnquoteLink(*args, tv=None):
 *     return add_link(types.UnquoteLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_QuoteLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 143, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":142
 * def GlobNode(node_name, tv=None):
 *     return add_node(types.GlobNode, node_name, tv)
 * def QuoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.QuoteLink, args, tv=tv)
 * def UnquoteLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.QuoteLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":144
 * def QuoteLink(*args, tv=None):
 *     return add_link(types.QuoteLink, args, tv=tv)
 * def UnquoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnquoteLink, args, tv=tv)
 * def DontExecLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_139UnquoteLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_139UnquoteLink = {"UnquoteLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_139UnquoteLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_139UnquoteLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("UnquoteLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "UnquoteLink") < 0)) __PYX_ERR(1, 144, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("UnquoteLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 144, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.UnquoteLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_138UnquoteLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_138UnquoteLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("UnquoteLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":145
 *     return add_link(types.QuoteLink, args, tv=tv)
 * def UnquoteLink(*args, tv=None):
 *     return add_link(types.UnquoteLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def DontExecLink(*args, tv=None):
 *     return add_link(types.DontExecLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_UnquoteLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 145, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":144
 * def QuoteLink(*args, tv=None):
 *     return add_link(types.QuoteLink, args, tv=tv)
 * def UnquoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnquoteLink, args, tv=tv)
 * def DontExecLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.UnquoteLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":146
 * def UnquoteLink(*args, tv=None):
 *     return add_link(types.UnquoteLink, args, tv=tv)
 * def DontExecLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DontExecLink, args, tv=tv)
 * def LocalQuoteLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_141DontExecLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_141DontExecLink = {"DontExecLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_141DontExecLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_141DontExecLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DontExecLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "DontExecLink") < 0)) __PYX_ERR(1, 146, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("DontExecLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 146, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.DontExecLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_140DontExecLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_140DontExecLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DontExecLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":147
 *     return add_link(types.UnquoteLink, args, tv=tv)
 * def DontExecLink(*args, tv=None):
 *     return add_link(types.DontExecLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def LocalQuoteLink(*args, tv=None):
 *     return add_link(types.LocalQuoteLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_DontExecLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 147, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":146
 * def UnquoteLink(*args, tv=None):
 *     return add_link(types.UnquoteLink, args, tv=tv)
 * def DontExecLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DontExecLink, args, tv=tv)
 * def LocalQuoteLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.DontExecLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":148
 * def DontExecLink(*args, tv=None):
 *     return add_link(types.DontExecLink, args, tv=tv)
 * def LocalQuoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LocalQuoteLink, args, tv=tv)
 * def ReplacementLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_143LocalQuoteLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_143LocalQuoteLink = {"LocalQuoteLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_143LocalQuoteLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_143LocalQuoteLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LocalQuoteLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "LocalQuoteLink") < 0)) __PYX_ERR(1, 148, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LocalQuoteLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 148, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.LocalQuoteLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_142LocalQuoteLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_142LocalQuoteLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LocalQuoteLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":149
 *     return add_link(types.DontExecLink, args, tv=tv)
 * def LocalQuoteLink(*args, tv=None):
 *     return add_link(types.LocalQuoteLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ReplacementLink(*args, tv=None):
 *     return add_link(types.ReplacementLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_LocalQuoteLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 149, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":148
 * def DontExecLink(*args, tv=None):
 *     return add_link(types.DontExecLink, args, tv=tv)
 * def LocalQuoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LocalQuoteLink, args, tv=tv)
 * def ReplacementLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.LocalQuoteLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":150
 * def LocalQuoteLink(*args, tv=None):
 *     return add_link(types.LocalQuoteLink, args, tv=tv)
 * def ReplacementLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ReplacementLink, args, tv=tv)
 * def FreeLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_145ReplacementLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_145ReplacementLink = {"ReplacementLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_145ReplacementLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_145ReplacementLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ReplacementLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ReplacementLink") < 0)) __PYX_ERR(1, 150, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ReplacementLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 150, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ReplacementLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_144ReplacementLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_144ReplacementLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ReplacementLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":151
 *     return add_link(types.LocalQuoteLink, args, tv=tv)
 * def ReplacementLink(*args, tv=None):
 *     return add_link(types.ReplacementLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def FreeLink(*args, tv=None):
 *     return add_link(types.FreeLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ReplacementLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 151, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":150
 * def LocalQuoteLink(*args, tv=None):
 *     return add_link(types.LocalQuoteLink, args, tv=tv)
 * def ReplacementLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ReplacementLink, args, tv=tv)
 * def FreeLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ReplacementLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":152
 * def ReplacementLink(*args, tv=None):
 *     return add_link(types.ReplacementLink, args, tv=tv)
 * def FreeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FreeLink, args, tv=tv)
 * def DeleteLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_147FreeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_147FreeLink = {"FreeLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_147FreeLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_147FreeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("FreeLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "FreeLink") < 0)) __PYX_ERR(1, 152, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("FreeLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 152, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.FreeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_146FreeLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_146FreeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FreeLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":153
 *     return add_link(types.ReplacementLink, args, tv=tv)
 * def FreeLink(*args, tv=None):
 *     return add_link(types.FreeLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def DeleteLink(*args, tv=None):
 *     return add_link(types.DeleteLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_FreeLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 153, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":152
 * def ReplacementLink(*args, tv=None):
 *     return add_link(types.ReplacementLink, args, tv=tv)
 * def FreeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FreeLink, args, tv=tv)
 * def DeleteLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.FreeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":154
 * def FreeLink(*args, tv=None):
 *     return add_link(types.FreeLink, args, tv=tv)
 * def DeleteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DeleteLink, args, tv=tv)
 * def UniqueLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_149DeleteLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_149DeleteLink = {"DeleteLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_149DeleteLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_149DeleteLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeleteLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "DeleteLink") < 0)) __PYX_ERR(1, 154, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("DeleteLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 154, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.DeleteLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_148DeleteLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_148DeleteLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeleteLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":155
 *     return add_link(types.FreeLink, args, tv=tv)
 * def DeleteLink(*args, tv=None):
 *     return add_link(types.DeleteLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def UniqueLink(*args, tv=None):
 *     return add_link(types.UniqueLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_DeleteLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 155, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":154
 * def FreeLink(*args, tv=None):
 *     return add_link(types.FreeLink, args, tv=tv)
 * def DeleteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DeleteLink, args, tv=tv)
 * def UniqueLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.DeleteLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":156
 * def DeleteLink(*args, tv=None):
 *     return add_link(types.DeleteLink, args, tv=tv)
 * def UniqueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UniqueLink, args, tv=tv)
 * def StateLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_151UniqueLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_151UniqueLink = {"UniqueLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_151UniqueLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_151UniqueLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("UniqueLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "UniqueLink") < 0)) __PYX_ERR(1, 156, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("UniqueLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 156, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.UniqueLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_150UniqueLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_150UniqueLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("UniqueLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":157
 *     return add_link(types.DeleteLink, args, tv=tv)
 * def UniqueLink(*args, tv=None):
 *     return add_link(types.UniqueLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def StateLink(*args, tv=None):
 *     return add_link(types.StateLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_UniqueLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 157, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":156
 * def DeleteLink(*args, tv=None):
 *     return add_link(types.DeleteLink, args, tv=tv)
 * def UniqueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UniqueLink, args, tv=tv)
 * def StateLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.UniqueLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":158
 * def UniqueLink(*args, tv=None):
 *     return add_link(types.UniqueLink, args, tv=tv)
 * def StateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StateLink, args, tv=tv)
 * def DefineLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_153StateLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_153StateLink = {"StateLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_153StateLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_153StateLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StateLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "StateLink") < 0)) __PYX_ERR(1, 158, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("StateLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 158, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.StateLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_152StateLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_152StateLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StateLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":159
 *     return add_link(types.UniqueLink, args, tv=tv)
 * def StateLink(*args, tv=None):
 *     return add_link(types.StateLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def DefineLink(*args, tv=None):
 *     return add_link(types.DefineLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_StateLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 159, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":158
 * def UniqueLink(*args, tv=None):
 *     return add_link(types.UniqueLink, args, tv=tv)
 * def StateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StateLink, args, tv=tv)
 * def DefineLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.StateLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":160
 * def StateLink(*args, tv=None):
 *     return add_link(types.StateLink, args, tv=tv)
 * def DefineLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DefineLink, args, tv=tv)
 * def GrantLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_155DefineLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_155DefineLink = {"DefineLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_155DefineLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_155DefineLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DefineLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "DefineLink") < 0)) __PYX_ERR(1, 160, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("DefineLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 160, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.DefineLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_154DefineLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_154DefineLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DefineLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":161
 *     return add_link(types.StateLink, args, tv=tv)
 * def DefineLink(*args, tv=None):
 *     return add_link(types.DefineLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def GrantLink(*args, tv=None):
 *     return add_link(types.GrantLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_DefineLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 161, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":160
 * def StateLink(*args, tv=None):
 *     return add_link(types.StateLink, args, tv=tv)
 * def DefineLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DefineLink, args, tv=tv)
 * def GrantLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.DefineLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":162
 * def DefineLink(*args, tv=None):
 *     return add_link(types.DefineLink, args, tv=tv)
 * def GrantLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GrantLink, args, tv=tv)
 * def ScopeLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_157GrantLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_157GrantLink = {"GrantLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_157GrantLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_157GrantLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GrantLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "GrantLink") < 0)) __PYX_ERR(1, 162, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("GrantLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 162, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.GrantLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_156GrantLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_156GrantLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("GrantLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":163
 *     return add_link(types.DefineLink, args, tv=tv)
 * def GrantLink(*args, tv=None):
 *     return add_link(types.GrantLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ScopeLink(*args, tv=None):
 *     return add_link(types.ScopeLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GrantLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 163, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":162
 * def DefineLink(*args, tv=None):
 *     return add_link(types.DefineLink, args, tv=tv)
 * def GrantLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GrantLink, args, tv=tv)
 * def ScopeLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.GrantLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":164
 * def GrantLink(*args, tv=None):
 *     return add_link(types.GrantLink, args, tv=tv)
 * def ScopeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ScopeLink, args, tv=tv)
 * def RewriteLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_159ScopeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_159ScopeLink = {"ScopeLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_159ScopeLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_159ScopeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ScopeLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ScopeLink") < 0)) __PYX_ERR(1, 164, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ScopeLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 164, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ScopeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_158ScopeLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_158ScopeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ScopeLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":165
 *     return add_link(types.GrantLink, args, tv=tv)
 * def ScopeLink(*args, tv=None):
 *     return add_link(types.ScopeLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def RewriteLink(*args, tv=None):
 *     return add_link(types.RewriteLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ScopeLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 165, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":164
 * def GrantLink(*args, tv=None):
 *     return add_link(types.GrantLink, args, tv=tv)
 * def ScopeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ScopeLink, args, tv=tv)
 * def RewriteLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ScopeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":166
 * def ScopeLink(*args, tv=None):
 *     return add_link(types.ScopeLink, args, tv=tv)
 * def RewriteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RewriteLink, args, tv=tv)
 * def PrenexLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_161RewriteLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_161RewriteLink = {"RewriteLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_161RewriteLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_161RewriteLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("RewriteLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "RewriteLink") < 0)) __PYX_ERR(1, 166, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("RewriteLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 166, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.RewriteLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_160RewriteLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_160RewriteLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("RewriteLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":167
 *     return add_link(types.ScopeLink, args, tv=tv)
 * def RewriteLink(*args, tv=None):
 *     return add_link(types.RewriteLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def PrenexLink(*args, tv=None):
 *     return add_link(types.PrenexLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_RewriteLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 167, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":166
 * def ScopeLink(*args, tv=None):
 *     return add_link(types.ScopeLink, args, tv=tv)
 * def RewriteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RewriteLink, args, tv=tv)
 * def PrenexLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.RewriteLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":168
 * def RewriteLink(*args, tv=None):
 *     return add_link(types.RewriteLink, args, tv=tv)
 * def PrenexLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PrenexLink, args, tv=tv)
 * def LambdaLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_163PrenexLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_163PrenexLink = {"PrenexLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_163PrenexLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_163PrenexLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PrenexLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "PrenexLink") < 0)) __PYX_ERR(1, 168, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PrenexLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 168, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.PrenexLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_162PrenexLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_162PrenexLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PrenexLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":169
 *     return add_link(types.RewriteLink, args, tv=tv)
 * def PrenexLink(*args, tv=None):
 *     return add_link(types.PrenexLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def LambdaLink(*args, tv=None):
 *     return add_link(types.LambdaLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_PrenexLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 169, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":168
 * def RewriteLink(*args, tv=None):
 *     return add_link(types.RewriteLink, args, tv=tv)
 * def PrenexLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PrenexLink, args, tv=tv)
 * def LambdaLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.PrenexLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":170
 * def PrenexLink(*args, tv=None):
 *     return add_link(types.PrenexLink, args, tv=tv)
 * def LambdaLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LambdaLink, args, tv=tv)
 * def PutLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_165LambdaLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_165LambdaLink = {"LambdaLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_165LambdaLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_165LambdaLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LambdaLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "LambdaLink") < 0)) __PYX_ERR(1, 170, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LambdaLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 170, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.LambdaLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_164LambdaLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_164LambdaLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LambdaLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":171
 *     return add_link(types.PrenexLink, args, tv=tv)
 * def LambdaLink(*args, tv=None):
 *     return add_link(types.LambdaLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def PutLink(*args, tv=None):
 *     return add_link(types.PutLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_LambdaLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 171, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":170
 * def PrenexLink(*args, tv=None):
 *     return add_link(types.PrenexLink, args, tv=tv)
 * def LambdaLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LambdaLink, args, tv=tv)
 * def PutLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.LambdaLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":172
 * def LambdaLink(*args, tv=None):
 *     return add_link(types.LambdaLink, args, tv=tv)
 * def PutLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PutLink, args, tv=tv)
 * def JoinLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_167PutLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_167PutLink = {"PutLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_167PutLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_167PutLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PutLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "PutLink") < 0)) __PYX_ERR(1, 172, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PutLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 172, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.PutLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_166PutLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_166PutLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PutLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":173
 *     return add_link(types.LambdaLink, args, tv=tv)
 * def PutLink(*args, tv=None):
 *     return add_link(types.PutLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def JoinLink(*args, tv=None):
 *     return add_link(types.JoinLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_PutLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 173, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":172
 * def LambdaLink(*args, tv=None):
 *     return add_link(types.LambdaLink, args, tv=tv)
 * def PutLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PutLink, args, tv=tv)
 * def JoinLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.PutLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":174
 * def PutLink(*args, tv=None):
 *     return add_link(types.PutLink, args, tv=tv)
 * def JoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.JoinLink, args, tv=tv)
 * def MinimalJoinLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_169JoinLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_169JoinLink = {"JoinLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_169JoinLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_169JoinLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("JoinLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "JoinLink") < 0)) __PYX_ERR(1, 174, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("JoinLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 174, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.JoinLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_168JoinLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_168JoinLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("JoinLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":175
 *     return add_link(types.PutLink, args, tv=tv)
 * def JoinLink(*args, tv=None):
 *     return add_link(types.JoinLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def MinimalJoinLink(*args, tv=None):
 *     return add_link(types.MinimalJoinLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_JoinLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 175, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":174
 * def PutLink(*args, tv=None):
 *     return add_link(types.PutLink, args, tv=tv)
 * def JoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.JoinLink, args, tv=tv)
 * def MinimalJoinLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.JoinLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":176
 * def JoinLink(*args, tv=None):
 *     return add_link(types.JoinLink, args, tv=tv)
 * def MinimalJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinimalJoinLink, args, tv=tv)
 * def UpperSetLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_171MinimalJoinLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_171MinimalJoinLink = {"MinimalJoinLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_171MinimalJoinLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_171MinimalJoinLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("MinimalJoinLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "MinimalJoinLink") < 0)) __PYX_ERR(1, 176, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("MinimalJoinLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 176, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.MinimalJoinLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_170MinimalJoinLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_170MinimalJoinLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("MinimalJoinLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":177
 *     return add_link(types.JoinLink, args, tv=tv)
 * def MinimalJoinLink(*args, tv=None):
 *     return add_link(types.MinimalJoinLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def UpperSetLink(*args, tv=None):
 *     return add_link(types.UpperSetLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_MinimalJoinLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 177, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":176
 * def JoinLink(*args, tv=None):
 *     return add_link(types.JoinLink, args, tv=tv)
 * def MinimalJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinimalJoinLink, args, tv=tv)
 * def UpperSetLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.MinimalJoinLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":178
 * def MinimalJoinLink(*args, tv=None):
 *     return add_link(types.MinimalJoinLink, args, tv=tv)
 * def UpperSetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UpperSetLink, args, tv=tv)
 * def MaximalJoinLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_173UpperSetLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_173UpperSetLink = {"UpperSetLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_173UpperSetLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_173UpperSetLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("UpperSetLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "UpperSetLink") < 0)) __PYX_ERR(1, 178, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("UpperSetLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 178, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.UpperSetLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_172UpperSetLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_172UpperSetLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("UpperSetLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":179
 *     return add_link(types.MinimalJoinLink, args, tv=tv)
 * def UpperSetLink(*args, tv=None):
 *     return add_link(types.UpperSetLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def MaximalJoinLink(*args, tv=None):
 *     return add_link(types.MaximalJoinLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_UpperSetLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 179, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":178
 * def MinimalJoinLink(*args, tv=None):
 *     return add_link(types.MinimalJoinLink, args, tv=tv)
 * def UpperSetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UpperSetLink, args, tv=tv)
 * def MaximalJoinLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.UpperSetLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":180
 * def UpperSetLink(*args, tv=None):
 *     return add_link(types.UpperSetLink, args, tv=tv)
 * def MaximalJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MaximalJoinLink, args, tv=tv)
 * def RuleLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_175MaximalJoinLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_175MaximalJoinLink = {"MaximalJoinLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_175MaximalJoinLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_175MaximalJoinLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("MaximalJoinLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "MaximalJoinLink") < 0)) __PYX_ERR(1, 180, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("MaximalJoinLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 180, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.MaximalJoinLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_174MaximalJoinLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_174MaximalJoinLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("MaximalJoinLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":181
 *     return add_link(types.UpperSetLink, args, tv=tv)
 * def MaximalJoinLink(*args, tv=None):
 *     return add_link(types.MaximalJoinLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def RuleLink(*args, tv=None):
 *     return add_link(types.RuleLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_MaximalJoinLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 181, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":180
 * def UpperSetLink(*args, tv=None):
 *     return add_link(types.UpperSetLink, args, tv=tv)
 * def MaximalJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MaximalJoinLink, args, tv=tv)
 * def RuleLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.MaximalJoinLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":182
 * def MaximalJoinLink(*args, tv=None):
 *     return add_link(types.MaximalJoinLink, args, tv=tv)
 * def RuleLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RuleLink, args, tv=tv)
 * def VardeclOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_177RuleLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_177RuleLink = {"RuleLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_177RuleLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_177RuleLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("RuleLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "RuleLink") < 0)) __PYX_ERR(1, 182, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("RuleLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 182, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.RuleLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_176RuleLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_176RuleLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("RuleLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":183
 *     return add_link(types.MaximalJoinLink, args, tv=tv)
 * def RuleLink(*args, tv=None):
 *     return add_link(types.RuleLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def VardeclOfLink(*args, tv=None):
 *     return add_link(types.VardeclOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_RuleLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 183, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":182
 * def MaximalJoinLink(*args, tv=None):
 *     return add_link(types.MaximalJoinLink, args, tv=tv)
 * def RuleLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RuleLink, args, tv=tv)
 * def VardeclOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.RuleLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":184
 * def RuleLink(*args, tv=None):
 *     return add_link(types.RuleLink, args, tv=tv)
 * def VardeclOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VardeclOfLink, args, tv=tv)
 * def PremiseOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_179VardeclOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_179VardeclOfLink = {"VardeclOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_179VardeclOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_179VardeclOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("VardeclOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "VardeclOfLink") < 0)) __PYX_ERR(1, 184, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("VardeclOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 184, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.VardeclOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_178VardeclOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_178VardeclOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("VardeclOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":185
 *     return add_link(types.RuleLink, args, tv=tv)
 * def VardeclOfLink(*args, tv=None):
 *     return add_link(types.VardeclOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def PremiseOfLink(*args, tv=None):
 *     return add_link(types.PremiseOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_VardeclOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 185, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":184
 * def RuleLink(*args, tv=None):
 *     return add_link(types.RuleLink, args, tv=tv)
 * def VardeclOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VardeclOfLink, args, tv=tv)
 * def PremiseOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.VardeclOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":186
 * def VardeclOfLink(*args, tv=None):
 *     return add_link(types.VardeclOfLink, args, tv=tv)
 * def PremiseOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PremiseOfLink, args, tv=tv)
 * def ConclusionOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_181PremiseOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_181PremiseOfLink = {"PremiseOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_181PremiseOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_181PremiseOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PremiseOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "PremiseOfLink") < 0)) __PYX_ERR(1, 186, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PremiseOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 186, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.PremiseOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_180PremiseOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_180PremiseOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PremiseOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":187
 *     return add_link(types.VardeclOfLink, args, tv=tv)
 * def PremiseOfLink(*args, tv=None):
 *     return add_link(types.PremiseOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ConclusionOfLink(*args, tv=None):
 *     return add_link(types.ConclusionOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_PremiseOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 187, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":186
 * def VardeclOfLink(*args, tv=None):
 *     return add_link(types.VardeclOfLink, args, tv=tv)
 * def PremiseOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PremiseOfLink, args, tv=tv)
 * def ConclusionOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.PremiseOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":188
 * def PremiseOfLink(*args, tv=None):
 *     return add_link(types.PremiseOfLink, args, tv=tv)
 * def ConclusionOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConclusionOfLink, args, tv=tv)
 * def PatternLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_183ConclusionOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_183ConclusionOfLink = {"ConclusionOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_183ConclusionOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_183ConclusionOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ConclusionOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ConclusionOfLink") < 0)) __PYX_ERR(1, 188, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ConclusionOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 188, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ConclusionOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_182ConclusionOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_182ConclusionOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ConclusionOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":189
 *     return add_link(types.PremiseOfLink, args, tv=tv)
 * def ConclusionOfLink(*args, tv=None):
 *     return add_link(types.ConclusionOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def PatternLink(*args, tv=None):
 *     return add_link(types.PatternLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ConclusionOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 189, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":188
 * def PremiseOfLink(*args, tv=None):
 *     return add_link(types.PremiseOfLink, args, tv=tv)
 * def ConclusionOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConclusionOfLink, args, tv=tv)
 * def PatternLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ConclusionOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":190
 * def ConclusionOfLink(*args, tv=None):
 *     return add_link(types.ConclusionOfLink, args, tv=tv)
 * def PatternLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PatternLink, args, tv=tv)
 * def SatisfyingLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_185PatternLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_185PatternLink = {"PatternLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_185PatternLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_185PatternLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PatternLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "PatternLink") < 0)) __PYX_ERR(1, 190, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PatternLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 190, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.PatternLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_184PatternLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_184PatternLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PatternLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":191
 *     return add_link(types.ConclusionOfLink, args, tv=tv)
 * def PatternLink(*args, tv=None):
 *     return add_link(types.PatternLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SatisfyingLink(*args, tv=None):
 *     return add_link(types.SatisfyingLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_PatternLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 191, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":190
 * def ConclusionOfLink(*args, tv=None):
 *     return add_link(types.ConclusionOfLink, args, tv=tv)
 * def PatternLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PatternLink, args, tv=tv)
 * def SatisfyingLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.PatternLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":192
 * def PatternLink(*args, tv=None):
 *     return add_link(types.PatternLink, args, tv=tv)
 * def SatisfyingLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SatisfyingLink, args, tv=tv)
 * def MeetLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_187SatisfyingLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_187SatisfyingLink = {"SatisfyingLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_187SatisfyingLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_187SatisfyingLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SatisfyingLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SatisfyingLink") < 0)) __PYX_ERR(1, 192, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SatisfyingLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 192, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SatisfyingLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_186SatisfyingLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_186SatisfyingLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SatisfyingLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":193
 *     return add_link(types.PatternLink, args, tv=tv)
 * def SatisfyingLink(*args, tv=None):
 *     return add_link(types.SatisfyingLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def MeetLink(*args, tv=None):
 *     return add_link(types.MeetLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SatisfyingLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 193, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":192
 * def PatternLink(*args, tv=None):
 *     return add_link(types.PatternLink, args, tv=tv)
 * def SatisfyingLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SatisfyingLink, args, tv=tv)
 * def MeetLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SatisfyingLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":194
 * def SatisfyingLink(*args, tv=None):
 *     return add_link(types.SatisfyingLink, args, tv=tv)
 * def MeetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MeetLink, args, tv=tv)
 * def GetLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_189MeetLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_189MeetLink = {"MeetLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_189MeetLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_189MeetLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("MeetLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "MeetLink") < 0)) __PYX_ERR(1, 194, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("MeetLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 194, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.MeetLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_188MeetLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_188MeetLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("MeetLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":195
 *     return add_link(types.SatisfyingLink, args, tv=tv)
 * def MeetLink(*args, tv=None):
 *     return add_link(types.MeetLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def GetLink(*args, tv=None):
 *     return add_link(types.GetLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_MeetLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 195, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":194
 * def SatisfyingLink(*args, tv=None):
 *     return add_link(types.SatisfyingLink, args, tv=tv)
 * def MeetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MeetLink, args, tv=tv)
 * def GetLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.MeetLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":196
 * def MeetLink(*args, tv=None):
 *     return add_link(types.MeetLink, args, tv=tv)
 * def GetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GetLink, args, tv=tv)
 * def QueryLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_191GetLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_191GetLink = {"GetLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_191GetLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_191GetLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GetLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "GetLink") < 0)) __PYX_ERR(1, 196, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("GetLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 196, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.GetLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_190GetLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_190GetLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("GetLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":197
 *     return add_link(types.MeetLink, args, tv=tv)
 * def GetLink(*args, tv=None):
 *     return add_link(types.GetLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def QueryLink(*args, tv=None):
 *     return add_link(types.QueryLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GetLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 197, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":196
 * def MeetLink(*args, tv=None):
 *     return add_link(types.MeetLink, args, tv=tv)
 * def GetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GetLink, args, tv=tv)
 * def QueryLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.GetLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":198
 * def GetLink(*args, tv=None):
 *     return add_link(types.GetLink, args, tv=tv)
 * def QueryLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.QueryLink, args, tv=tv)
 * def BindLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_193QueryLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_193QueryLink = {"QueryLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_193QueryLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_193QueryLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("QueryLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "QueryLink") < 0)) __PYX_ERR(1, 198, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("QueryLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 198, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.QueryLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_192QueryLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_192QueryLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("QueryLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":199
 *     return add_link(types.GetLink, args, tv=tv)
 * def QueryLink(*args, tv=None):
 *     return add_link(types.QueryLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def BindLink(*args, tv=None):
 *     return add_link(types.BindLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_QueryLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 199, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":198
 * def GetLink(*args, tv=None):
 *     return add_link(types.GetLink, args, tv=tv)
 * def QueryLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.QueryLink, args, tv=tv)
 * def BindLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.QueryLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":200
 * def QueryLink(*args, tv=None):
 *     return add_link(types.QueryLink, args, tv=tv)
 * def BindLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BindLink, args, tv=tv)
 * def DualLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_195BindLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_195BindLink = {"BindLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_195BindLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_195BindLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BindLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "BindLink") < 0)) __PYX_ERR(1, 200, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("BindLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 200, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.BindLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_194BindLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_194BindLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BindLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":201
 *     return add_link(types.QueryLink, args, tv=tv)
 * def BindLink(*args, tv=None):
 *     return add_link(types.BindLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def DualLink(*args, tv=None):
 *     return add_link(types.DualLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_BindLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 201, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":200
 * def QueryLink(*args, tv=None):
 *     return add_link(types.QueryLink, args, tv=tv)
 * def BindLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BindLink, args, tv=tv)
 * def DualLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.BindLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":202
 * def BindLink(*args, tv=None):
 *     return add_link(types.BindLink, args, tv=tv)
 * def DualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DualLink, args, tv=tv)
 * def EvaluationLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_197DualLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_197DualLink = {"DualLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_197DualLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_197DualLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DualLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "DualLink") < 0)) __PYX_ERR(1, 202, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("DualLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 202, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.DualLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_196DualLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_196DualLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DualLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":203
 *     return add_link(types.BindLink, args, tv=tv)
 * def DualLink(*args, tv=None):
 *     return add_link(types.DualLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def EvaluationLink(*args, tv=None):
 *     return add_link(types.EvaluationLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_DualLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 203, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":202
 * def BindLink(*args, tv=None):
 *     return add_link(types.BindLink, args, tv=tv)
 * def DualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DualLink, args, tv=tv)
 * def EvaluationLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.DualLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":204
 * def DualLink(*args, tv=None):
 *     return add_link(types.DualLink, args, tv=tv)
 * def EvaluationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EvaluationLink, args, tv=tv)
 * def TypeNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_199EvaluationLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_199EvaluationLink = {"EvaluationLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_199EvaluationLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_199EvaluationLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("EvaluationLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "EvaluationLink") < 0)) __PYX_ERR(1, 204, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("EvaluationLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 204, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.EvaluationLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_198EvaluationLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_198EvaluationLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("EvaluationLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":205
 *     return add_link(types.DualLink, args, tv=tv)
 * def EvaluationLink(*args, tv=None):
 *     return add_link(types.EvaluationLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TypeNode(node_name, tv=None):
 *     return add_node(types.TypeNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_EvaluationLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 205, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":204
 * def DualLink(*args, tv=None):
 *     return add_link(types.DualLink, args, tv=tv)
 * def EvaluationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EvaluationLink, args, tv=tv)
 * def TypeNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.EvaluationLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":206
 * def EvaluationLink(*args, tv=None):
 *     return add_link(types.EvaluationLink, args, tv=tv)
 * def TypeNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeNode, node_name, tv)
 * def TypeInhNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_201TypeNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_201TypeNode = {"TypeNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_201TypeNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_201TypeNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TypeNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "TypeNode") < 0)) __PYX_ERR(1, 206, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TypeNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 206, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.TypeNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_200TypeNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_200TypeNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TypeNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":207
 *     return add_link(types.EvaluationLink, args, tv=tv)
 * def TypeNode(node_name, tv=None):
 *     return add_node(types.TypeNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def TypeInhNode(node_name, tv=None):
 *     return add_node(types.TypeInhNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_TypeNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 207, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 207, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":206
 * def EvaluationLink(*args, tv=None):
 *     return add_link(types.EvaluationLink, args, tv=tv)
 * def TypeNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeNode, node_name, tv)
 * def TypeInhNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.TypeNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":208
 * def TypeNode(node_name, tv=None):
 *     return add_node(types.TypeNode, node_name, tv)
 * def TypeInhNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeInhNode, node_name, tv)
 * def TypeCoInhNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_203TypeInhNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_203TypeInhNode = {"TypeInhNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_203TypeInhNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_203TypeInhNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TypeInhNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "TypeInhNode") < 0)) __PYX_ERR(1, 208, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TypeInhNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 208, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.TypeInhNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_202TypeInhNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_202TypeInhNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TypeInhNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":209
 *     return add_node(types.TypeNode, node_name, tv)
 * def TypeInhNode(node_name, tv=None):
 *     return add_node(types.TypeInhNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def TypeCoInhNode(node_name, tv=None):
 *     return add_node(types.TypeCoInhNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_TypeInhNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 209, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 209, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":208
 * def TypeNode(node_name, tv=None):
 *     return add_node(types.TypeNode, node_name, tv)
 * def TypeInhNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeInhNode, node_name, tv)
 * def TypeCoInhNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.TypeInhNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":210
 * def TypeInhNode(node_name, tv=None):
 *     return add_node(types.TypeInhNode, node_name, tv)
 * def TypeCoInhNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeCoInhNode, node_name, tv)
 * def DefinedTypeNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_205TypeCoInhNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_205TypeCoInhNode = {"TypeCoInhNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_205TypeCoInhNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_205TypeCoInhNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TypeCoInhNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "TypeCoInhNode") < 0)) __PYX_ERR(1, 210, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TypeCoInhNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 210, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.TypeCoInhNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_204TypeCoInhNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_204TypeCoInhNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TypeCoInhNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":211
 *     return add_node(types.TypeInhNode, node_name, tv)
 * def TypeCoInhNode(node_name, tv=None):
 *     return add_node(types.TypeCoInhNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def DefinedTypeNode(node_name, tv=None):
 *     return add_node(types.DefinedTypeNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 211, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 211, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_TypeCoInhNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 211, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 211, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 211, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 211, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 211, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":210
 * def TypeInhNode(node_name, tv=None):
 *     return add_node(types.TypeInhNode, node_name, tv)
 * def TypeCoInhNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeCoInhNode, node_name, tv)
 * def DefinedTypeNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.TypeCoInhNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":212
 * def TypeCoInhNode(node_name, tv=None):
 *     return add_node(types.TypeCoInhNode, node_name, tv)
 * def DefinedTypeNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedTypeNode, node_name, tv)
 * def TypeChoice(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_207DefinedTypeNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_207DefinedTypeNode = {"DefinedTypeNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_207DefinedTypeNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_207DefinedTypeNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DefinedTypeNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "DefinedTypeNode") < 0)) __PYX_ERR(1, 212, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("DefinedTypeNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 212, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.DefinedTypeNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_206DefinedTypeNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_206DefinedTypeNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DefinedTypeNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":213
 *     return add_node(types.TypeCoInhNode, node_name, tv)
 * def DefinedTypeNode(node_name, tv=None):
 *     return add_node(types.DefinedTypeNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def TypeChoice(*args, tv=None):
 *     return add_link(types.TypeChoice, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_DefinedTypeNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 213, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 213, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":212
 * def TypeCoInhNode(node_name, tv=None):
 *     return add_node(types.TypeCoInhNode, node_name, tv)
 * def DefinedTypeNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedTypeNode, node_name, tv)
 * def TypeChoice(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.DefinedTypeNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":214
 * def DefinedTypeNode(node_name, tv=None):
 *     return add_node(types.DefinedTypeNode, node_name, tv)
 * def TypeChoice(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeChoice, args, tv=tv)
 * def TypeIntersectionLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_209TypeChoice(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_209TypeChoice = {"TypeChoice", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_209TypeChoice, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_209TypeChoice(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TypeChoice (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TypeChoice") < 0)) __PYX_ERR(1, 214, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TypeChoice", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 214, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TypeChoice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_208TypeChoice(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_208TypeChoice(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TypeChoice", 0);

  /* "../../atoms/atom_types/core_types.pyx":215
 *     return add_node(types.DefinedTypeNode, node_name, tv)
 * def TypeChoice(*args, tv=None):
 *     return add_link(types.TypeChoice, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TypeIntersectionLink(*args, tv=None):
 *     return add_link(types.TypeIntersectionLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TypeChoice); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 215, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":214
 * def DefinedTypeNode(node_name, tv=None):
 *     return add_node(types.DefinedTypeNode, node_name, tv)
 * def TypeChoice(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeChoice, args, tv=tv)
 * def TypeIntersectionLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TypeChoice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":216
 * def TypeChoice(*args, tv=None):
 *     return add_link(types.TypeChoice, args, tv=tv)
 * def TypeIntersectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeIntersectionLink, args, tv=tv)
 * def ArrowLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_211TypeIntersectionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_211TypeIntersectionLink = {"TypeIntersectionLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_211TypeIntersectionLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_211TypeIntersectionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TypeIntersectionLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TypeIntersectionLink") < 0)) __PYX_ERR(1, 216, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TypeIntersectionLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 216, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TypeIntersectionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_210TypeIntersectionLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_210TypeIntersectionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TypeIntersectionLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":217
 *     return add_link(types.TypeChoice, args, tv=tv)
 * def TypeIntersectionLink(*args, tv=None):
 *     return add_link(types.TypeIntersectionLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ArrowLink(*args, tv=None):
 *     return add_link(types.ArrowLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TypeIntersectionLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 217, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":216
 * def TypeChoice(*args, tv=None):
 *     return add_link(types.TypeChoice, args, tv=tv)
 * def TypeIntersectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeIntersectionLink, args, tv=tv)
 * def ArrowLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TypeIntersectionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":218
 * def TypeIntersectionLink(*args, tv=None):
 *     return add_link(types.TypeIntersectionLink, args, tv=tv)
 * def ArrowLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ArrowLink, args, tv=tv)
 * def SignatureLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_213ArrowLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_213ArrowLink = {"ArrowLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_213ArrowLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_213ArrowLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ArrowLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ArrowLink") < 0)) __PYX_ERR(1, 218, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ArrowLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 218, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ArrowLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_212ArrowLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_212ArrowLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ArrowLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":219
 *     return add_link(types.TypeIntersectionLink, args, tv=tv)
 * def ArrowLink(*args, tv=None):
 *     return add_link(types.ArrowLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SignatureLink(*args, tv=None):
 *     return add_link(types.SignatureLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ArrowLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 219, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":218
 * def TypeIntersectionLink(*args, tv=None):
 *     return add_link(types.TypeIntersectionLink, args, tv=tv)
 * def ArrowLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ArrowLink, args, tv=tv)
 * def SignatureLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ArrowLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":220
 * def ArrowLink(*args, tv=None):
 *     return add_link(types.ArrowLink, args, tv=tv)
 * def SignatureLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SignatureLink, args, tv=tv)
 * def SignNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_215SignatureLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_215SignatureLink = {"SignatureLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_215SignatureLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_215SignatureLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SignatureLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SignatureLink") < 0)) __PYX_ERR(1, 220, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SignatureLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 220, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SignatureLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_214SignatureLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_214SignatureLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SignatureLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":221
 *     return add_link(types.ArrowLink, args, tv=tv)
 * def SignatureLink(*args, tv=None):
 *     return add_link(types.SignatureLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SignNode(node_name, tv=None):
 *     return add_node(types.SignNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SignatureLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 221, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":220
 * def ArrowLink(*args, tv=None):
 *     return add_link(types.ArrowLink, args, tv=tv)
 * def SignatureLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SignatureLink, args, tv=tv)
 * def SignNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SignatureLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":222
 * def SignatureLink(*args, tv=None):
 *     return add_link(types.SignatureLink, args, tv=tv)
 * def SignNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SignNode, node_name, tv)
 * def LinkSignatureLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_217SignNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_217SignNode = {"SignNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_217SignNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_217SignNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SignNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "SignNode") < 0)) __PYX_ERR(1, 222, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SignNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 222, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.SignNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_216SignNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_216SignNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SignNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":223
 *     return add_link(types.SignatureLink, args, tv=tv)
 * def SignNode(node_name, tv=None):
 *     return add_node(types.SignNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def LinkSignatureLink(*args, tv=None):
 *     return add_link(types.LinkSignatureLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 223, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 223, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_SignNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 223, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 223, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 223, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 223, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 223, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":222
 * def SignatureLink(*args, tv=None):
 *     return add_link(types.SignatureLink, args, tv=tv)
 * def SignNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SignNode, node_name, tv)
 * def LinkSignatureLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.SignNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":224
 * def SignNode(node_name, tv=None):
 *     return add_node(types.SignNode, node_name, tv)
 * def LinkSignatureLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LinkSignatureLink, args, tv=tv)
 * def TypedVariableLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_219LinkSignatureLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_219LinkSignatureLink = {"LinkSignatureLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_219LinkSignatureLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_219LinkSignatureLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LinkSignatureLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "LinkSignatureLink") < 0)) __PYX_ERR(1, 224, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LinkSignatureLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 224, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.LinkSignatureLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_218LinkSignatureLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_218LinkSignatureLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinkSignatureLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":225
 *     return add_node(types.SignNode, node_name, tv)
 * def LinkSignatureLink(*args, tv=None):
 *     return add_link(types.LinkSignatureLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TypedVariableLink(*args, tv=None):
 *     return add_link(types.TypedVariableLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_LinkSignatureLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 225, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":224
 * def SignNode(node_name, tv=None):
 *     return add_node(types.SignNode, node_name, tv)
 * def LinkSignatureLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LinkSignatureLink, args, tv=tv)
 * def TypedVariableLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.LinkSignatureLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":226
 * def LinkSignatureLink(*args, tv=None):
 *     return add_link(types.LinkSignatureLink, args, tv=tv)
 * def TypedVariableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypedVariableLink, args, tv=tv)
 * def TypedAtomLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_221TypedVariableLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_221TypedVariableLink = {"TypedVariableLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_221TypedVariableLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_221TypedVariableLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TypedVariableLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TypedVariableLink") < 0)) __PYX_ERR(1, 226, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TypedVariableLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 226, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TypedVariableLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_220TypedVariableLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_220TypedVariableLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TypedVariableLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":227
 *     return add_link(types.LinkSignatureLink, args, tv=tv)
 * def TypedVariableLink(*args, tv=None):
 *     return add_link(types.TypedVariableLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TypedAtomLink(*args, tv=None):
 *     return add_link(types.TypedAtomLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TypedVariableLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 227, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":226
 * def LinkSignatureLink(*args, tv=None):
 *     return add_link(types.LinkSignatureLink, args, tv=tv)
 * def TypedVariableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypedVariableLink, args, tv=tv)
 * def TypedAtomLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TypedVariableLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":228
 * def TypedVariableLink(*args, tv=None):
 *     return add_link(types.TypedVariableLink, args, tv=tv)
 * def TypedAtomLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypedAtomLink, args, tv=tv)
 * def IntervalLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_223TypedAtomLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_223TypedAtomLink = {"TypedAtomLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_223TypedAtomLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_223TypedAtomLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TypedAtomLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TypedAtomLink") < 0)) __PYX_ERR(1, 228, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TypedAtomLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 228, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TypedAtomLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_222TypedAtomLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_222TypedAtomLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TypedAtomLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":229
 *     return add_link(types.TypedVariableLink, args, tv=tv)
 * def TypedAtomLink(*args, tv=None):
 *     return add_link(types.TypedAtomLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def IntervalLink(*args, tv=None):
 *     return add_link(types.IntervalLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TypedAtomLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 229, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":228
 * def TypedVariableLink(*args, tv=None):
 *     return add_link(types.TypedVariableLink, args, tv=tv)
 * def TypedAtomLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypedAtomLink, args, tv=tv)
 * def IntervalLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TypedAtomLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":230
 * def TypedAtomLink(*args, tv=None):
 *     return add_link(types.TypedAtomLink, args, tv=tv)
 * def IntervalLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IntervalLink, args, tv=tv)
 * def AnchorNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_225IntervalLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_225IntervalLink = {"IntervalLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_225IntervalLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_225IntervalLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("IntervalLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "IntervalLink") < 0)) __PYX_ERR(1, 230, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("IntervalLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 230, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.IntervalLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_224IntervalLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_224IntervalLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("IntervalLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":231
 *     return add_link(types.TypedAtomLink, args, tv=tv)
 * def IntervalLink(*args, tv=None):
 *     return add_link(types.IntervalLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def AnchorNode(node_name, tv=None):
 *     return add_node(types.AnchorNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_IntervalLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 231, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":230
 * def TypedAtomLink(*args, tv=None):
 *     return add_link(types.TypedAtomLink, args, tv=tv)
 * def IntervalLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IntervalLink, args, tv=tv)
 * def AnchorNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.IntervalLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":232
 * def IntervalLink(*args, tv=None):
 *     return add_link(types.IntervalLink, args, tv=tv)
 * def AnchorNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.AnchorNode, node_name, tv)
 * def SimilarityLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_227AnchorNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_227AnchorNode = {"AnchorNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_227AnchorNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_227AnchorNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AnchorNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AnchorNode") < 0)) __PYX_ERR(1, 232, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AnchorNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 232, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.AnchorNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_226AnchorNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_226AnchorNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AnchorNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":233
 *     return add_link(types.IntervalLink, args, tv=tv)
 * def AnchorNode(node_name, tv=None):
 *     return add_node(types.AnchorNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def SimilarityLink(*args, tv=None):
 *     return add_link(types.SimilarityLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_AnchorNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 233, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 233, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":232
 * def IntervalLink(*args, tv=None):
 *     return add_link(types.IntervalLink, args, tv=tv)
 * def AnchorNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.AnchorNode, node_name, tv)
 * def SimilarityLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.AnchorNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":234
 * def AnchorNode(node_name, tv=None):
 *     return add_node(types.AnchorNode, node_name, tv)
 * def SimilarityLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SimilarityLink, args, tv=tv)
 * def VirtualLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_229SimilarityLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_229SimilarityLink = {"SimilarityLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_229SimilarityLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_229SimilarityLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SimilarityLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SimilarityLink") < 0)) __PYX_ERR(1, 234, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SimilarityLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 234, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SimilarityLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_228SimilarityLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_228SimilarityLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SimilarityLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":235
 *     return add_node(types.AnchorNode, node_name, tv)
 * def SimilarityLink(*args, tv=None):
 *     return add_link(types.SimilarityLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def VirtualLink(*args, tv=None):
 *     return add_link(types.VirtualLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SimilarityLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 235, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":234
 * def AnchorNode(node_name, tv=None):
 *     return add_node(types.AnchorNode, node_name, tv)
 * def SimilarityLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SimilarityLink, args, tv=tv)
 * def VirtualLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SimilarityLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":236
 * def SimilarityLink(*args, tv=None):
 *     return add_link(types.SimilarityLink, args, tv=tv)
 * def VirtualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VirtualLink, args, tv=tv)
 * def GreaterThanLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_231VirtualLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_231VirtualLink = {"VirtualLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_231VirtualLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_231VirtualLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("VirtualLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "VirtualLink") < 0)) __PYX_ERR(1, 236, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("VirtualLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 236, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.VirtualLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_230VirtualLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_230VirtualLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("VirtualLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":237
 *     return add_link(types.SimilarityLink, args, tv=tv)
 * def VirtualLink(*args, tv=None):
 *     return add_link(types.VirtualLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def GreaterThanLink(*args, tv=None):
 *     return add_link(types.GreaterThanLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_VirtualLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 237, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":236
 * def SimilarityLink(*args, tv=None):
 *     return add_link(types.SimilarityLink, args, tv=tv)
 * def VirtualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VirtualLink, args, tv=tv)
 * def GreaterThanLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.VirtualLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":238
 * def VirtualLink(*args, tv=None):
 *     return add_link(types.VirtualLink, args, tv=tv)
 * def GreaterThanLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GreaterThanLink, args, tv=tv)
 * def LessThanLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_233GreaterThanLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_233GreaterThanLink = {"GreaterThanLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_233GreaterThanLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_233GreaterThanLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GreaterThanLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "GreaterThanLink") < 0)) __PYX_ERR(1, 238, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("GreaterThanLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 238, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.GreaterThanLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_232GreaterThanLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_232GreaterThanLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("GreaterThanLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":239
 *     return add_link(types.VirtualLink, args, tv=tv)
 * def GreaterThanLink(*args, tv=None):
 *     return add_link(types.GreaterThanLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def LessThanLink(*args, tv=None):
 *     return add_link(types.LessThanLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GreaterThanLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 239, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":238
 * def VirtualLink(*args, tv=None):
 *     return add_link(types.VirtualLink, args, tv=tv)
 * def GreaterThanLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GreaterThanLink, args, tv=tv)
 * def LessThanLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.GreaterThanLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":240
 * def GreaterThanLink(*args, tv=None):
 *     return add_link(types.GreaterThanLink, args, tv=tv)
 * def LessThanLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LessThanLink, args, tv=tv)
 * def IsClosedLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_235LessThanLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_235LessThanLink = {"LessThanLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_235LessThanLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_235LessThanLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LessThanLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "LessThanLink") < 0)) __PYX_ERR(1, 240, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LessThanLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 240, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.LessThanLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_234LessThanLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_234LessThanLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LessThanLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":241
 *     return add_link(types.GreaterThanLink, args, tv=tv)
 * def LessThanLink(*args, tv=None):
 *     return add_link(types.LessThanLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def IsClosedLink(*args, tv=None):
 *     return add_link(types.IsClosedLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_LessThanLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 241, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":240
 * def GreaterThanLink(*args, tv=None):
 *     return add_link(types.GreaterThanLink, args, tv=tv)
 * def LessThanLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LessThanLink, args, tv=tv)
 * def IsClosedLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.LessThanLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":242
 * def LessThanLink(*args, tv=None):
 *     return add_link(types.LessThanLink, args, tv=tv)
 * def IsClosedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsClosedLink, args, tv=tv)
 * def IsTrueLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_237IsClosedLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_237IsClosedLink = {"IsClosedLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_237IsClosedLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_237IsClosedLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("IsClosedLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "IsClosedLink") < 0)) __PYX_ERR(1, 242, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("IsClosedLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 242, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.IsClosedLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_236IsClosedLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_236IsClosedLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("IsClosedLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":243
 *     return add_link(types.LessThanLink, args, tv=tv)
 * def IsClosedLink(*args, tv=None):
 *     return add_link(types.IsClosedLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def IsTrueLink(*args, tv=None):
 *     return add_link(types.IsTrueLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_IsClosedLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 243, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":242
 * def LessThanLink(*args, tv=None):
 *     return add_link(types.LessThanLink, args, tv=tv)
 * def IsClosedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsClosedLink, args, tv=tv)
 * def IsTrueLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.IsClosedLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":244
 * def IsClosedLink(*args, tv=None):
 *     return add_link(types.IsClosedLink, args, tv=tv)
 * def IsTrueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsTrueLink, args, tv=tv)
 * def IsFalseLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_239IsTrueLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_239IsTrueLink = {"IsTrueLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_239IsTrueLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_239IsTrueLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("IsTrueLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "IsTrueLink") < 0)) __PYX_ERR(1, 244, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("IsTrueLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 244, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.IsTrueLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_238IsTrueLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_238IsTrueLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("IsTrueLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":245
 *     return add_link(types.IsClosedLink, args, tv=tv)
 * def IsTrueLink(*args, tv=None):
 *     return add_link(types.IsTrueLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def IsFalseLink(*args, tv=None):
 *     return add_link(types.IsFalseLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_IsTrueLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 245, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":244
 * def IsClosedLink(*args, tv=None):
 *     return add_link(types.IsClosedLink, args, tv=tv)
 * def IsTrueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsTrueLink, args, tv=tv)
 * def IsFalseLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.IsTrueLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":246
 * def IsTrueLink(*args, tv=None):
 *     return add_link(types.IsTrueLink, args, tv=tv)
 * def IsFalseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsFalseLink, args, tv=tv)
 * def IdenticalLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_241IsFalseLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_241IsFalseLink = {"IsFalseLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_241IsFalseLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_241IsFalseLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("IsFalseLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "IsFalseLink") < 0)) __PYX_ERR(1, 246, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("IsFalseLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 246, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.IsFalseLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_240IsFalseLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_240IsFalseLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("IsFalseLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":247
 *     return add_link(types.IsTrueLink, args, tv=tv)
 * def IsFalseLink(*args, tv=None):
 *     return add_link(types.IsFalseLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def IdenticalLink(*args, tv=None):
 *     return add_link(types.IdenticalLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_IsFalseLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 247, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":246
 * def IsTrueLink(*args, tv=None):
 *     return add_link(types.IsTrueLink, args, tv=tv)
 * def IsFalseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsFalseLink, args, tv=tv)
 * def IdenticalLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.IsFalseLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":248
 * def IsFalseLink(*args, tv=None):
 *     return add_link(types.IsFalseLink, args, tv=tv)
 * def IdenticalLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IdenticalLink, args, tv=tv)
 * def EqualLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_243IdenticalLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_243IdenticalLink = {"IdenticalLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_243IdenticalLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_243IdenticalLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("IdenticalLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "IdenticalLink") < 0)) __PYX_ERR(1, 248, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("IdenticalLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 248, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.IdenticalLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_242IdenticalLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_242IdenticalLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("IdenticalLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":249
 *     return add_link(types.IsFalseLink, args, tv=tv)
 * def IdenticalLink(*args, tv=None):
 *     return add_link(types.IdenticalLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def EqualLink(*args, tv=None):
 *     return add_link(types.EqualLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_IdenticalLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 249, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":248
 * def IsFalseLink(*args, tv=None):
 *     return add_link(types.IsFalseLink, args, tv=tv)
 * def IdenticalLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IdenticalLink, args, tv=tv)
 * def EqualLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.IdenticalLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":250
 * def IdenticalLink(*args, tv=None):
 *     return add_link(types.IdenticalLink, args, tv=tv)
 * def EqualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EqualLink, args, tv=tv)
 * def AlphaEqualLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_245EqualLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_245EqualLink = {"EqualLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_245EqualLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_245EqualLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("EqualLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "EqualLink") < 0)) __PYX_ERR(1, 250, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("EqualLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 250, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.EqualLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_244EqualLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_244EqualLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("EqualLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":251
 *     return add_link(types.IdenticalLink, args, tv=tv)
 * def EqualLink(*args, tv=None):
 *     return add_link(types.EqualLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def AlphaEqualLink(*args, tv=None):
 *     return add_link(types.AlphaEqualLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_EqualLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 251, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":250
 * def IdenticalLink(*args, tv=None):
 *     return add_link(types.IdenticalLink, args, tv=tv)
 * def EqualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EqualLink, args, tv=tv)
 * def AlphaEqualLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.EqualLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":252
 * def EqualLink(*args, tv=None):
 *     return add_link(types.EqualLink, args, tv=tv)
 * def AlphaEqualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlphaEqualLink, args, tv=tv)
 * def ExclusiveLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_247AlphaEqualLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_247AlphaEqualLink = {"AlphaEqualLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_247AlphaEqualLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_247AlphaEqualLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AlphaEqualLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "AlphaEqualLink") < 0)) __PYX_ERR(1, 252, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AlphaEqualLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 252, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.AlphaEqualLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_246AlphaEqualLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_246AlphaEqualLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AlphaEqualLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":253
 *     return add_link(types.EqualLink, args, tv=tv)
 * def AlphaEqualLink(*args, tv=None):
 *     return add_link(types.AlphaEqualLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ExclusiveLink(*args, tv=None):
 *     return add_link(types.ExclusiveLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_AlphaEqualLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 253, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":252
 * def EqualLink(*args, tv=None):
 *     return add_link(types.EqualLink, args, tv=tv)
 * def AlphaEqualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlphaEqualLink, args, tv=tv)
 * def ExclusiveLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.AlphaEqualLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":254
 * def AlphaEqualLink(*args, tv=None):
 *     return add_link(types.AlphaEqualLink, args, tv=tv)
 * def ExclusiveLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExclusiveLink, args, tv=tv)
 * def SatisfactionLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_249ExclusiveLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_249ExclusiveLink = {"ExclusiveLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_249ExclusiveLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_249ExclusiveLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ExclusiveLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ExclusiveLink") < 0)) __PYX_ERR(1, 254, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ExclusiveLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 254, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ExclusiveLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_248ExclusiveLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_248ExclusiveLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ExclusiveLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":255
 *     return add_link(types.AlphaEqualLink, args, tv=tv)
 * def ExclusiveLink(*args, tv=None):
 *     return add_link(types.ExclusiveLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SatisfactionLink(*args, tv=None):
 *     return add_link(types.SatisfactionLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ExclusiveLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 255, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":254
 * def AlphaEqualLink(*args, tv=None):
 *     return add_link(types.AlphaEqualLink, args, tv=tv)
 * def ExclusiveLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExclusiveLink, args, tv=tv)
 * def SatisfactionLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ExclusiveLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":256
 * def ExclusiveLink(*args, tv=None):
 *     return add_link(types.ExclusiveLink, args, tv=tv)
 * def SatisfactionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SatisfactionLink, args, tv=tv)
 * def FunctionLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_251SatisfactionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_251SatisfactionLink = {"SatisfactionLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_251SatisfactionLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_251SatisfactionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SatisfactionLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SatisfactionLink") < 0)) __PYX_ERR(1, 256, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SatisfactionLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 256, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SatisfactionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_250SatisfactionLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_250SatisfactionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SatisfactionLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":257
 *     return add_link(types.ExclusiveLink, args, tv=tv)
 * def SatisfactionLink(*args, tv=None):
 *     return add_link(types.SatisfactionLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def FunctionLink(*args, tv=None):
 *     return add_link(types.FunctionLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SatisfactionLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 257, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":256
 * def ExclusiveLink(*args, tv=None):
 *     return add_link(types.ExclusiveLink, args, tv=tv)
 * def SatisfactionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SatisfactionLink, args, tv=tv)
 * def FunctionLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SatisfactionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":258
 * def SatisfactionLink(*args, tv=None):
 *     return add_link(types.SatisfactionLink, args, tv=tv)
 * def FunctionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FunctionLink, args, tv=tv)
 * def BoolOpLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_253FunctionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_253FunctionLink = {"FunctionLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_253FunctionLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_253FunctionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("FunctionLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "FunctionLink") < 0)) __PYX_ERR(1, 258, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("FunctionLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 258, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.FunctionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_252FunctionLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_252FunctionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FunctionLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":259
 *     return add_link(types.SatisfactionLink, args, tv=tv)
 * def FunctionLink(*args, tv=None):
 *     return add_link(types.FunctionLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def BoolOpLink(*args, tv=None):
 *     return add_link(types.BoolOpLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_FunctionLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 259, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":258
 * def SatisfactionLink(*args, tv=None):
 *     return add_link(types.SatisfactionLink, args, tv=tv)
 * def FunctionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FunctionLink, args, tv=tv)
 * def BoolOpLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.FunctionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":260
 * def FunctionLink(*args, tv=None):
 *     return add_link(types.FunctionLink, args, tv=tv)
 * def BoolOpLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolOpLink, args, tv=tv)
 * def BoolAndLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_255BoolOpLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_255BoolOpLink = {"BoolOpLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_255BoolOpLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_255BoolOpLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BoolOpLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "BoolOpLink") < 0)) __PYX_ERR(1, 260, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("BoolOpLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 260, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.BoolOpLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_254BoolOpLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_254BoolOpLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BoolOpLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":261
 *     return add_link(types.FunctionLink, args, tv=tv)
 * def BoolOpLink(*args, tv=None):
 *     return add_link(types.BoolOpLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def BoolAndLink(*args, tv=None):
 *     return add_link(types.BoolAndLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_BoolOpLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 261, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":260
 * def FunctionLink(*args, tv=None):
 *     return add_link(types.FunctionLink, args, tv=tv)
 * def BoolOpLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolOpLink, args, tv=tv)
 * def BoolAndLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.BoolOpLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":262
 * def BoolOpLink(*args, tv=None):
 *     return add_link(types.BoolOpLink, args, tv=tv)
 * def BoolAndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolAndLink, args, tv=tv)
 * def BoolOrLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_257BoolAndLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_257BoolAndLink = {"BoolAndLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_257BoolAndLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_257BoolAndLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BoolAndLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "BoolAndLink") < 0)) __PYX_ERR(1, 262, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("BoolAndLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 262, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.BoolAndLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_256BoolAndLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_256BoolAndLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BoolAndLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":263
 *     return add_link(types.BoolOpLink, args, tv=tv)
 * def BoolAndLink(*args, tv=None):
 *     return add_link(types.BoolAndLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def BoolOrLink(*args, tv=None):
 *     return add_link(types.BoolOrLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_BoolAndLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 263, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":262
 * def BoolOpLink(*args, tv=None):
 *     return add_link(types.BoolOpLink, args, tv=tv)
 * def BoolAndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolAndLink, args, tv=tv)
 * def BoolOrLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.BoolAndLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":264
 * def BoolAndLink(*args, tv=None):
 *     return add_link(types.BoolAndLink, args, tv=tv)
 * def BoolOrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolOrLink, args, tv=tv)
 * def BoolNotLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_259BoolOrLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_259BoolOrLink = {"BoolOrLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_259BoolOrLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_259BoolOrLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BoolOrLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "BoolOrLink") < 0)) __PYX_ERR(1, 264, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("BoolOrLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 264, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.BoolOrLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_258BoolOrLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_258BoolOrLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BoolOrLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":265
 *     return add_link(types.BoolAndLink, args, tv=tv)
 * def BoolOrLink(*args, tv=None):
 *     return add_link(types.BoolOrLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def BoolNotLink(*args, tv=None):
 *     return add_link(types.BoolNotLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_BoolOrLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 265, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":264
 * def BoolAndLink(*args, tv=None):
 *     return add_link(types.BoolAndLink, args, tv=tv)
 * def BoolOrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolOrLink, args, tv=tv)
 * def BoolNotLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.BoolOrLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":266
 * def BoolOrLink(*args, tv=None):
 *     return add_link(types.BoolOrLink, args, tv=tv)
 * def BoolNotLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolNotLink, args, tv=tv)
 * def NumericFunctionLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_261BoolNotLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_261BoolNotLink = {"BoolNotLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_261BoolNotLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_261BoolNotLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BoolNotLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "BoolNotLink") < 0)) __PYX_ERR(1, 266, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("BoolNotLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 266, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.BoolNotLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_260BoolNotLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_260BoolNotLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BoolNotLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":267
 *     return add_link(types.BoolOrLink, args, tv=tv)
 * def BoolNotLink(*args, tv=None):
 *     return add_link(types.BoolNotLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def NumericFunctionLink(*args, tv=None):
 *     return add_link(types.NumericFunctionLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_BoolNotLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 267, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":266
 * def BoolOrLink(*args, tv=None):
 *     return add_link(types.BoolOrLink, args, tv=tv)
 * def BoolNotLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolNotLink, args, tv=tv)
 * def NumericFunctionLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.BoolNotLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":268
 * def BoolNotLink(*args, tv=None):
 *     return add_link(types.BoolNotLink, args, tv=tv)
 * def NumericFunctionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericFunctionLink, args, tv=tv)
 * def FoldLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_263NumericFunctionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_263NumericFunctionLink = {"NumericFunctionLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_263NumericFunctionLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_263NumericFunctionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("NumericFunctionLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "NumericFunctionLink") < 0)) __PYX_ERR(1, 268, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("NumericFunctionLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 268, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.NumericFunctionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_262NumericFunctionLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_262NumericFunctionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("NumericFunctionLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":269
 *     return add_link(types.BoolNotLink, args, tv=tv)
 * def NumericFunctionLink(*args, tv=None):
 *     return add_link(types.NumericFunctionLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def FoldLink(*args, tv=None):
 *     return add_link(types.FoldLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_NumericFunctionLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 269, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":268
 * def BoolNotLink(*args, tv=None):
 *     return add_link(types.BoolNotLink, args, tv=tv)
 * def NumericFunctionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericFunctionLink, args, tv=tv)
 * def FoldLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.NumericFunctionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":270
 * def NumericFunctionLink(*args, tv=None):
 *     return add_link(types.NumericFunctionLink, args, tv=tv)
 * def FoldLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FoldLink, args, tv=tv)
 * def ArithmeticLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_265FoldLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_265FoldLink = {"FoldLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_265FoldLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_265FoldLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("FoldLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "FoldLink") < 0)) __PYX_ERR(1, 270, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("FoldLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 270, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.FoldLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_264FoldLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_264FoldLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FoldLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":271
 *     return add_link(types.NumericFunctionLink, args, tv=tv)
 * def FoldLink(*args, tv=None):
 *     return add_link(types.FoldLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ArithmeticLink(*args, tv=None):
 *     return add_link(types.ArithmeticLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_FoldLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 271, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":270
 * def NumericFunctionLink(*args, tv=None):
 *     return add_link(types.NumericFunctionLink, args, tv=tv)
 * def FoldLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FoldLink, args, tv=tv)
 * def ArithmeticLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.FoldLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":272
 * def FoldLink(*args, tv=None):
 *     return add_link(types.FoldLink, args, tv=tv)
 * def ArithmeticLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ArithmeticLink, args, tv=tv)
 * def PlusLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_267ArithmeticLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_267ArithmeticLink = {"ArithmeticLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_267ArithmeticLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_267ArithmeticLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ArithmeticLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ArithmeticLink") < 0)) __PYX_ERR(1, 272, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ArithmeticLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 272, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ArithmeticLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_266ArithmeticLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_266ArithmeticLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ArithmeticLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":273
 *     return add_link(types.FoldLink, args, tv=tv)
 * def ArithmeticLink(*args, tv=None):
 *     return add_link(types.ArithmeticLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def PlusLink(*args, tv=None):
 *     return add_link(types.PlusLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ArithmeticLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 273, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":272
 * def FoldLink(*args, tv=None):
 *     return add_link(types.FoldLink, args, tv=tv)
 * def ArithmeticLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ArithmeticLink, args, tv=tv)
 * def PlusLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ArithmeticLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":274
 * def ArithmeticLink(*args, tv=None):
 *     return add_link(types.ArithmeticLink, args, tv=tv)
 * def PlusLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PlusLink, args, tv=tv)
 * def MinusLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_269PlusLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_269PlusLink = {"PlusLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_269PlusLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_269PlusLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PlusLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "PlusLink") < 0)) __PYX_ERR(1, 274, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PlusLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 274, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.PlusLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_268PlusLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_268PlusLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PlusLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":275
 *     return add_link(types.ArithmeticLink, args, tv=tv)
 * def PlusLink(*args, tv=None):
 *     return add_link(types.PlusLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def MinusLink(*args, tv=None):
 *     return add_link(types.MinusLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_PlusLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 275, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":274
 * def ArithmeticLink(*args, tv=None):
 *     return add_link(types.ArithmeticLink, args, tv=tv)
 * def PlusLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PlusLink, args, tv=tv)
 * def MinusLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.PlusLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":276
 * def PlusLink(*args, tv=None):
 *     return add_link(types.PlusLink, args, tv=tv)
 * def MinusLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinusLink, args, tv=tv)
 * def TimesLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_271MinusLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_271MinusLink = {"MinusLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_271MinusLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_271MinusLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("MinusLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "MinusLink") < 0)) __PYX_ERR(1, 276, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("MinusLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 276, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.MinusLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_270MinusLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_270MinusLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("MinusLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":277
 *     return add_link(types.PlusLink, args, tv=tv)
 * def MinusLink(*args, tv=None):
 *     return add_link(types.MinusLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TimesLink(*args, tv=None):
 *     return add_link(types.TimesLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_MinusLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 277, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":276
 * def PlusLink(*args, tv=None):
 *     return add_link(types.PlusLink, args, tv=tv)
 * def MinusLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinusLink, args, tv=tv)
 * def TimesLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.MinusLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":278
 * def MinusLink(*args, tv=None):
 *     return add_link(types.MinusLink, args, tv=tv)
 * def TimesLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TimesLink, args, tv=tv)
 * def DivideLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_273TimesLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_273TimesLink = {"TimesLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_273TimesLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_273TimesLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TimesLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TimesLink") < 0)) __PYX_ERR(1, 278, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TimesLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 278, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TimesLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_272TimesLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_272TimesLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TimesLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":279
 *     return add_link(types.MinusLink, args, tv=tv)
 * def TimesLink(*args, tv=None):
 *     return add_link(types.TimesLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def DivideLink(*args, tv=None):
 *     return add_link(types.DivideLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TimesLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 279, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":278
 * def MinusLink(*args, tv=None):
 *     return add_link(types.MinusLink, args, tv=tv)
 * def TimesLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TimesLink, args, tv=tv)
 * def DivideLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TimesLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":280
 * def TimesLink(*args, tv=None):
 *     return add_link(types.TimesLink, args, tv=tv)
 * def DivideLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DivideLink, args, tv=tv)
 * def MinLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_275DivideLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_275DivideLink = {"DivideLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_275DivideLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_275DivideLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DivideLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "DivideLink") < 0)) __PYX_ERR(1, 280, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("DivideLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 280, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.DivideLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_274DivideLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_274DivideLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DivideLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":281
 *     return add_link(types.TimesLink, args, tv=tv)
 * def DivideLink(*args, tv=None):
 *     return add_link(types.DivideLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def MinLink(*args, tv=None):
 *     return add_link(types.MinLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_DivideLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 281, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":280
 * def TimesLink(*args, tv=None):
 *     return add_link(types.TimesLink, args, tv=tv)
 * def DivideLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DivideLink, args, tv=tv)
 * def MinLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.DivideLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":282
 * def DivideLink(*args, tv=None):
 *     return add_link(types.DivideLink, args, tv=tv)
 * def MinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinLink, args, tv=tv)
 * def MaxLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_277MinLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_277MinLink = {"MinLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_277MinLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_277MinLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("MinLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "MinLink") < 0)) __PYX_ERR(1, 282, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("MinLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 282, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.MinLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_276MinLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_276MinLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("MinLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":283
 *     return add_link(types.DivideLink, args, tv=tv)
 * def MinLink(*args, tv=None):
 *     return add_link(types.MinLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def MaxLink(*args, tv=None):
 *     return add_link(types.MaxLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_MinLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 283, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":282
 * def DivideLink(*args, tv=None):
 *     return add_link(types.DivideLink, args, tv=tv)
 * def MinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinLink, args, tv=tv)
 * def MaxLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.MinLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":284
 * def MinLink(*args, tv=None):
 *     return add_link(types.MinLink, args, tv=tv)
 * def MaxLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MaxLink, args, tv=tv)
 * def FloorLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_279MaxLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_279MaxLink = {"MaxLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_279MaxLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_279MaxLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("MaxLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "MaxLink") < 0)) __PYX_ERR(1, 284, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("MaxLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 284, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.MaxLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_278MaxLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_278MaxLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("MaxLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":285
 *     return add_link(types.MinLink, args, tv=tv)
 * def MaxLink(*args, tv=None):
 *     return add_link(types.MaxLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def FloorLink(*args, tv=None):
 *     return add_link(types.FloorLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_MaxLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 285, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":284
 * def MinLink(*args, tv=None):
 *     return add_link(types.MinLink, args, tv=tv)
 * def MaxLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MaxLink, args, tv=tv)
 * def FloorLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.MaxLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":286
 * def MaxLink(*args, tv=None):
 *     return add_link(types.MaxLink, args, tv=tv)
 * def FloorLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FloorLink, args, tv=tv)
 * def HeavisideLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_281FloorLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_281FloorLink = {"FloorLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_281FloorLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_281FloorLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("FloorLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "FloorLink") < 0)) __PYX_ERR(1, 286, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("FloorLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 286, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.FloorLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_280FloorLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_280FloorLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FloorLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":287
 *     return add_link(types.MaxLink, args, tv=tv)
 * def FloorLink(*args, tv=None):
 *     return add_link(types.FloorLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def HeavisideLink(*args, tv=None):
 *     return add_link(types.HeavisideLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_FloorLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 287, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":286
 * def MaxLink(*args, tv=None):
 *     return add_link(types.MaxLink, args, tv=tv)
 * def FloorLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FloorLink, args, tv=tv)
 * def HeavisideLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.FloorLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":288
 * def FloorLink(*args, tv=None):
 *     return add_link(types.FloorLink, args, tv=tv)
 * def HeavisideLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.HeavisideLink, args, tv=tv)
 * def ImpulseLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_283HeavisideLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_283HeavisideLink = {"HeavisideLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_283HeavisideLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_283HeavisideLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("HeavisideLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "HeavisideLink") < 0)) __PYX_ERR(1, 288, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("HeavisideLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 288, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.HeavisideLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_282HeavisideLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_282HeavisideLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("HeavisideLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":289
 *     return add_link(types.FloorLink, args, tv=tv)
 * def HeavisideLink(*args, tv=None):
 *     return add_link(types.HeavisideLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ImpulseLink(*args, tv=None):
 *     return add_link(types.ImpulseLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_HeavisideLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 289, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":288
 * def FloorLink(*args, tv=None):
 *     return add_link(types.FloorLink, args, tv=tv)
 * def HeavisideLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.HeavisideLink, args, tv=tv)
 * def ImpulseLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.HeavisideLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":290
 * def HeavisideLink(*args, tv=None):
 *     return add_link(types.HeavisideLink, args, tv=tv)
 * def ImpulseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ImpulseLink, args, tv=tv)
 * def Log2Link(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_285ImpulseLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_285ImpulseLink = {"ImpulseLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_285ImpulseLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_285ImpulseLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ImpulseLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ImpulseLink") < 0)) __PYX_ERR(1, 290, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ImpulseLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 290, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ImpulseLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_284ImpulseLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_284ImpulseLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ImpulseLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":291
 *     return add_link(types.HeavisideLink, args, tv=tv)
 * def ImpulseLink(*args, tv=None):
 *     return add_link(types.ImpulseLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def Log2Link(*args, tv=None):
 *     return add_link(types.Log2Link, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ImpulseLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 291, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":290
 * def HeavisideLink(*args, tv=None):
 *     return add_link(types.HeavisideLink, args, tv=tv)
 * def ImpulseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ImpulseLink, args, tv=tv)
 * def Log2Link(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ImpulseLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":292
 * def ImpulseLink(*args, tv=None):
 *     return add_link(types.ImpulseLink, args, tv=tv)
 * def Log2Link(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Log2Link, args, tv=tv)
 * def PowLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_287Log2Link(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_287Log2Link = {"Log2Link", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_287Log2Link, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_287Log2Link(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Log2Link (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "Log2Link") < 0)) __PYX_ERR(1, 292, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Log2Link", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 292, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.Log2Link", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_286Log2Link(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_286Log2Link(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Log2Link", 0);

  /* "../../atoms/atom_types/core_types.pyx":293
 *     return add_link(types.ImpulseLink, args, tv=tv)
 * def Log2Link(*args, tv=None):
 *     return add_link(types.Log2Link, args, tv=tv)             # <<<<<<<<<<<<<<
 * def PowLink(*args, tv=None):
 *     return add_link(types.PowLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_Log2Link); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 293, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":292
 * def ImpulseLink(*args, tv=None):
 *     return add_link(types.ImpulseLink, args, tv=tv)
 * def Log2Link(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Log2Link, args, tv=tv)
 * def PowLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.Log2Link", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":294
 * def Log2Link(*args, tv=None):
 *     return add_link(types.Log2Link, args, tv=tv)
 * def PowLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PowLink, args, tv=tv)
 * def RandomNumberLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_289PowLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_289PowLink = {"PowLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_289PowLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_289PowLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PowLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "PowLink") < 0)) __PYX_ERR(1, 294, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PowLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 294, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.PowLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_288PowLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_288PowLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PowLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":295
 *     return add_link(types.Log2Link, args, tv=tv)
 * def PowLink(*args, tv=None):
 *     return add_link(types.PowLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def RandomNumberLink(*args, tv=None):
 *     return add_link(types.RandomNumberLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_PowLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 295, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":294
 * def Log2Link(*args, tv=None):
 *     return add_link(types.Log2Link, args, tv=tv)
 * def PowLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PowLink, args, tv=tv)
 * def RandomNumberLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.PowLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":296
 * def PowLink(*args, tv=None):
 *     return add_link(types.PowLink, args, tv=tv)
 * def RandomNumberLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RandomNumberLink, args, tv=tv)
 * def SineLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_291RandomNumberLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_291RandomNumberLink = {"RandomNumberLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_291RandomNumberLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_291RandomNumberLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("RandomNumberLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "RandomNumberLink") < 0)) __PYX_ERR(1, 296, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("RandomNumberLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 296, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.RandomNumberLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_290RandomNumberLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_290RandomNumberLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("RandomNumberLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":297
 *     return add_link(types.PowLink, args, tv=tv)
 * def RandomNumberLink(*args, tv=None):
 *     return add_link(types.RandomNumberLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SineLink(*args, tv=None):
 *     return add_link(types.SineLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_RandomNumberLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 297, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":296
 * def PowLink(*args, tv=None):
 *     return add_link(types.PowLink, args, tv=tv)
 * def RandomNumberLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RandomNumberLink, args, tv=tv)
 * def SineLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.RandomNumberLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":298
 * def RandomNumberLink(*args, tv=None):
 *     return add_link(types.RandomNumberLink, args, tv=tv)
 * def SineLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SineLink, args, tv=tv)
 * def AccumulateLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_293SineLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_293SineLink = {"SineLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_293SineLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_293SineLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SineLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SineLink") < 0)) __PYX_ERR(1, 298, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SineLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 298, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SineLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_292SineLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_292SineLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SineLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":299
 *     return add_link(types.RandomNumberLink, args, tv=tv)
 * def SineLink(*args, tv=None):
 *     return add_link(types.SineLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def AccumulateLink(*args, tv=None):
 *     return add_link(types.AccumulateLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SineLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 299, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":298
 * def RandomNumberLink(*args, tv=None):
 *     return add_link(types.RandomNumberLink, args, tv=tv)
 * def SineLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SineLink, args, tv=tv)
 * def AccumulateLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SineLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":300
 * def SineLink(*args, tv=None):
 *     return add_link(types.SineLink, args, tv=tv)
 * def AccumulateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AccumulateLink, args, tv=tv)
 * def DecimateLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_295AccumulateLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_295AccumulateLink = {"AccumulateLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_295AccumulateLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_295AccumulateLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AccumulateLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "AccumulateLink") < 0)) __PYX_ERR(1, 300, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AccumulateLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 300, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.AccumulateLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_294AccumulateLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_294AccumulateLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AccumulateLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":301
 *     return add_link(types.SineLink, args, tv=tv)
 * def AccumulateLink(*args, tv=None):
 *     return add_link(types.AccumulateLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def DecimateLink(*args, tv=None):
 *     return add_link(types.DecimateLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_AccumulateLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 301, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":300
 * def SineLink(*args, tv=None):
 *     return add_link(types.SineLink, args, tv=tv)
 * def AccumulateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AccumulateLink, args, tv=tv)
 * def DecimateLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.AccumulateLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":302
 * def AccumulateLink(*args, tv=None):
 *     return add_link(types.AccumulateLink, args, tv=tv)
 * def DecimateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DecimateLink, args, tv=tv)
 * def ElementOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_297DecimateLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_297DecimateLink = {"DecimateLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_297DecimateLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_297DecimateLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DecimateLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "DecimateLink") < 0)) __PYX_ERR(1, 302, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("DecimateLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 302, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.DecimateLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_296DecimateLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_296DecimateLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DecimateLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":303
 *     return add_link(types.AccumulateLink, args, tv=tv)
 * def DecimateLink(*args, tv=None):
 *     return add_link(types.DecimateLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ElementOfLink(*args, tv=None):
 *     return add_link(types.ElementOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_DecimateLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 303, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":302
 * def AccumulateLink(*args, tv=None):
 *     return add_link(types.AccumulateLink, args, tv=tv)
 * def DecimateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DecimateLink, args, tv=tv)
 * def ElementOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.DecimateLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":304
 * def DecimateLink(*args, tv=None):
 *     return add_link(types.DecimateLink, args, tv=tv)
 * def ElementOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ElementOfLink, args, tv=tv)
 * def NumberOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_299ElementOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_299ElementOfLink = {"ElementOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_299ElementOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_299ElementOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ElementOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ElementOfLink") < 0)) __PYX_ERR(1, 304, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ElementOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 304, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ElementOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_298ElementOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_298ElementOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ElementOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":305
 *     return add_link(types.DecimateLink, args, tv=tv)
 * def ElementOfLink(*args, tv=None):
 *     return add_link(types.ElementOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def NumberOfLink(*args, tv=None):
 *     return add_link(types.NumberOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ElementOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 305, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":304
 * def DecimateLink(*args, tv=None):
 *     return add_link(types.DecimateLink, args, tv=tv)
 * def ElementOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ElementOfLink, args, tv=tv)
 * def NumberOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ElementOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":306
 * def ElementOfLink(*args, tv=None):
 *     return add_link(types.ElementOfLink, args, tv=tv)
 * def NumberOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumberOfLink, args, tv=tv)
 * def TimeLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_301NumberOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_301NumberOfLink = {"NumberOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_301NumberOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_301NumberOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("NumberOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "NumberOfLink") < 0)) __PYX_ERR(1, 306, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("NumberOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 306, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.NumberOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_300NumberOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_300NumberOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("NumberOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":307
 *     return add_link(types.ElementOfLink, args, tv=tv)
 * def NumberOfLink(*args, tv=None):
 *     return add_link(types.NumberOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TimeLink(*args, tv=None):
 *     return add_link(types.TimeLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_NumberOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 307, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":306
 * def ElementOfLink(*args, tv=None):
 *     return add_link(types.ElementOfLink, args, tv=tv)
 * def NumberOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumberOfLink, args, tv=tv)
 * def TimeLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.NumberOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":308
 * def NumberOfLink(*args, tv=None):
 *     return add_link(types.NumberOfLink, args, tv=tv)
 * def TimeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TimeLink, args, tv=tv)
 * def ValueOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_303TimeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_303TimeLink = {"TimeLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_303TimeLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_303TimeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TimeLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TimeLink") < 0)) __PYX_ERR(1, 308, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TimeLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 308, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TimeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_302TimeLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_302TimeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TimeLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":309
 *     return add_link(types.NumberOfLink, args, tv=tv)
 * def TimeLink(*args, tv=None):
 *     return add_link(types.TimeLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ValueOfLink(*args, tv=None):
 *     return add_link(types.ValueOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TimeLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 309, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":308
 * def NumberOfLink(*args, tv=None):
 *     return add_link(types.NumberOfLink, args, tv=tv)
 * def TimeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TimeLink, args, tv=tv)
 * def ValueOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TimeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":310
 * def TimeLink(*args, tv=None):
 *     return add_link(types.TimeLink, args, tv=tv)
 * def ValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValueOfLink, args, tv=tv)
 * def BoolValueOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_305ValueOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_305ValueOfLink = {"ValueOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_305ValueOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_305ValueOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ValueOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ValueOfLink") < 0)) __PYX_ERR(1, 310, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ValueOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 310, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ValueOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_304ValueOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_304ValueOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ValueOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":311
 *     return add_link(types.TimeLink, args, tv=tv)
 * def ValueOfLink(*args, tv=None):
 *     return add_link(types.ValueOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def BoolValueOfLink(*args, tv=None):
 *     return add_link(types.BoolValueOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ValueOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 311, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":310
 * def TimeLink(*args, tv=None):
 *     return add_link(types.TimeLink, args, tv=tv)
 * def ValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValueOfLink, args, tv=tv)
 * def BoolValueOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ValueOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":312
 * def ValueOfLink(*args, tv=None):
 *     return add_link(types.ValueOfLink, args, tv=tv)
 * def BoolValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolValueOfLink, args, tv=tv)
 * def FloatValueOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_307BoolValueOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_307BoolValueOfLink = {"BoolValueOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_307BoolValueOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_307BoolValueOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BoolValueOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "BoolValueOfLink") < 0)) __PYX_ERR(1, 312, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("BoolValueOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 312, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.BoolValueOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_306BoolValueOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_306BoolValueOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BoolValueOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":313
 *     return add_link(types.ValueOfLink, args, tv=tv)
 * def BoolValueOfLink(*args, tv=None):
 *     return add_link(types.BoolValueOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def FloatValueOfLink(*args, tv=None):
 *     return add_link(types.FloatValueOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_BoolValueOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 313, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":312
 * def ValueOfLink(*args, tv=None):
 *     return add_link(types.ValueOfLink, args, tv=tv)
 * def BoolValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolValueOfLink, args, tv=tv)
 * def FloatValueOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.BoolValueOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":314
 * def BoolValueOfLink(*args, tv=None):
 *     return add_link(types.BoolValueOfLink, args, tv=tv)
 * def FloatValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FloatValueOfLink, args, tv=tv)
 * def StreamValueOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_309FloatValueOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_309FloatValueOfLink = {"FloatValueOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_309FloatValueOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_309FloatValueOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("FloatValueOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "FloatValueOfLink") < 0)) __PYX_ERR(1, 314, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("FloatValueOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 314, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.FloatValueOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_308FloatValueOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_308FloatValueOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FloatValueOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":315
 *     return add_link(types.BoolValueOfLink, args, tv=tv)
 * def FloatValueOfLink(*args, tv=None):
 *     return add_link(types.FloatValueOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def StreamValueOfLink(*args, tv=None):
 *     return add_link(types.StreamValueOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_FloatValueOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 315, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":314
 * def BoolValueOfLink(*args, tv=None):
 *     return add_link(types.BoolValueOfLink, args, tv=tv)
 * def FloatValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FloatValueOfLink, args, tv=tv)
 * def StreamValueOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.FloatValueOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":316
 * def FloatValueOfLink(*args, tv=None):
 *     return add_link(types.FloatValueOfLink, args, tv=tv)
 * def StreamValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StreamValueOfLink, args, tv=tv)
 * def TruthValueOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_311StreamValueOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_311StreamValueOfLink = {"StreamValueOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_311StreamValueOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_311StreamValueOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StreamValueOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "StreamValueOfLink") < 0)) __PYX_ERR(1, 316, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("StreamValueOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 316, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.StreamValueOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_310StreamValueOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_310StreamValueOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StreamValueOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":317
 *     return add_link(types.FloatValueOfLink, args, tv=tv)
 * def StreamValueOfLink(*args, tv=None):
 *     return add_link(types.StreamValueOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TruthValueOfLink(*args, tv=None):
 *     return add_link(types.TruthValueOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_StreamValueOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 317, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":316
 * def FloatValueOfLink(*args, tv=None):
 *     return add_link(types.FloatValueOfLink, args, tv=tv)
 * def StreamValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StreamValueOfLink, args, tv=tv)
 * def TruthValueOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.StreamValueOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":318
 * def StreamValueOfLink(*args, tv=None):
 *     return add_link(types.StreamValueOfLink, args, tv=tv)
 * def TruthValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TruthValueOfLink, args, tv=tv)
 * def StrengthOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_313TruthValueOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_313TruthValueOfLink = {"TruthValueOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_313TruthValueOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_313TruthValueOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TruthValueOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TruthValueOfLink") < 0)) __PYX_ERR(1, 318, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TruthValueOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 318, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TruthValueOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_312TruthValueOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_312TruthValueOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TruthValueOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":319
 *     return add_link(types.StreamValueOfLink, args, tv=tv)
 * def TruthValueOfLink(*args, tv=None):
 *     return add_link(types.TruthValueOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def StrengthOfLink(*args, tv=None):
 *     return add_link(types.StrengthOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TruthValueOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 319, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":318
 * def StreamValueOfLink(*args, tv=None):
 *     return add_link(types.StreamValueOfLink, args, tv=tv)
 * def TruthValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TruthValueOfLink, args, tv=tv)
 * def StrengthOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TruthValueOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":320
 * def TruthValueOfLink(*args, tv=None):
 *     return add_link(types.TruthValueOfLink, args, tv=tv)
 * def StrengthOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StrengthOfLink, args, tv=tv)
 * def ConfidenceOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_315StrengthOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_315StrengthOfLink = {"StrengthOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_315StrengthOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_315StrengthOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StrengthOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "StrengthOfLink") < 0)) __PYX_ERR(1, 320, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("StrengthOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 320, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.StrengthOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_314StrengthOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_314StrengthOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StrengthOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":321
 *     return add_link(types.TruthValueOfLink, args, tv=tv)
 * def StrengthOfLink(*args, tv=None):
 *     return add_link(types.StrengthOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ConfidenceOfLink(*args, tv=None):
 *     return add_link(types.ConfidenceOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_StrengthOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 321, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":320
 * def TruthValueOfLink(*args, tv=None):
 *     return add_link(types.TruthValueOfLink, args, tv=tv)
 * def StrengthOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StrengthOfLink, args, tv=tv)
 * def ConfidenceOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.StrengthOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":322
 * def StrengthOfLink(*args, tv=None):
 *     return add_link(types.StrengthOfLink, args, tv=tv)
 * def ConfidenceOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConfidenceOfLink, args, tv=tv)
 * def CountOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_317ConfidenceOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_317ConfidenceOfLink = {"ConfidenceOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_317ConfidenceOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_317ConfidenceOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ConfidenceOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ConfidenceOfLink") < 0)) __PYX_ERR(1, 322, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ConfidenceOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 322, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ConfidenceOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_316ConfidenceOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_316ConfidenceOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ConfidenceOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":323
 *     return add_link(types.StrengthOfLink, args, tv=tv)
 * def ConfidenceOfLink(*args, tv=None):
 *     return add_link(types.ConfidenceOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def CountOfLink(*args, tv=None):
 *     return add_link(types.CountOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ConfidenceOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 323, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":322
 * def StrengthOfLink(*args, tv=None):
 *     return add_link(types.StrengthOfLink, args, tv=tv)
 * def ConfidenceOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConfidenceOfLink, args, tv=tv)
 * def CountOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ConfidenceOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":324
 * def ConfidenceOfLink(*args, tv=None):
 *     return add_link(types.ConfidenceOfLink, args, tv=tv)
 * def CountOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CountOfLink, args, tv=tv)
 * def SizeOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_319CountOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_319CountOfLink = {"CountOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_319CountOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_319CountOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CountOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "CountOfLink") < 0)) __PYX_ERR(1, 324, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CountOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 324, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.CountOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_318CountOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_318CountOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("CountOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":325
 *     return add_link(types.ConfidenceOfLink, args, tv=tv)
 * def CountOfLink(*args, tv=None):
 *     return add_link(types.CountOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SizeOfLink(*args, tv=None):
 *     return add_link(types.SizeOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_CountOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 325, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":324
 * def ConfidenceOfLink(*args, tv=None):
 *     return add_link(types.ConfidenceOfLink, args, tv=tv)
 * def CountOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CountOfLink, args, tv=tv)
 * def SizeOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.CountOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":326
 * def CountOfLink(*args, tv=None):
 *     return add_link(types.CountOfLink, args, tv=tv)
 * def SizeOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SizeOfLink, args, tv=tv)
 * def TypeOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_321SizeOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_321SizeOfLink = {"SizeOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_321SizeOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_321SizeOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SizeOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SizeOfLink") < 0)) __PYX_ERR(1, 326, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SizeOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 326, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SizeOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_320SizeOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_320SizeOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SizeOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":327
 *     return add_link(types.CountOfLink, args, tv=tv)
 * def SizeOfLink(*args, tv=None):
 *     return add_link(types.SizeOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def TypeOfLink(*args, tv=None):
 *     return add_link(types.TypeOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SizeOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 327, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":326
 * def CountOfLink(*args, tv=None):
 *     return add_link(types.CountOfLink, args, tv=tv)
 * def SizeOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SizeOfLink, args, tv=tv)
 * def TypeOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SizeOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":328
 * def SizeOfLink(*args, tv=None):
 *     return add_link(types.SizeOfLink, args, tv=tv)
 * def TypeOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeOfLink, args, tv=tv)
 * def IncomingOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_323TypeOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_323TypeOfLink = {"TypeOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_323TypeOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_323TypeOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TypeOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "TypeOfLink") < 0)) __PYX_ERR(1, 328, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TypeOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 328, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.TypeOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_322TypeOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_322TypeOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TypeOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":329
 *     return add_link(types.SizeOfLink, args, tv=tv)
 * def TypeOfLink(*args, tv=None):
 *     return add_link(types.TypeOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def IncomingOfLink(*args, tv=None):
 *     return add_link(types.IncomingOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TypeOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 329, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":328
 * def SizeOfLink(*args, tv=None):
 *     return add_link(types.SizeOfLink, args, tv=tv)
 * def TypeOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeOfLink, args, tv=tv)
 * def IncomingOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.TypeOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":330
 * def TypeOfLink(*args, tv=None):
 *     return add_link(types.TypeOfLink, args, tv=tv)
 * def IncomingOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IncomingOfLink, args, tv=tv)
 * def CollectionOfLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_325IncomingOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_325IncomingOfLink = {"IncomingOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_325IncomingOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_325IncomingOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("IncomingOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "IncomingOfLink") < 0)) __PYX_ERR(1, 330, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("IncomingOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 330, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.IncomingOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_324IncomingOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_324IncomingOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("IncomingOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":331
 *     return add_link(types.TypeOfLink, args, tv=tv)
 * def IncomingOfLink(*args, tv=None):
 *     return add_link(types.IncomingOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def CollectionOfLink(*args, tv=None):
 *     return add_link(types.CollectionOfLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_IncomingOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 331, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":330
 * def TypeOfLink(*args, tv=None):
 *     return add_link(types.TypeOfLink, args, tv=tv)
 * def IncomingOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IncomingOfLink, args, tv=tv)
 * def CollectionOfLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.IncomingOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":332
 * def IncomingOfLink(*args, tv=None):
 *     return add_link(types.IncomingOfLink, args, tv=tv)
 * def CollectionOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CollectionOfLink, args, tv=tv)
 * def SetValueLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_327CollectionOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_327CollectionOfLink = {"CollectionOfLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_327CollectionOfLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_327CollectionOfLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CollectionOfLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "CollectionOfLink") < 0)) __PYX_ERR(1, 332, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CollectionOfLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 332, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.CollectionOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_326CollectionOfLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_326CollectionOfLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("CollectionOfLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":333
 *     return add_link(types.IncomingOfLink, args, tv=tv)
 * def CollectionOfLink(*args, tv=None):
 *     return add_link(types.CollectionOfLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SetValueLink(*args, tv=None):
 *     return add_link(types.SetValueLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_CollectionOfLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 333, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":332
 * def IncomingOfLink(*args, tv=None):
 *     return add_link(types.IncomingOfLink, args, tv=tv)
 * def CollectionOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CollectionOfLink, args, tv=tv)
 * def SetValueLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.CollectionOfLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":334
 * def CollectionOfLink(*args, tv=None):
 *     return add_link(types.CollectionOfLink, args, tv=tv)
 * def SetValueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetValueLink, args, tv=tv)
 * def SetTVLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_329SetValueLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_329SetValueLink = {"SetValueLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_329SetValueLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_329SetValueLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetValueLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SetValueLink") < 0)) __PYX_ERR(1, 334, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SetValueLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 334, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SetValueLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_328SetValueLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_328SetValueLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SetValueLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":335
 *     return add_link(types.CollectionOfLink, args, tv=tv)
 * def SetValueLink(*args, tv=None):
 *     return add_link(types.SetValueLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SetTVLink(*args, tv=None):
 *     return add_link(types.SetTVLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SetValueLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 335, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":334
 * def CollectionOfLink(*args, tv=None):
 *     return add_link(types.CollectionOfLink, args, tv=tv)
 * def SetValueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetValueLink, args, tv=tv)
 * def SetTVLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SetValueLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":336
 * def SetValueLink(*args, tv=None):
 *     return add_link(types.SetValueLink, args, tv=tv)
 * def SetTVLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetTVLink, args, tv=tv)
 * def ValueShimLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_331SetTVLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_331SetTVLink = {"SetTVLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_331SetTVLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_331SetTVLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetTVLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SetTVLink") < 0)) __PYX_ERR(1, 336, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SetTVLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 336, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SetTVLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_330SetTVLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_330SetTVLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SetTVLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":337
 *     return add_link(types.SetValueLink, args, tv=tv)
 * def SetTVLink(*args, tv=None):
 *     return add_link(types.SetTVLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ValueShimLink(*args, tv=None):
 *     return add_link(types.ValueShimLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SetTVLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 337, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":336
 * def SetValueLink(*args, tv=None):
 *     return add_link(types.SetValueLink, args, tv=tv)
 * def SetTVLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetTVLink, args, tv=tv)
 * def ValueShimLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SetTVLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":338
 * def SetTVLink(*args, tv=None):
 *     return add_link(types.SetTVLink, args, tv=tv)
 * def ValueShimLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValueShimLink, args, tv=tv)
 * def PromiseLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_333ValueShimLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_333ValueShimLink = {"ValueShimLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_333ValueShimLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_333ValueShimLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ValueShimLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ValueShimLink") < 0)) __PYX_ERR(1, 338, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ValueShimLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 338, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ValueShimLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_332ValueShimLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_332ValueShimLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ValueShimLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":339
 *     return add_link(types.SetTVLink, args, tv=tv)
 * def ValueShimLink(*args, tv=None):
 *     return add_link(types.ValueShimLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def PromiseLink(*args, tv=None):
 *     return add_link(types.PromiseLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ValueShimLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 339, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":338
 * def SetTVLink(*args, tv=None):
 *     return add_link(types.SetTVLink, args, tv=tv)
 * def ValueShimLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValueShimLink, args, tv=tv)
 * def PromiseLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ValueShimLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":340
 * def ValueShimLink(*args, tv=None):
 *     return add_link(types.ValueShimLink, args, tv=tv)
 * def PromiseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PromiseLink, args, tv=tv)
 * def PromisePredicateLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_335PromiseLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_335PromiseLink = {"PromiseLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_335PromiseLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_335PromiseLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PromiseLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "PromiseLink") < 0)) __PYX_ERR(1, 340, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PromiseLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 340, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.PromiseLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_334PromiseLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_334PromiseLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PromiseLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":341
 *     return add_link(types.ValueShimLink, args, tv=tv)
 * def PromiseLink(*args, tv=None):
 *     return add_link(types.PromiseLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def PromisePredicateLink(*args, tv=None):
 *     return add_link(types.PromisePredicateLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_PromiseLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 341, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":340
 * def ValueShimLink(*args, tv=None):
 *     return add_link(types.ValueShimLink, args, tv=tv)
 * def PromiseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PromiseLink, args, tv=tv)
 * def PromisePredicateLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.PromiseLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":342
 * def PromiseLink(*args, tv=None):
 *     return add_link(types.PromiseLink, args, tv=tv)
 * def PromisePredicateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PromisePredicateLink, args, tv=tv)
 * def FormulaPredicateLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_337PromisePredicateLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_337PromisePredicateLink = {"PromisePredicateLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_337PromisePredicateLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_337PromisePredicateLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PromisePredicateLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "PromisePredicateLink") < 0)) __PYX_ERR(1, 342, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PromisePredicateLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 342, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.PromisePredicateLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_336PromisePredicateLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_336PromisePredicateLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PromisePredicateLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":343
 *     return add_link(types.PromiseLink, args, tv=tv)
 * def PromisePredicateLink(*args, tv=None):
 *     return add_link(types.PromisePredicateLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def FormulaPredicateLink(*args, tv=None):
 *     return add_link(types.FormulaPredicateLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_PromisePredicateLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 343, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":342
 * def PromiseLink(*args, tv=None):
 *     return add_link(types.PromiseLink, args, tv=tv)
 * def PromisePredicateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PromisePredicateLink, args, tv=tv)
 * def FormulaPredicateLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.PromisePredicateLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":344
 * def PromisePredicateLink(*args, tv=None):
 *     return add_link(types.PromisePredicateLink, args, tv=tv)
 * def FormulaPredicateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FormulaPredicateLink, args, tv=tv)
 * def FilterLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_339FormulaPredicateLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_339FormulaPredicateLink = {"FormulaPredicateLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_339FormulaPredicateLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_339FormulaPredicateLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("FormulaPredicateLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "FormulaPredicateLink") < 0)) __PYX_ERR(1, 344, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("FormulaPredicateLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 344, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.FormulaPredicateLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_338FormulaPredicateLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_338FormulaPredicateLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FormulaPredicateLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":345
 *     return add_link(types.PromisePredicateLink, args, tv=tv)
 * def FormulaPredicateLink(*args, tv=None):
 *     return add_link(types.FormulaPredicateLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def FilterLink(*args, tv=None):
 *     return add_link(types.FilterLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_FormulaPredicateLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 345, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":344
 * def PromisePredicateLink(*args, tv=None):
 *     return add_link(types.PromisePredicateLink, args, tv=tv)
 * def FormulaPredicateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FormulaPredicateLink, args, tv=tv)
 * def FilterLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.FormulaPredicateLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":346
 * def FormulaPredicateLink(*args, tv=None):
 *     return add_link(types.FormulaPredicateLink, args, tv=tv)
 * def FilterLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FilterLink, args, tv=tv)
 * def ExecutionOutputLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_341FilterLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_341FilterLink = {"FilterLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_341FilterLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_341FilterLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("FilterLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "FilterLink") < 0)) __PYX_ERR(1, 346, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("FilterLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 346, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.FilterLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_340FilterLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_340FilterLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FilterLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":347
 *     return add_link(types.FormulaPredicateLink, args, tv=tv)
 * def FilterLink(*args, tv=None):
 *     return add_link(types.FilterLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ExecutionOutputLink(*args, tv=None):
 *     return add_link(types.ExecutionOutputLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_FilterLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 347, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":346
 * def FormulaPredicateLink(*args, tv=None):
 *     return add_link(types.FormulaPredicateLink, args, tv=tv)
 * def FilterLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FilterLink, args, tv=tv)
 * def ExecutionOutputLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.FilterLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":348
 * def FilterLink(*args, tv=None):
 *     return add_link(types.FilterLink, args, tv=tv)
 * def ExecutionOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutionOutputLink, args, tv=tv)
 * def RandomChoiceLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_343ExecutionOutputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_343ExecutionOutputLink = {"ExecutionOutputLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_343ExecutionOutputLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_343ExecutionOutputLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ExecutionOutputLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ExecutionOutputLink") < 0)) __PYX_ERR(1, 348, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ExecutionOutputLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 348, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ExecutionOutputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_342ExecutionOutputLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_342ExecutionOutputLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ExecutionOutputLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":349
 *     return add_link(types.FilterLink, args, tv=tv)
 * def ExecutionOutputLink(*args, tv=None):
 *     return add_link(types.ExecutionOutputLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def RandomChoiceLink(*args, tv=None):
 *     return add_link(types.RandomChoiceLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ExecutionOutputLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 349, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":348
 * def FilterLink(*args, tv=None):
 *     return add_link(types.FilterLink, args, tv=tv)
 * def ExecutionOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutionOutputLink, args, tv=tv)
 * def RandomChoiceLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ExecutionOutputLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":350
 * def ExecutionOutputLink(*args, tv=None):
 *     return add_link(types.ExecutionOutputLink, args, tv=tv)
 * def RandomChoiceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RandomChoiceLink, args, tv=tv)
 * def CondLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_345RandomChoiceLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_345RandomChoiceLink = {"RandomChoiceLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_345RandomChoiceLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_345RandomChoiceLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("RandomChoiceLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "RandomChoiceLink") < 0)) __PYX_ERR(1, 350, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("RandomChoiceLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 350, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.RandomChoiceLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_344RandomChoiceLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_344RandomChoiceLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("RandomChoiceLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":351
 *     return add_link(types.ExecutionOutputLink, args, tv=tv)
 * def RandomChoiceLink(*args, tv=None):
 *     return add_link(types.RandomChoiceLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def CondLink(*args, tv=None):
 *     return add_link(types.CondLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_RandomChoiceLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 351, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":350
 * def ExecutionOutputLink(*args, tv=None):
 *     return add_link(types.ExecutionOutputLink, args, tv=tv)
 * def RandomChoiceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RandomChoiceLink, args, tv=tv)
 * def CondLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.RandomChoiceLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":352
 * def RandomChoiceLink(*args, tv=None):
 *     return add_link(types.RandomChoiceLink, args, tv=tv)
 * def CondLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CondLink, args, tv=tv)
 * def SleepLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_347CondLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_347CondLink = {"CondLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_347CondLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_347CondLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CondLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "CondLink") < 0)) __PYX_ERR(1, 352, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CondLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 352, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.CondLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_346CondLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_346CondLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("CondLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":353
 *     return add_link(types.RandomChoiceLink, args, tv=tv)
 * def CondLink(*args, tv=None):
 *     return add_link(types.CondLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def SleepLink(*args, tv=None):
 *     return add_link(types.SleepLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_CondLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 353, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":352
 * def RandomChoiceLink(*args, tv=None):
 *     return add_link(types.RandomChoiceLink, args, tv=tv)
 * def CondLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CondLink, args, tv=tv)
 * def SleepLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.CondLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":354
 * def CondLink(*args, tv=None):
 *     return add_link(types.CondLink, args, tv=tv)
 * def SleepLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SleepLink, args, tv=tv)
 * def ParallelLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_349SleepLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_349SleepLink = {"SleepLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_349SleepLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_349SleepLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SleepLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "SleepLink") < 0)) __PYX_ERR(1, 354, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SleepLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 354, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.SleepLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_348SleepLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_348SleepLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SleepLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":355
 *     return add_link(types.CondLink, args, tv=tv)
 * def SleepLink(*args, tv=None):
 *     return add_link(types.SleepLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ParallelLink(*args, tv=None):
 *     return add_link(types.ParallelLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SleepLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 355, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":354
 * def CondLink(*args, tv=None):
 *     return add_link(types.CondLink, args, tv=tv)
 * def SleepLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SleepLink, args, tv=tv)
 * def ParallelLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.SleepLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":356
 * def SleepLink(*args, tv=None):
 *     return add_link(types.SleepLink, args, tv=tv)
 * def ParallelLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ParallelLink, args, tv=tv)
 * def ThreadJoinLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_351ParallelLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_351ParallelLink = {"ParallelLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_351ParallelLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_351ParallelLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ParallelLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ParallelLink") < 0)) __PYX_ERR(1, 356, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ParallelLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 356, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ParallelLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_350ParallelLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_350ParallelLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ParallelLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":357
 *     return add_link(types.SleepLink, args, tv=tv)
 * def ParallelLink(*args, tv=None):
 *     return add_link(types.ParallelLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ThreadJoinLink(*args, tv=None):
 *     return add_link(types.ThreadJoinLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ParallelLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 357, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":356
 * def SleepLink(*args, tv=None):
 *     return add_link(types.SleepLink, args, tv=tv)
 * def ParallelLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ParallelLink, args, tv=tv)
 * def ThreadJoinLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ParallelLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":358
 * def ParallelLink(*args, tv=None):
 *     return add_link(types.ParallelLink, args, tv=tv)
 * def ThreadJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ThreadJoinLink, args, tv=tv)
 * def ExecuteThreadedLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_353ThreadJoinLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_353ThreadJoinLink = {"ThreadJoinLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_353ThreadJoinLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_353ThreadJoinLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ThreadJoinLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ThreadJoinLink") < 0)) __PYX_ERR(1, 358, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ThreadJoinLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 358, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ThreadJoinLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_352ThreadJoinLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_352ThreadJoinLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ThreadJoinLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":359
 *     return add_link(types.ParallelLink, args, tv=tv)
 * def ThreadJoinLink(*args, tv=None):
 *     return add_link(types.ThreadJoinLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ExecuteThreadedLink(*args, tv=None):
 *     return add_link(types.ExecuteThreadedLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ThreadJoinLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 359, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":358
 * def ParallelLink(*args, tv=None):
 *     return add_link(types.ParallelLink, args, tv=tv)
 * def ThreadJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ThreadJoinLink, args, tv=tv)
 * def ExecuteThreadedLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ThreadJoinLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":360
 * def ThreadJoinLink(*args, tv=None):
 *     return add_link(types.ThreadJoinLink, args, tv=tv)
 * def ExecuteThreadedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecuteThreadedLink, args, tv=tv)
 * def PureExecLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_355ExecuteThreadedLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_355ExecuteThreadedLink = {"ExecuteThreadedLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_355ExecuteThreadedLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_355ExecuteThreadedLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ExecuteThreadedLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ExecuteThreadedLink") < 0)) __PYX_ERR(1, 360, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ExecuteThreadedLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 360, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ExecuteThreadedLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_354ExecuteThreadedLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_354ExecuteThreadedLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ExecuteThreadedLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":361
 *     return add_link(types.ThreadJoinLink, args, tv=tv)
 * def ExecuteThreadedLink(*args, tv=None):
 *     return add_link(types.ExecuteThreadedLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def PureExecLink(*args, tv=None):
 *     return add_link(types.PureExecLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ExecuteThreadedLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 361, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":360
 * def ThreadJoinLink(*args, tv=None):
 *     return add_link(types.ThreadJoinLink, args, tv=tv)
 * def ExecuteThreadedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecuteThreadedLink, args, tv=tv)
 * def PureExecLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ExecuteThreadedLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":362
 * def ExecuteThreadedLink(*args, tv=None):
 *     return add_link(types.ExecuteThreadedLink, args, tv=tv)
 * def PureExecLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PureExecLink, args, tv=tv)
 * def ProcedureNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_357PureExecLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_357PureExecLink = {"PureExecLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_357PureExecLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_357PureExecLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PureExecLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "PureExecLink") < 0)) __PYX_ERR(1, 362, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PureExecLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 362, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.PureExecLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_356PureExecLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_356PureExecLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PureExecLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":363
 *     return add_link(types.ExecuteThreadedLink, args, tv=tv)
 * def PureExecLink(*args, tv=None):
 *     return add_link(types.PureExecLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ProcedureNode(node_name, tv=None):
 *     return add_node(types.ProcedureNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_PureExecLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 363, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":362
 * def ExecuteThreadedLink(*args, tv=None):
 *     return add_link(types.ExecuteThreadedLink, args, tv=tv)
 * def PureExecLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PureExecLink, args, tv=tv)
 * def ProcedureNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.PureExecLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":364
 * def PureExecLink(*args, tv=None):
 *     return add_link(types.PureExecLink, args, tv=tv)
 * def ProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ProcedureNode, node_name, tv)
 * def DefinedProcedureNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_359ProcedureNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_359ProcedureNode = {"ProcedureNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_359ProcedureNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_359ProcedureNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ProcedureNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ProcedureNode") < 0)) __PYX_ERR(1, 364, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ProcedureNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 364, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.ProcedureNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_358ProcedureNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_358ProcedureNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ProcedureNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":365
 *     return add_link(types.PureExecLink, args, tv=tv)
 * def ProcedureNode(node_name, tv=None):
 *     return add_node(types.ProcedureNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def DefinedProcedureNode(node_name, tv=None):
 *     return add_node(types.DefinedProcedureNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 365, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 365, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ProcedureNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 365, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 365, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 365, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 365, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 365, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":364
 * def PureExecLink(*args, tv=None):
 *     return add_link(types.PureExecLink, args, tv=tv)
 * def ProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ProcedureNode, node_name, tv)
 * def DefinedProcedureNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.ProcedureNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":366
 * def ProcedureNode(node_name, tv=None):
 *     return add_node(types.ProcedureNode, node_name, tv)
 * def DefinedProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedProcedureNode, node_name, tv)
 * def GroundedProcedureNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_361DefinedProcedureNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_361DefinedProcedureNode = {"DefinedProcedureNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_361DefinedProcedureNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_361DefinedProcedureNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DefinedProcedureNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "DefinedProcedureNode") < 0)) __PYX_ERR(1, 366, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("DefinedProcedureNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 366, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.DefinedProcedureNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_360DefinedProcedureNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_360DefinedProcedureNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DefinedProcedureNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":367
 *     return add_node(types.ProcedureNode, node_name, tv)
 * def DefinedProcedureNode(node_name, tv=None):
 *     return add_node(types.DefinedProcedureNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def GroundedProcedureNode(node_name, tv=None):
 *     return add_node(types.GroundedProcedureNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_DefinedProcedureNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 367, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 367, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 367, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 367, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":366
 * def ProcedureNode(node_name, tv=None):
 *     return add_node(types.ProcedureNode, node_name, tv)
 * def DefinedProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedProcedureNode, node_name, tv)
 * def GroundedProcedureNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.DefinedProcedureNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":368
 * def DefinedProcedureNode(node_name, tv=None):
 *     return add_node(types.DefinedProcedureNode, node_name, tv)
 * def GroundedProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedProcedureNode, node_name, tv)
 * def GroundedPredicateNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_363GroundedProcedureNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_363GroundedProcedureNode = {"GroundedProcedureNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_363GroundedProcedureNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_363GroundedProcedureNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GroundedProcedureNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "GroundedProcedureNode") < 0)) __PYX_ERR(1, 368, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("GroundedProcedureNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 368, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.GroundedProcedureNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_362GroundedProcedureNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_362GroundedProcedureNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("GroundedProcedureNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":369
 *     return add_node(types.DefinedProcedureNode, node_name, tv)
 * def GroundedProcedureNode(node_name, tv=None):
 *     return add_node(types.GroundedProcedureNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def GroundedPredicateNode(node_name, tv=None):
 *     return add_node(types.GroundedPredicateNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GroundedProcedureNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 369, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 369, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 369, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 369, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":368
 * def DefinedProcedureNode(node_name, tv=None):
 *     return add_node(types.DefinedProcedureNode, node_name, tv)
 * def GroundedProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedProcedureNode, node_name, tv)
 * def GroundedPredicateNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.GroundedProcedureNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":370
 * def GroundedProcedureNode(node_name, tv=None):
 *     return add_node(types.GroundedProcedureNode, node_name, tv)
 * def GroundedPredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedPredicateNode, node_name, tv)
 * def DefinedPredicateNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_365GroundedPredicateNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_365GroundedPredicateNode = {"GroundedPredicateNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_365GroundedPredicateNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_365GroundedPredicateNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GroundedPredicateNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "GroundedPredicateNode") < 0)) __PYX_ERR(1, 370, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("GroundedPredicateNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 370, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.GroundedPredicateNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_364GroundedPredicateNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_364GroundedPredicateNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("GroundedPredicateNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":371
 *     return add_node(types.GroundedProcedureNode, node_name, tv)
 * def GroundedPredicateNode(node_name, tv=None):
 *     return add_node(types.GroundedPredicateNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def DefinedPredicateNode(node_name, tv=None):
 *     return add_node(types.DefinedPredicateNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 371, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 371, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GroundedPredicateNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 371, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 371, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 371, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 371, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 371, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":370
 * def GroundedProcedureNode(node_name, tv=None):
 *     return add_node(types.GroundedProcedureNode, node_name, tv)
 * def GroundedPredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedPredicateNode, node_name, tv)
 * def DefinedPredicateNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.GroundedPredicateNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":372
 * def GroundedPredicateNode(node_name, tv=None):
 *     return add_node(types.GroundedPredicateNode, node_name, tv)
 * def DefinedPredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedPredicateNode, node_name, tv)
 * def SchemaNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_367DefinedPredicateNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_367DefinedPredicateNode = {"DefinedPredicateNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_367DefinedPredicateNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_367DefinedPredicateNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DefinedPredicateNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "DefinedPredicateNode") < 0)) __PYX_ERR(1, 372, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("DefinedPredicateNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 372, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.DefinedPredicateNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_366DefinedPredicateNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_366DefinedPredicateNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DefinedPredicateNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":373
 *     return add_node(types.GroundedPredicateNode, node_name, tv)
 * def DefinedPredicateNode(node_name, tv=None):
 *     return add_node(types.DefinedPredicateNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def SchemaNode(node_name, tv=None):
 *     return add_node(types.SchemaNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 373, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 373, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_DefinedPredicateNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 373, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 373, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 373, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 373, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 373, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":372
 * def GroundedPredicateNode(node_name, tv=None):
 *     return add_node(types.GroundedPredicateNode, node_name, tv)
 * def DefinedPredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedPredicateNode, node_name, tv)
 * def SchemaNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.DefinedPredicateNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":374
 * def DefinedPredicateNode(node_name, tv=None):
 *     return add_node(types.DefinedPredicateNode, node_name, tv)
 * def SchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SchemaNode, node_name, tv)
 * def DefinedSchemaNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_369SchemaNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_369SchemaNode = {"SchemaNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_369SchemaNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_369SchemaNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SchemaNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "SchemaNode") < 0)) __PYX_ERR(1, 374, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SchemaNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 374, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.SchemaNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_368SchemaNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_368SchemaNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SchemaNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":375
 *     return add_node(types.DefinedPredicateNode, node_name, tv)
 * def SchemaNode(node_name, tv=None):
 *     return add_node(types.SchemaNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def DefinedSchemaNode(node_name, tv=None):
 *     return add_node(types.DefinedSchemaNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 375, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 375, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_SchemaNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 375, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 375, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 375, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 375, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 375, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":374
 * def DefinedPredicateNode(node_name, tv=None):
 *     return add_node(types.DefinedPredicateNode, node_name, tv)
 * def SchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SchemaNode, node_name, tv)
 * def DefinedSchemaNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.SchemaNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":376
 * def SchemaNode(node_name, tv=None):
 *     return add_node(types.SchemaNode, node_name, tv)
 * def DefinedSchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedSchemaNode, node_name, tv)
 * def GroundedSchemaNode(node_name, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_371DefinedSchemaNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_371DefinedSchemaNode = {"DefinedSchemaNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_371DefinedSchemaNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_371DefinedSchemaNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DefinedSchemaNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "DefinedSchemaNode") < 0)) __PYX_ERR(1, 376, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("DefinedSchemaNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 376, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.DefinedSchemaNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_370DefinedSchemaNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_370DefinedSchemaNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DefinedSchemaNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":377
 *     return add_node(types.SchemaNode, node_name, tv)
 * def DefinedSchemaNode(node_name, tv=None):
 *     return add_node(types.DefinedSchemaNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def GroundedSchemaNode(node_name, tv=None):
 *     return add_node(types.GroundedSchemaNode, node_name, tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_DefinedSchemaNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 377, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 377, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 377, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 377, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":376
 * def SchemaNode(node_name, tv=None):
 *     return add_node(types.SchemaNode, node_name, tv)
 * def DefinedSchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedSchemaNode, node_name, tv)
 * def GroundedSchemaNode(node_name, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.DefinedSchemaNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":378
 * def DefinedSchemaNode(node_name, tv=None):
 *     return add_node(types.DefinedSchemaNode, node_name, tv)
 * def GroundedSchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedSchemaNode, node_name, tv)
 * def ForeignAst(*args):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_373GroundedSchemaNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_373GroundedSchemaNode = {"GroundedSchemaNode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_373GroundedSchemaNode, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_373GroundedSchemaNode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node_name = 0;
  PyObject *__pyx_v_tv = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GroundedSchemaNode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node_name,&__pyx_n_s_tv,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_node_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tv);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "GroundedSchemaNode") < 0)) __PYX_ERR(1, 378, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_node_name = values[0];
    __pyx_v_tv = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("GroundedSchemaNode", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 378, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.GroundedSchemaNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_372GroundedSchemaNode(__pyx_self, __pyx_v_node_name, __pyx_v_tv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_372GroundedSchemaNode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_node_name, PyObject *__pyx_v_tv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("GroundedSchemaNode", 0);

  /* "../../atoms/atom_types/core_types.pyx":379
 *     return add_node(types.DefinedSchemaNode, node_name, tv)
 * def GroundedSchemaNode(node_name, tv=None):
 *     return add_node(types.GroundedSchemaNode, node_name, tv)             # <<<<<<<<<<<<<<
 * def ForeignAst(*args):
 *     return add_link(types.ForeignAst, args)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GroundedSchemaNode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 379, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_4, __pyx_v_node_name, __pyx_v_tv};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 379, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_node_name);
    __Pyx_GIVEREF(__pyx_v_node_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_node_name);
    __Pyx_INCREF(__pyx_v_tv);
    __Pyx_GIVEREF(__pyx_v_tv);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_tv);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":378
 * def DefinedSchemaNode(node_name, tv=None):
 *     return add_node(types.DefinedSchemaNode, node_name, tv)
 * def GroundedSchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedSchemaNode, node_name, tv)
 * def ForeignAst(*args):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.GroundedSchemaNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":380
 * def GroundedSchemaNode(node_name, tv=None):
 *     return add_node(types.GroundedSchemaNode, node_name, tv)
 * def ForeignAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.ForeignAst, args)
 * def SexprAst(*args):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_375ForeignAst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_375ForeignAst = {"ForeignAst", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_375ForeignAst, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_375ForeignAst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ForeignAst (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "ForeignAst", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_374ForeignAst(__pyx_self, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_374ForeignAst(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ForeignAst", 0);

  /* "../../atoms/atom_types/core_types.pyx":381
 *     return add_node(types.GroundedSchemaNode, node_name, tv)
 * def ForeignAst(*args):
 *     return add_link(types.ForeignAst, args)             # <<<<<<<<<<<<<<
 * def SexprAst(*args):
 *     return add_link(types.SexprAst, args)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_link); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ForeignAst); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 381, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 381, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_args);
    __Pyx_GIVEREF(__pyx_v_args);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_args);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":380
 * def GroundedSchemaNode(node_name, tv=None):
 *     return add_node(types.GroundedSchemaNode, node_name, tv)
 * def ForeignAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.ForeignAst, args)
 * def SexprAst(*args):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.ForeignAst", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":382
 * def ForeignAst(*args):
 *     return add_link(types.ForeignAst, args)
 * def SexprAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.SexprAst, args)
 * def DatalogAst(*args):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_377SexprAst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_377SexprAst = {"SexprAst", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_377SexprAst, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_377SexprAst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SexprAst (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "SexprAst", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_376SexprAst(__pyx_self, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_376SexprAst(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SexprAst", 0);

  /* "../../atoms/atom_types/core_types.pyx":383
 *     return add_link(types.ForeignAst, args)
 * def SexprAst(*args):
 *     return add_link(types.SexprAst, args)             # <<<<<<<<<<<<<<
 * def DatalogAst(*args):
 *     return add_link(types.DatalogAst, args)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_link); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_SexprAst); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 383, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 383, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 383, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_args);
    __Pyx_GIVEREF(__pyx_v_args);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_args);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 383, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":382
 * def ForeignAst(*args):
 *     return add_link(types.ForeignAst, args)
 * def SexprAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.SexprAst, args)
 * def DatalogAst(*args):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.SexprAst", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":384
 * def SexprAst(*args):
 *     return add_link(types.SexprAst, args)
 * def DatalogAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.DatalogAst, args)
 * def JsonAst(*args):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_379DatalogAst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_379DatalogAst = {"DatalogAst", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_379DatalogAst, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_379DatalogAst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DatalogAst (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "DatalogAst", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_378DatalogAst(__pyx_self, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_378DatalogAst(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DatalogAst", 0);

  /* "../../atoms/atom_types/core_types.pyx":385
 *     return add_link(types.SexprAst, args)
 * def DatalogAst(*args):
 *     return add_link(types.DatalogAst, args)             # <<<<<<<<<<<<<<
 * def JsonAst(*args):
 *     return add_link(types.JsonAst, args)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_link); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_DatalogAst); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 385, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 385, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 385, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_args);
    __Pyx_GIVEREF(__pyx_v_args);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_args);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 385, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":384
 * def SexprAst(*args):
 *     return add_link(types.SexprAst, args)
 * def DatalogAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.DatalogAst, args)
 * def JsonAst(*args):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.DatalogAst", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":386
 * def DatalogAst(*args):
 *     return add_link(types.DatalogAst, args)
 * def JsonAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.JsonAst, args)
 * def PythonAst(*args):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_381JsonAst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_381JsonAst = {"JsonAst", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_381JsonAst, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_381JsonAst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("JsonAst (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "JsonAst", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_380JsonAst(__pyx_self, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_380JsonAst(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("JsonAst", 0);

  /* "../../atoms/atom_types/core_types.pyx":387
 *     return add_link(types.DatalogAst, args)
 * def JsonAst(*args):
 *     return add_link(types.JsonAst, args)             # <<<<<<<<<<<<<<
 * def PythonAst(*args):
 *     return add_link(types.PythonAst, args)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_link); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_JsonAst); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 387, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 387, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_args);
    __Pyx_GIVEREF(__pyx_v_args);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_args);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":386
 * def DatalogAst(*args):
 *     return add_link(types.DatalogAst, args)
 * def JsonAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.JsonAst, args)
 * def PythonAst(*args):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.JsonAst", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":388
 * def JsonAst(*args):
 *     return add_link(types.JsonAst, args)
 * def PythonAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.PythonAst, args)
 * def DirectlyEvaluatableLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_383PythonAst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_383PythonAst = {"PythonAst", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_383PythonAst, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_383PythonAst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PythonAst (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PythonAst", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_382PythonAst(__pyx_self, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_382PythonAst(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PythonAst", 0);

  /* "../../atoms/atom_types/core_types.pyx":389
 *     return add_link(types.JsonAst, args)
 * def PythonAst(*args):
 *     return add_link(types.PythonAst, args)             # <<<<<<<<<<<<<<
 * def DirectlyEvaluatableLink(*args, tv=None):
 *     return add_link(types.DirectlyEvaluatableLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_add_link); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_types); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_PythonAst); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 389, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_v_args};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 389, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 389, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_args);
    __Pyx_GIVEREF(__pyx_v_args);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_args);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 389, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":388
 * def JsonAst(*args):
 *     return add_link(types.JsonAst, args)
 * def PythonAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.PythonAst, args)
 * def DirectlyEvaluatableLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("opencog.type_constructors.PythonAst", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":390
 * def PythonAst(*args):
 *     return add_link(types.PythonAst, args)
 * def DirectlyEvaluatableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DirectlyEvaluatableLink, args, tv=tv)
 * def ImplicationLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_385DirectlyEvaluatableLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_385DirectlyEvaluatableLink = {"DirectlyEvaluatableLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_385DirectlyEvaluatableLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_385DirectlyEvaluatableLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DirectlyEvaluatableLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "DirectlyEvaluatableLink") < 0)) __PYX_ERR(1, 390, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("DirectlyEvaluatableLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 390, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.DirectlyEvaluatableLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_384DirectlyEvaluatableLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_384DirectlyEvaluatableLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DirectlyEvaluatableLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":391
 *     return add_link(types.PythonAst, args)
 * def DirectlyEvaluatableLink(*args, tv=None):
 *     return add_link(types.DirectlyEvaluatableLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ImplicationLink(*args, tv=None):
 *     return add_link(types.ImplicationLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_DirectlyEvaluatableLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 391, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":390
 * def PythonAst(*args):
 *     return add_link(types.PythonAst, args)
 * def DirectlyEvaluatableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DirectlyEvaluatableLink, args, tv=tv)
 * def ImplicationLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.DirectlyEvaluatableLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":392
 * def DirectlyEvaluatableLink(*args, tv=None):
 *     return add_link(types.DirectlyEvaluatableLink, args, tv=tv)
 * def ImplicationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ImplicationLink, args, tv=tv)
 * def InheritanceLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_387ImplicationLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_387ImplicationLink = {"ImplicationLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_387ImplicationLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_387ImplicationLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ImplicationLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ImplicationLink") < 0)) __PYX_ERR(1, 392, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ImplicationLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 392, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ImplicationLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_386ImplicationLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_386ImplicationLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ImplicationLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":393
 *     return add_link(types.DirectlyEvaluatableLink, args, tv=tv)
 * def ImplicationLink(*args, tv=None):
 *     return add_link(types.ImplicationLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def InheritanceLink(*args, tv=None):
 *     return add_link(types.InheritanceLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ImplicationLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 393, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":392
 * def DirectlyEvaluatableLink(*args, tv=None):
 *     return add_link(types.DirectlyEvaluatableLink, args, tv=tv)
 * def ImplicationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ImplicationLink, args, tv=tv)
 * def InheritanceLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ImplicationLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":394
 * def ImplicationLink(*args, tv=None):
 *     return add_link(types.ImplicationLink, args, tv=tv)
 * def InheritanceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.InheritanceLink, args, tv=tv)
 * def ForAllLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_389InheritanceLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_389InheritanceLink = {"InheritanceLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_389InheritanceLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_389InheritanceLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("InheritanceLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "InheritanceLink") < 0)) __PYX_ERR(1, 394, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("InheritanceLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 394, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.InheritanceLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_388InheritanceLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_388InheritanceLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("InheritanceLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":395
 *     return add_link(types.ImplicationLink, args, tv=tv)
 * def InheritanceLink(*args, tv=None):
 *     return add_link(types.InheritanceLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ForAllLink(*args, tv=None):
 *     return add_link(types.ForAllLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_InheritanceLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 395, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":394
 * def ImplicationLink(*args, tv=None):
 *     return add_link(types.ImplicationLink, args, tv=tv)
 * def InheritanceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.InheritanceLink, args, tv=tv)
 * def ForAllLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.InheritanceLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":396
 * def InheritanceLink(*args, tv=None):
 *     return add_link(types.InheritanceLink, args, tv=tv)
 * def ForAllLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ForAllLink, args, tv=tv)
 * def ExistsLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_391ForAllLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_391ForAllLink = {"ForAllLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_391ForAllLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_391ForAllLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ForAllLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ForAllLink") < 0)) __PYX_ERR(1, 396, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ForAllLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 396, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ForAllLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_390ForAllLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_390ForAllLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ForAllLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":397
 *     return add_link(types.InheritanceLink, args, tv=tv)
 * def ForAllLink(*args, tv=None):
 *     return add_link(types.ForAllLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ExistsLink(*args, tv=None):
 *     return add_link(types.ExistsLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ForAllLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 397, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":396
 * def InheritanceLink(*args, tv=None):
 *     return add_link(types.InheritanceLink, args, tv=tv)
 * def ForAllLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ForAllLink, args, tv=tv)
 * def ExistsLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ForAllLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":398
 * def ForAllLink(*args, tv=None):
 *     return add_link(types.ForAllLink, args, tv=tv)
 * def ExistsLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExistsLink, args, tv=tv)
 * def AssociativeLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_393ExistsLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_393ExistsLink = {"ExistsLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_393ExistsLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_393ExistsLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ExistsLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ExistsLink") < 0)) __PYX_ERR(1, 398, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ExistsLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 398, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ExistsLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_392ExistsLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_392ExistsLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ExistsLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":399
 *     return add_link(types.ForAllLink, args, tv=tv)
 * def ExistsLink(*args, tv=None):
 *     return add_link(types.ExistsLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def AssociativeLink(*args, tv=None):
 *     return add_link(types.AssociativeLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ExistsLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 399, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":398
 * def ForAllLink(*args, tv=None):
 *     return add_link(types.ForAllLink, args, tv=tv)
 * def ExistsLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExistsLink, args, tv=tv)
 * def AssociativeLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ExistsLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":400
 * def ExistsLink(*args, tv=None):
 *     return add_link(types.ExistsLink, args, tv=tv)
 * def AssociativeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AssociativeLink, args, tv=tv)
 * def EquivalenceLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_395AssociativeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_395AssociativeLink = {"AssociativeLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_395AssociativeLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_395AssociativeLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AssociativeLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "AssociativeLink") < 0)) __PYX_ERR(1, 400, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AssociativeLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 400, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.AssociativeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_394AssociativeLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_394AssociativeLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AssociativeLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":401
 *     return add_link(types.ExistsLink, args, tv=tv)
 * def AssociativeLink(*args, tv=None):
 *     return add_link(types.AssociativeLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def EquivalenceLink(*args, tv=None):
 *     return add_link(types.EquivalenceLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_AssociativeLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 401, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":400
 * def ExistsLink(*args, tv=None):
 *     return add_link(types.ExistsLink, args, tv=tv)
 * def AssociativeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AssociativeLink, args, tv=tv)
 * def EquivalenceLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.AssociativeLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":402
 * def AssociativeLink(*args, tv=None):
 *     return add_link(types.AssociativeLink, args, tv=tv)
 * def EquivalenceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EquivalenceLink, args, tv=tv)
 * def ExecutionLink(*args, tv=None):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_397EquivalenceLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_397EquivalenceLink = {"EquivalenceLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_397EquivalenceLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_397EquivalenceLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("EquivalenceLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "EquivalenceLink") < 0)) __PYX_ERR(1, 402, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("EquivalenceLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 402, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.EquivalenceLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_396EquivalenceLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_396EquivalenceLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("EquivalenceLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":403
 *     return add_link(types.AssociativeLink, args, tv=tv)
 * def EquivalenceLink(*args, tv=None):
 *     return add_link(types.EquivalenceLink, args, tv=tv)             # <<<<<<<<<<<<<<
 * def ExecutionLink(*args, tv=None):
 *     return add_link(types.ExecutionLink, args, tv=tv)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_EquivalenceLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 403, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":402
 * def AssociativeLink(*args, tv=None):
 *     return add_link(types.AssociativeLink, args, tv=tv)
 * def EquivalenceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EquivalenceLink, args, tv=tv)
 * def ExecutionLink(*args, tv=None):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.EquivalenceLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../atoms/atom_types/core_types.pyx":404
 * def EquivalenceLink(*args, tv=None):
 *     return add_link(types.EquivalenceLink, args, tv=tv)
 * def ExecutionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutionLink, args, tv=tv)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_399ExecutionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_399ExecutionLink = {"ExecutionLink", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_399ExecutionLink, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_399ExecutionLink(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tv = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ExecutionLink (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tv,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "ExecutionLink") < 0)) __PYX_ERR(1, 404, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_tv = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ExecutionLink", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 404, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("opencog.type_constructors.ExecutionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_398ExecutionLink(__pyx_self, __pyx_v_tv, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_398ExecutionLink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_tv, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ExecutionLink", 0);

  /* "../../atoms/atom_types/core_types.pyx":405
 *     return add_link(types.EquivalenceLink, args, tv=tv)
 * def ExecutionLink(*args, tv=None):
 *     return add_link(types.ExecutionLink, args, tv=tv)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ExecutionLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_args);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_tv, __pyx_v_tv) < 0) __PYX_ERR(1, 405, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../atoms/atom_types/core_types.pyx":404
 * def EquivalenceLink(*args, tv=None):
 *     return add_link(types.EquivalenceLink, args, tv=tv)
 * def ExecutionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutionLink, args, tv=tv)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("opencog.type_constructors.ExecutionLink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "opencog/type_constructors.pyx":35
 * 
 * 
 * def FloatValue(arg):             # <<<<<<<<<<<<<<
 *     return createFloatValue(arg)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_401FloatValue(PyObject *__pyx_self, PyObject *__pyx_v_arg); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_401FloatValue = {"FloatValue", (PyCFunction)__pyx_pw_7opencog_17type_constructors_401FloatValue, METH_O, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_401FloatValue(PyObject *__pyx_self, PyObject *__pyx_v_arg) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("FloatValue (wrapper)", 0);
  __pyx_r = __pyx_pf_7opencog_17type_constructors_400FloatValue(__pyx_self, ((PyObject *)__pyx_v_arg));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_400FloatValue(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_arg) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FloatValue", 0);

  /* "opencog/type_constructors.pyx":36
 * 
 * def FloatValue(arg):
 *     return createFloatValue(arg)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_createFloatValue); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_arg) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_arg);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "opencog/type_constructors.pyx":35
 * 
 * 
 * def FloatValue(arg):             # <<<<<<<<<<<<<<
 *     return createFloatValue(arg)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("opencog.type_constructors.FloatValue", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "opencog/type_constructors.pyx":39
 * 
 * 
 * def LinkValue(arg):             # <<<<<<<<<<<<<<
 *     return createLinkValue(arg)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_403LinkValue(PyObject *__pyx_self, PyObject *__pyx_v_arg); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_403LinkValue = {"LinkValue", (PyCFunction)__pyx_pw_7opencog_17type_constructors_403LinkValue, METH_O, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_403LinkValue(PyObject *__pyx_self, PyObject *__pyx_v_arg) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LinkValue (wrapper)", 0);
  __pyx_r = __pyx_pf_7opencog_17type_constructors_402LinkValue(__pyx_self, ((PyObject *)__pyx_v_arg));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_402LinkValue(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_arg) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinkValue", 0);

  /* "opencog/type_constructors.pyx":40
 * 
 * def LinkValue(arg):
 *     return createLinkValue(arg)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_createLinkValue); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_arg) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_arg);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "opencog/type_constructors.pyx":39
 * 
 * 
 * def LinkValue(arg):             # <<<<<<<<<<<<<<
 *     return createLinkValue(arg)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("opencog.type_constructors.LinkValue", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "opencog/type_constructors.pyx":43
 * 
 * 
 * def StringValue(arg):             # <<<<<<<<<<<<<<
 *     return createStringValue(arg)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_405StringValue(PyObject *__pyx_self, PyObject *__pyx_v_arg); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_405StringValue = {"StringValue", (PyCFunction)__pyx_pw_7opencog_17type_constructors_405StringValue, METH_O, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_405StringValue(PyObject *__pyx_self, PyObject *__pyx_v_arg) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StringValue (wrapper)", 0);
  __pyx_r = __pyx_pf_7opencog_17type_constructors_404StringValue(__pyx_self, ((PyObject *)__pyx_v_arg));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_404StringValue(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_arg) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StringValue", 0);

  /* "opencog/type_constructors.pyx":44
 * 
 * def StringValue(arg):
 *     return createStringValue(arg)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_createStringValue); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_arg) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_arg);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "opencog/type_constructors.pyx":43
 * 
 * 
 * def StringValue(arg):             # <<<<<<<<<<<<<<
 *     return createStringValue(arg)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("opencog.type_constructors.StringValue", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "opencog/type_constructors.pyx":47
 * 
 * 
 * def TruthValue(strength_t strength=1.0, confidence_t confidence=1.0):             # <<<<<<<<<<<<<<
 *     return createTruthValue(strength, confidence)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7opencog_17type_constructors_407TruthValue(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7opencog_17type_constructors_407TruthValue = {"TruthValue", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7opencog_17type_constructors_407TruthValue, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7opencog_17type_constructors_407TruthValue(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  __pyx_t_7opencog_9atomspace_strength_t __pyx_v_strength;
  __pyx_t_7opencog_9atomspace_confidence_t __pyx_v_confidence;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TruthValue (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_strength,&__pyx_n_s_confidence,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_strength);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_confidence);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "TruthValue") < 0)) __PYX_ERR(0, 47, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_strength = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_strength == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 47, __pyx_L3_error)
    } else {
      __pyx_v_strength = ((__pyx_t_7opencog_9atomspace_strength_t)1.0);
    }
    if (values[1]) {
      __pyx_v_confidence = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_confidence == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 47, __pyx_L3_error)
    } else {
      __pyx_v_confidence = ((__pyx_t_7opencog_9atomspace_confidence_t)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("TruthValue", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 47, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("opencog.type_constructors.TruthValue", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7opencog_17type_constructors_406TruthValue(__pyx_self, __pyx_v_strength, __pyx_v_confidence);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7opencog_17type_constructors_406TruthValue(CYTHON_UNUSED PyObject *__pyx_self, __pyx_t_7opencog_9atomspace_strength_t __pyx_v_strength, __pyx_t_7opencog_9atomspace_confidence_t __pyx_v_confidence) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TruthValue", 0);

  /* "opencog/type_constructors.pyx":48
 * 
 * def TruthValue(strength_t strength=1.0, confidence_t confidence=1.0):
 *     return createTruthValue(strength, confidence)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_createTruthValue); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_strength); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_confidence); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "opencog/type_constructors.pyx":47
 * 
 * 
 * def TruthValue(strength_t strength=1.0, confidence_t confidence=1.0):             # <<<<<<<<<<<<<<
 *     return createTruthValue(strength, confidence)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("opencog.type_constructors.TruthValue", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_type_constructors(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_type_constructors},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "type_constructors",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_AbsentLink, __pyx_k_AbsentLink, sizeof(__pyx_k_AbsentLink), 0, 0, 1, 1},
  {&__pyx_n_s_AccumulateLink, __pyx_k_AccumulateLink, sizeof(__pyx_k_AccumulateLink), 0, 0, 1, 1},
  {&__pyx_n_s_AlphaConvertibleLink, __pyx_k_AlphaConvertibleLink, sizeof(__pyx_k_AlphaConvertibleLink), 0, 0, 1, 1},
  {&__pyx_n_s_AlphaEqualLink, __pyx_k_AlphaEqualLink, sizeof(__pyx_k_AlphaEqualLink), 0, 0, 1, 1},
  {&__pyx_n_s_AlwaysLink, __pyx_k_AlwaysLink, sizeof(__pyx_k_AlwaysLink), 0, 0, 1, 1},
  {&__pyx_n_s_AnchorNode, __pyx_k_AnchorNode, sizeof(__pyx_k_AnchorNode), 0, 0, 1, 1},
  {&__pyx_n_s_AndLink, __pyx_k_AndLink, sizeof(__pyx_k_AndLink), 0, 0, 1, 1},
  {&__pyx_n_s_AnyNode, __pyx_k_AnyNode, sizeof(__pyx_k_AnyNode), 0, 0, 1, 1},
  {&__pyx_n_s_ArithmeticLink, __pyx_k_ArithmeticLink, sizeof(__pyx_k_ArithmeticLink), 0, 0, 1, 1},
  {&__pyx_n_s_ArrowLink, __pyx_k_ArrowLink, sizeof(__pyx_k_ArrowLink), 0, 0, 1, 1},
  {&__pyx_n_s_AssociativeLink, __pyx_k_AssociativeLink, sizeof(__pyx_k_AssociativeLink), 0, 0, 1, 1},
  {&__pyx_n_s_AtomSpace, __pyx_k_AtomSpace, sizeof(__pyx_k_AtomSpace), 0, 0, 1, 1},
  {&__pyx_n_s_BindLink, __pyx_k_BindLink, sizeof(__pyx_k_BindLink), 0, 0, 1, 1},
  {&__pyx_n_s_BondNode, __pyx_k_BondNode, sizeof(__pyx_k_BondNode), 0, 0, 1, 1},
  {&__pyx_n_s_BoolAndLink, __pyx_k_BoolAndLink, sizeof(__pyx_k_BoolAndLink), 0, 0, 1, 1},
  {&__pyx_n_s_BoolNotLink, __pyx_k_BoolNotLink, sizeof(__pyx_k_BoolNotLink), 0, 0, 1, 1},
  {&__pyx_n_s_BoolOpLink, __pyx_k_BoolOpLink, sizeof(__pyx_k_BoolOpLink), 0, 0, 1, 1},
  {&__pyx_n_s_BoolOrLink, __pyx_k_BoolOrLink, sizeof(__pyx_k_BoolOrLink), 0, 0, 1, 1},
  {&__pyx_n_s_BoolValueOfLink, __pyx_k_BoolValueOfLink, sizeof(__pyx_k_BoolValueOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_BooleanInputLink, __pyx_k_BooleanInputLink, sizeof(__pyx_k_BooleanInputLink), 0, 0, 1, 1},
  {&__pyx_n_s_BooleanOutputLink, __pyx_k_BooleanOutputLink, sizeof(__pyx_k_BooleanOutputLink), 0, 0, 1, 1},
  {&__pyx_n_s_ChoiceLink, __pyx_k_ChoiceLink, sizeof(__pyx_k_ChoiceLink), 0, 0, 1, 1},
  {&__pyx_n_s_CollectionLink, __pyx_k_CollectionLink, sizeof(__pyx_k_CollectionLink), 0, 0, 1, 1},
  {&__pyx_n_s_CollectionOfLink, __pyx_k_CollectionOfLink, sizeof(__pyx_k_CollectionOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_ComplementLink, __pyx_k_ComplementLink, sizeof(__pyx_k_ComplementLink), 0, 0, 1, 1},
  {&__pyx_n_s_ConceptNode, __pyx_k_ConceptNode, sizeof(__pyx_k_ConceptNode), 0, 0, 1, 1},
  {&__pyx_n_s_ConclusionOfLink, __pyx_k_ConclusionOfLink, sizeof(__pyx_k_ConclusionOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_CondLink, __pyx_k_CondLink, sizeof(__pyx_k_CondLink), 0, 0, 1, 1},
  {&__pyx_n_s_ConfidenceOfLink, __pyx_k_ConfidenceOfLink, sizeof(__pyx_k_ConfidenceOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_Connector, __pyx_k_Connector, sizeof(__pyx_k_Connector), 0, 0, 1, 1},
  {&__pyx_n_s_ConnectorChoice, __pyx_k_ConnectorChoice, sizeof(__pyx_k_ConnectorChoice), 0, 0, 1, 1},
  {&__pyx_n_s_ConnectorDir, __pyx_k_ConnectorDir, sizeof(__pyx_k_ConnectorDir), 0, 0, 1, 1},
  {&__pyx_n_s_ConnectorSeq, __pyx_k_ConnectorSeq, sizeof(__pyx_k_ConnectorSeq), 0, 0, 1, 1},
  {&__pyx_n_s_ConnectorSet, __pyx_k_ConnectorSet, sizeof(__pyx_k_ConnectorSet), 0, 0, 1, 1},
  {&__pyx_n_s_ContextLink, __pyx_k_ContextLink, sizeof(__pyx_k_ContextLink), 0, 0, 1, 1},
  {&__pyx_n_s_ContinuationLink, __pyx_k_ContinuationLink, sizeof(__pyx_k_ContinuationLink), 0, 0, 1, 1},
  {&__pyx_n_s_CountOfLink, __pyx_k_CountOfLink, sizeof(__pyx_k_CountOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_CrispInputLink, __pyx_k_CrispInputLink, sizeof(__pyx_k_CrispInputLink), 0, 0, 1, 1},
  {&__pyx_n_s_CrispOutputLink, __pyx_k_CrispOutputLink, sizeof(__pyx_k_CrispOutputLink), 0, 0, 1, 1},
  {&__pyx_n_s_CrossSection, __pyx_k_CrossSection, sizeof(__pyx_k_CrossSection), 0, 0, 1, 1},
  {&__pyx_n_s_DatalogAst, __pyx_k_DatalogAst, sizeof(__pyx_k_DatalogAst), 0, 0, 1, 1},
  {&__pyx_n_s_DecimateLink, __pyx_k_DecimateLink, sizeof(__pyx_k_DecimateLink), 0, 0, 1, 1},
  {&__pyx_n_s_DefineLink, __pyx_k_DefineLink, sizeof(__pyx_k_DefineLink), 0, 0, 1, 1},
  {&__pyx_n_s_DefinedPredicateNode, __pyx_k_DefinedPredicateNode, sizeof(__pyx_k_DefinedPredicateNode), 0, 0, 1, 1},
  {&__pyx_n_s_DefinedProcedureNode, __pyx_k_DefinedProcedureNode, sizeof(__pyx_k_DefinedProcedureNode), 0, 0, 1, 1},
  {&__pyx_n_s_DefinedSchemaNode, __pyx_k_DefinedSchemaNode, sizeof(__pyx_k_DefinedSchemaNode), 0, 0, 1, 1},
  {&__pyx_n_s_DefinedTypeNode, __pyx_k_DefinedTypeNode, sizeof(__pyx_k_DefinedTypeNode), 0, 0, 1, 1},
  {&__pyx_n_s_DeleteLink, __pyx_k_DeleteLink, sizeof(__pyx_k_DeleteLink), 0, 0, 1, 1},
  {&__pyx_n_s_DeprecationWarning, __pyx_k_DeprecationWarning, sizeof(__pyx_k_DeprecationWarning), 0, 0, 1, 1},
  {&__pyx_n_s_DirectlyEvaluatableLink, __pyx_k_DirectlyEvaluatableLink, sizeof(__pyx_k_DirectlyEvaluatableLink), 0, 0, 1, 1},
  {&__pyx_n_s_DivideLink, __pyx_k_DivideLink, sizeof(__pyx_k_DivideLink), 0, 0, 1, 1},
  {&__pyx_n_s_DontExecLink, __pyx_k_DontExecLink, sizeof(__pyx_k_DontExecLink), 0, 0, 1, 1},
  {&__pyx_n_s_DualLink, __pyx_k_DualLink, sizeof(__pyx_k_DualLink), 0, 0, 1, 1},
  {&__pyx_n_s_EdgeLink, __pyx_k_EdgeLink, sizeof(__pyx_k_EdgeLink), 0, 0, 1, 1},
  {&__pyx_n_s_ElementOfLink, __pyx_k_ElementOfLink, sizeof(__pyx_k_ElementOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_EqualLink, __pyx_k_EqualLink, sizeof(__pyx_k_EqualLink), 0, 0, 1, 1},
  {&__pyx_n_s_EquivalenceLink, __pyx_k_EquivalenceLink, sizeof(__pyx_k_EquivalenceLink), 0, 0, 1, 1},
  {&__pyx_n_s_EvaluatableLink, __pyx_k_EvaluatableLink, sizeof(__pyx_k_EvaluatableLink), 0, 0, 1, 1},
  {&__pyx_n_s_EvaluationLink, __pyx_k_EvaluationLink, sizeof(__pyx_k_EvaluationLink), 0, 0, 1, 1},
  {&__pyx_n_s_ExclusiveLink, __pyx_k_ExclusiveLink, sizeof(__pyx_k_ExclusiveLink), 0, 0, 1, 1},
  {&__pyx_n_s_ExecutableLink, __pyx_k_ExecutableLink, sizeof(__pyx_k_ExecutableLink), 0, 0, 1, 1},
  {&__pyx_n_s_ExecuteThreadedLink, __pyx_k_ExecuteThreadedLink, sizeof(__pyx_k_ExecuteThreadedLink), 0, 0, 1, 1},
  {&__pyx_n_s_ExecutionLink, __pyx_k_ExecutionLink, sizeof(__pyx_k_ExecutionLink), 0, 0, 1, 1},
  {&__pyx_n_s_ExecutionOutputLink, __pyx_k_ExecutionOutputLink, sizeof(__pyx_k_ExecutionOutputLink), 0, 0, 1, 1},
  {&__pyx_n_s_ExistsLink, __pyx_k_ExistsLink, sizeof(__pyx_k_ExistsLink), 0, 0, 1, 1},
  {&__pyx_n_s_FalseLink, __pyx_k_FalseLink, sizeof(__pyx_k_FalseLink), 0, 0, 1, 1},
  {&__pyx_n_s_FilterLink, __pyx_k_FilterLink, sizeof(__pyx_k_FilterLink), 0, 0, 1, 1},
  {&__pyx_n_s_FloatValue, __pyx_k_FloatValue, sizeof(__pyx_k_FloatValue), 0, 0, 1, 1},
  {&__pyx_n_s_FloatValueOfLink, __pyx_k_FloatValueOfLink, sizeof(__pyx_k_FloatValueOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_FloorLink, __pyx_k_FloorLink, sizeof(__pyx_k_FloorLink), 0, 0, 1, 1},
  {&__pyx_n_s_FoldLink, __pyx_k_FoldLink, sizeof(__pyx_k_FoldLink), 0, 0, 1, 1},
  {&__pyx_n_s_ForAllLink, __pyx_k_ForAllLink, sizeof(__pyx_k_ForAllLink), 0, 0, 1, 1},
  {&__pyx_n_s_ForeignAst, __pyx_k_ForeignAst, sizeof(__pyx_k_ForeignAst), 0, 0, 1, 1},
  {&__pyx_n_s_FormulaPredicateLink, __pyx_k_FormulaPredicateLink, sizeof(__pyx_k_FormulaPredicateLink), 0, 0, 1, 1},
  {&__pyx_n_s_Frame, __pyx_k_Frame, sizeof(__pyx_k_Frame), 0, 0, 1, 1},
  {&__pyx_n_s_FreeLink, __pyx_k_FreeLink, sizeof(__pyx_k_FreeLink), 0, 0, 1, 1},
  {&__pyx_n_s_FunctionLink, __pyx_k_FunctionLink, sizeof(__pyx_k_FunctionLink), 0, 0, 1, 1},
  {&__pyx_n_s_GetLink, __pyx_k_GetLink, sizeof(__pyx_k_GetLink), 0, 0, 1, 1},
  {&__pyx_n_s_GlobNode, __pyx_k_GlobNode, sizeof(__pyx_k_GlobNode), 0, 0, 1, 1},
  {&__pyx_n_s_GrantLink, __pyx_k_GrantLink, sizeof(__pyx_k_GrantLink), 0, 0, 1, 1},
  {&__pyx_n_s_GreaterThanLink, __pyx_k_GreaterThanLink, sizeof(__pyx_k_GreaterThanLink), 0, 0, 1, 1},
  {&__pyx_n_s_GroundedPredicateNode, __pyx_k_GroundedPredicateNode, sizeof(__pyx_k_GroundedPredicateNode), 0, 0, 1, 1},
  {&__pyx_n_s_GroundedProcedureNode, __pyx_k_GroundedProcedureNode, sizeof(__pyx_k_GroundedProcedureNode), 0, 0, 1, 1},
  {&__pyx_n_s_GroundedSchemaNode, __pyx_k_GroundedSchemaNode, sizeof(__pyx_k_GroundedSchemaNode), 0, 0, 1, 1},
  {&__pyx_n_s_HeavisideLink, __pyx_k_HeavisideLink, sizeof(__pyx_k_HeavisideLink), 0, 0, 1, 1},
  {&__pyx_n_s_IdenticalLink, __pyx_k_IdenticalLink, sizeof(__pyx_k_IdenticalLink), 0, 0, 1, 1},
  {&__pyx_n_s_ImplicationLink, __pyx_k_ImplicationLink, sizeof(__pyx_k_ImplicationLink), 0, 0, 1, 1},
  {&__pyx_n_s_ImpulseLink, __pyx_k_ImpulseLink, sizeof(__pyx_k_ImpulseLink), 0, 0, 1, 1},
  {&__pyx_n_s_IncomingOfLink, __pyx_k_IncomingOfLink, sizeof(__pyx_k_IncomingOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_InheritanceLink, __pyx_k_InheritanceLink, sizeof(__pyx_k_InheritanceLink), 0, 0, 1, 1},
  {&__pyx_n_s_IntersectionLink, __pyx_k_IntersectionLink, sizeof(__pyx_k_IntersectionLink), 0, 0, 1, 1},
  {&__pyx_n_s_IntervalLink, __pyx_k_IntervalLink, sizeof(__pyx_k_IntervalLink), 0, 0, 1, 1},
  {&__pyx_n_s_IsClosedLink, __pyx_k_IsClosedLink, sizeof(__pyx_k_IsClosedLink), 0, 0, 1, 1},
  {&__pyx_n_s_IsFalseLink, __pyx_k_IsFalseLink, sizeof(__pyx_k_IsFalseLink), 0, 0, 1, 1},
  {&__pyx_n_s_IsTrueLink, __pyx_k_IsTrueLink, sizeof(__pyx_k_IsTrueLink), 0, 0, 1, 1},
  {&__pyx_n_s_ItemClassNode, __pyx_k_ItemClassNode, sizeof(__pyx_k_ItemClassNode), 0, 0, 1, 1},
  {&__pyx_n_s_ItemNode, __pyx_k_ItemNode, sizeof(__pyx_k_ItemNode), 0, 0, 1, 1},
  {&__pyx_n_s_JoinLink, __pyx_k_JoinLink, sizeof(__pyx_k_JoinLink), 0, 0, 1, 1},
  {&__pyx_n_s_JsonAst, __pyx_k_JsonAst, sizeof(__pyx_k_JsonAst), 0, 0, 1, 1},
  {&__pyx_n_s_LambdaLink, __pyx_k_LambdaLink, sizeof(__pyx_k_LambdaLink), 0, 0, 1, 1},
  {&__pyx_n_s_LessThanLink, __pyx_k_LessThanLink, sizeof(__pyx_k_LessThanLink), 0, 0, 1, 1},
  {&__pyx_n_s_LexicalNode, __pyx_k_LexicalNode, sizeof(__pyx_k_LexicalNode), 0, 0, 1, 1},
  {&__pyx_n_s_Link, __pyx_k_Link, sizeof(__pyx_k_Link), 0, 0, 1, 1},
  {&__pyx_n_s_LinkSignatureLink, __pyx_k_LinkSignatureLink, sizeof(__pyx_k_LinkSignatureLink), 0, 0, 1, 1},
  {&__pyx_n_s_LinkValue, __pyx_k_LinkValue, sizeof(__pyx_k_LinkValue), 0, 0, 1, 1},
  {&__pyx_n_s_ListLink, __pyx_k_ListLink, sizeof(__pyx_k_ListLink), 0, 0, 1, 1},
  {&__pyx_n_s_LocalQuoteLink, __pyx_k_LocalQuoteLink, sizeof(__pyx_k_LocalQuoteLink), 0, 0, 1, 1},
  {&__pyx_n_s_Log2Link, __pyx_k_Log2Link, sizeof(__pyx_k_Log2Link), 0, 0, 1, 1},
  {&__pyx_n_s_MaxLink, __pyx_k_MaxLink, sizeof(__pyx_k_MaxLink), 0, 0, 1, 1},
  {&__pyx_n_s_MaximalJoinLink, __pyx_k_MaximalJoinLink, sizeof(__pyx_k_MaximalJoinLink), 0, 0, 1, 1},
  {&__pyx_n_s_MeetLink, __pyx_k_MeetLink, sizeof(__pyx_k_MeetLink), 0, 0, 1, 1},
  {&__pyx_n_s_MemberLink, __pyx_k_MemberLink, sizeof(__pyx_k_MemberLink), 0, 0, 1, 1},
  {&__pyx_n_s_MinLink, __pyx_k_MinLink, sizeof(__pyx_k_MinLink), 0, 0, 1, 1},
  {&__pyx_n_s_MinimalJoinLink, __pyx_k_MinimalJoinLink, sizeof(__pyx_k_MinimalJoinLink), 0, 0, 1, 1},
  {&__pyx_n_s_MinusLink, __pyx_k_MinusLink, sizeof(__pyx_k_MinusLink), 0, 0, 1, 1},
  {&__pyx_n_s_Node, __pyx_k_Node, sizeof(__pyx_k_Node), 0, 0, 1, 1},
  {&__pyx_n_s_NotLink, __pyx_k_NotLink, sizeof(__pyx_k_NotLink), 0, 0, 1, 1},
  {&__pyx_n_s_Notype, __pyx_k_Notype, sizeof(__pyx_k_Notype), 0, 0, 1, 1},
  {&__pyx_n_s_NumberNode, __pyx_k_NumberNode, sizeof(__pyx_k_NumberNode), 0, 0, 1, 1},
  {&__pyx_n_s_NumberOfLink, __pyx_k_NumberOfLink, sizeof(__pyx_k_NumberOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_NumericFunctionLink, __pyx_k_NumericFunctionLink, sizeof(__pyx_k_NumericFunctionLink), 0, 0, 1, 1},
  {&__pyx_n_s_NumericInputLink, __pyx_k_NumericInputLink, sizeof(__pyx_k_NumericInputLink), 0, 0, 1, 1},
  {&__pyx_n_s_NumericOutputLink, __pyx_k_NumericOutputLink, sizeof(__pyx_k_NumericOutputLink), 0, 0, 1, 1},
  {&__pyx_n_s_OrLink, __pyx_k_OrLink, sizeof(__pyx_k_OrLink), 0, 0, 1, 1},
  {&__pyx_n_s_OrderedLink, __pyx_k_OrderedLink, sizeof(__pyx_k_OrderedLink), 0, 0, 1, 1},
  {&__pyx_n_s_ParallelLink, __pyx_k_ParallelLink, sizeof(__pyx_k_ParallelLink), 0, 0, 1, 1},
  {&__pyx_n_s_PatternLink, __pyx_k_PatternLink, sizeof(__pyx_k_PatternLink), 0, 0, 1, 1},
  {&__pyx_n_s_PlusLink, __pyx_k_PlusLink, sizeof(__pyx_k_PlusLink), 0, 0, 1, 1},
  {&__pyx_n_s_PowLink, __pyx_k_PowLink, sizeof(__pyx_k_PowLink), 0, 0, 1, 1},
  {&__pyx_n_s_PredicateNode, __pyx_k_PredicateNode, sizeof(__pyx_k_PredicateNode), 0, 0, 1, 1},
  {&__pyx_n_s_PremiseOfLink, __pyx_k_PremiseOfLink, sizeof(__pyx_k_PremiseOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_PrenexLink, __pyx_k_PrenexLink, sizeof(__pyx_k_PrenexLink), 0, 0, 1, 1},
  {&__pyx_n_s_PresentLink, __pyx_k_PresentLink, sizeof(__pyx_k_PresentLink), 0, 0, 1, 1},
  {&__pyx_n_s_ProcedureNode, __pyx_k_ProcedureNode, sizeof(__pyx_k_ProcedureNode), 0, 0, 1, 1},
  {&__pyx_n_s_PromiseLink, __pyx_k_PromiseLink, sizeof(__pyx_k_PromiseLink), 0, 0, 1, 1},
  {&__pyx_n_s_PromisePredicateLink, __pyx_k_PromisePredicateLink, sizeof(__pyx_k_PromisePredicateLink), 0, 0, 1, 1},
  {&__pyx_n_s_PureExecLink, __pyx_k_PureExecLink, sizeof(__pyx_k_PureExecLink), 0, 0, 1, 1},
  {&__pyx_n_s_PutLink, __pyx_k_PutLink, sizeof(__pyx_k_PutLink), 0, 0, 1, 1},
  {&__pyx_n_s_PythonAst, __pyx_k_PythonAst, sizeof(__pyx_k_PythonAst), 0, 0, 1, 1},
  {&__pyx_n_s_QueryLink, __pyx_k_QueryLink, sizeof(__pyx_k_QueryLink), 0, 0, 1, 1},
  {&__pyx_n_s_QuoteLink, __pyx_k_QuoteLink, sizeof(__pyx_k_QuoteLink), 0, 0, 1, 1},
  {&__pyx_n_s_RandomChoiceLink, __pyx_k_RandomChoiceLink, sizeof(__pyx_k_RandomChoiceLink), 0, 0, 1, 1},
  {&__pyx_n_s_RandomNumberLink, __pyx_k_RandomNumberLink, sizeof(__pyx_k_RandomNumberLink), 0, 0, 1, 1},
  {&__pyx_n_s_ReplacementLink, __pyx_k_ReplacementLink, sizeof(__pyx_k_ReplacementLink), 0, 0, 1, 1},
  {&__pyx_n_s_RewriteLink, __pyx_k_RewriteLink, sizeof(__pyx_k_RewriteLink), 0, 0, 1, 1},
  {&__pyx_n_s_RuleLink, __pyx_k_RuleLink, sizeof(__pyx_k_RuleLink), 0, 0, 1, 1},
  {&__pyx_n_s_SatisfactionLink, __pyx_k_SatisfactionLink, sizeof(__pyx_k_SatisfactionLink), 0, 0, 1, 1},
  {&__pyx_n_s_SatisfyingLink, __pyx_k_SatisfyingLink, sizeof(__pyx_k_SatisfyingLink), 0, 0, 1, 1},
  {&__pyx_n_s_SchemaNode, __pyx_k_SchemaNode, sizeof(__pyx_k_SchemaNode), 0, 0, 1, 1},
  {&__pyx_n_s_ScopeLink, __pyx_k_ScopeLink, sizeof(__pyx_k_ScopeLink), 0, 0, 1, 1},
  {&__pyx_n_s_Section, __pyx_k_Section, sizeof(__pyx_k_Section), 0, 0, 1, 1},
  {&__pyx_n_s_SequentialAndLink, __pyx_k_SequentialAndLink, sizeof(__pyx_k_SequentialAndLink), 0, 0, 1, 1},
  {&__pyx_n_s_SequentialOrLink, __pyx_k_SequentialOrLink, sizeof(__pyx_k_SequentialOrLink), 0, 0, 1, 1},
  {&__pyx_n_s_SetDifferenceLink, __pyx_k_SetDifferenceLink, sizeof(__pyx_k_SetDifferenceLink), 0, 0, 1, 1},
  {&__pyx_n_s_SetLink, __pyx_k_SetLink, sizeof(__pyx_k_SetLink), 0, 0, 1, 1},
  {&__pyx_n_s_SetTVLink, __pyx_k_SetTVLink, sizeof(__pyx_k_SetTVLink), 0, 0, 1, 1},
  {&__pyx_n_s_SetValueLink, __pyx_k_SetValueLink, sizeof(__pyx_k_SetValueLink), 0, 0, 1, 1},
  {&__pyx_n_s_SexNode, __pyx_k_SexNode, sizeof(__pyx_k_SexNode), 0, 0, 1, 1},
  {&__pyx_n_s_SexprAst, __pyx_k_SexprAst, sizeof(__pyx_k_SexprAst), 0, 0, 1, 1},
  {&__pyx_n_s_ShapeLink, __pyx_k_ShapeLink, sizeof(__pyx_k_ShapeLink), 0, 0, 1, 1},
  {&__pyx_n_s_SignNode, __pyx_k_SignNode, sizeof(__pyx_k_SignNode), 0, 0, 1, 1},
  {&__pyx_n_s_SignatureLink, __pyx_k_SignatureLink, sizeof(__pyx_k_SignatureLink), 0, 0, 1, 1},
  {&__pyx_n_s_SimilarityLink, __pyx_k_SimilarityLink, sizeof(__pyx_k_SimilarityLink), 0, 0, 1, 1},
  {&__pyx_n_s_SineLink, __pyx_k_SineLink, sizeof(__pyx_k_SineLink), 0, 0, 1, 1},
  {&__pyx_n_s_SizeOfLink, __pyx_k_SizeOfLink, sizeof(__pyx_k_SizeOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_SleepLink, __pyx_k_SleepLink, sizeof(__pyx_k_SleepLink), 0, 0, 1, 1},
  {&__pyx_n_s_StateLink, __pyx_k_StateLink, sizeof(__pyx_k_StateLink), 0, 0, 1, 1},
  {&__pyx_n_s_StreamValueOfLink, __pyx_k_StreamValueOfLink, sizeof(__pyx_k_StreamValueOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_StrengthOfLink, __pyx_k_StrengthOfLink, sizeof(__pyx_k_StrengthOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_StringValue, __pyx_k_StringValue, sizeof(__pyx_k_StringValue), 0, 0, 1, 1},
  {&__pyx_n_s_SubsetLink, __pyx_k_SubsetLink, sizeof(__pyx_k_SubsetLink), 0, 0, 1, 1},
  {&__pyx_n_s_TagLink, __pyx_k_TagLink, sizeof(__pyx_k_TagLink), 0, 0, 1, 1},
  {&__pyx_n_s_TagNode, __pyx_k_TagNode, sizeof(__pyx_k_TagNode), 0, 0, 1, 1},
  {&__pyx_n_s_ThreadJoinLink, __pyx_k_ThreadJoinLink, sizeof(__pyx_k_ThreadJoinLink), 0, 0, 1, 1},
  {&__pyx_n_s_TimeLink, __pyx_k_TimeLink, sizeof(__pyx_k_TimeLink), 0, 0, 1, 1},
  {&__pyx_n_s_TimesLink, __pyx_k_TimesLink, sizeof(__pyx_k_TimesLink), 0, 0, 1, 1},
  {&__pyx_n_s_TopType, __pyx_k_TopType, sizeof(__pyx_k_TopType), 0, 0, 1, 1},
  {&__pyx_n_s_TrueLink, __pyx_k_TrueLink, sizeof(__pyx_k_TrueLink), 0, 0, 1, 1},
  {&__pyx_n_s_TruthValue, __pyx_k_TruthValue, sizeof(__pyx_k_TruthValue), 0, 0, 1, 1},
  {&__pyx_n_s_TruthValueOfLink, __pyx_k_TruthValueOfLink, sizeof(__pyx_k_TruthValueOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_TypeChoice, __pyx_k_TypeChoice, sizeof(__pyx_k_TypeChoice), 0, 0, 1, 1},
  {&__pyx_n_s_TypeCoInhNode, __pyx_k_TypeCoInhNode, sizeof(__pyx_k_TypeCoInhNode), 0, 0, 1, 1},
  {&__pyx_n_s_TypeInhNode, __pyx_k_TypeInhNode, sizeof(__pyx_k_TypeInhNode), 0, 0, 1, 1},
  {&__pyx_n_s_TypeInputLink, __pyx_k_TypeInputLink, sizeof(__pyx_k_TypeInputLink), 0, 0, 1, 1},
  {&__pyx_n_s_TypeIntersectionLink, __pyx_k_TypeIntersectionLink, sizeof(__pyx_k_TypeIntersectionLink), 0, 0, 1, 1},
  {&__pyx_n_s_TypeNode, __pyx_k_TypeNode, sizeof(__pyx_k_TypeNode), 0, 0, 1, 1},
  {&__pyx_n_s_TypeOfLink, __pyx_k_TypeOfLink, sizeof(__pyx_k_TypeOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_TypeOutputLink, __pyx_k_TypeOutputLink, sizeof(__pyx_k_TypeOutputLink), 0, 0, 1, 1},
  {&__pyx_n_s_TypedAtomLink, __pyx_k_TypedAtomLink, sizeof(__pyx_k_TypedAtomLink), 0, 0, 1, 1},
  {&__pyx_n_s_TypedVariableLink, __pyx_k_TypedVariableLink, sizeof(__pyx_k_TypedVariableLink), 0, 0, 1, 1},
  {&__pyx_n_s_UnionLink, __pyx_k_UnionLink, sizeof(__pyx_k_UnionLink), 0, 0, 1, 1},
  {&__pyx_n_s_UniqueLink, __pyx_k_UniqueLink, sizeof(__pyx_k_UniqueLink), 0, 0, 1, 1},
  {&__pyx_n_s_UnorderedLink, __pyx_k_UnorderedLink, sizeof(__pyx_k_UnorderedLink), 0, 0, 1, 1},
  {&__pyx_n_s_UnquoteLink, __pyx_k_UnquoteLink, sizeof(__pyx_k_UnquoteLink), 0, 0, 1, 1},
  {&__pyx_n_s_UpperSetLink, __pyx_k_UpperSetLink, sizeof(__pyx_k_UpperSetLink), 0, 0, 1, 1},
  {&__pyx_n_s_ValuableLink, __pyx_k_ValuableLink, sizeof(__pyx_k_ValuableLink), 0, 0, 1, 1},
  {&__pyx_n_s_Valuation, __pyx_k_Valuation, sizeof(__pyx_k_Valuation), 0, 0, 1, 1},
  {&__pyx_n_s_ValueOfLink, __pyx_k_ValueOfLink, sizeof(__pyx_k_ValueOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_ValueShimLink, __pyx_k_ValueShimLink, sizeof(__pyx_k_ValueShimLink), 0, 0, 1, 1},
  {&__pyx_n_s_VardeclOfLink, __pyx_k_VardeclOfLink, sizeof(__pyx_k_VardeclOfLink), 0, 0, 1, 1},
  {&__pyx_n_s_VariableList, __pyx_k_VariableList, sizeof(__pyx_k_VariableList), 0, 0, 1, 1},
  {&__pyx_n_s_VariableNode, __pyx_k_VariableNode, sizeof(__pyx_k_VariableNode), 0, 0, 1, 1},
  {&__pyx_n_s_VariableSet, __pyx_k_VariableSet, sizeof(__pyx_k_VariableSet), 0, 0, 1, 1},
  {&__pyx_n_s_VirtualLink, __pyx_k_VirtualLink, sizeof(__pyx_k_VirtualLink), 0, 0, 1, 1},
  {&__pyx_n_s_add_link, __pyx_k_add_link, sizeof(__pyx_k_add_link), 0, 0, 1, 1},
  {&__pyx_n_s_add_node, __pyx_k_add_node, sizeof(__pyx_k_add_node), 0, 0, 1, 1},
  {&__pyx_n_s_arg, __pyx_k_arg, sizeof(__pyx_k_arg), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_confidence, __pyx_k_confidence, sizeof(__pyx_k_confidence), 0, 0, 1, 1},
  {&__pyx_n_s_createFloatValue, __pyx_k_createFloatValue, sizeof(__pyx_k_createFloatValue), 0, 0, 1, 1},
  {&__pyx_n_s_createLinkValue, __pyx_k_createLinkValue, sizeof(__pyx_k_createLinkValue), 0, 0, 1, 1},
  {&__pyx_n_s_createStringValue, __pyx_k_createStringValue, sizeof(__pyx_k_createStringValue), 0, 0, 1, 1},
  {&__pyx_n_s_createTruthValue, __pyx_k_createTruthValue, sizeof(__pyx_k_createTruthValue), 0, 0, 1, 1},
  {&__pyx_n_s_get_default_atomspace, __pyx_k_get_default_atomspace, sizeof(__pyx_k_get_default_atomspace), 0, 0, 1, 1},
  {&__pyx_n_s_get_type_ctor_atomspace, __pyx_k_get_type_ctor_atomspace, sizeof(__pyx_k_get_type_ctor_atomspace), 0, 0, 1, 1},
  {&__pyx_kp_u_get_type_ctor_atomspace_is_depre, __pyx_k_get_type_ctor_atomspace_is_depre, sizeof(__pyx_k_get_type_ctor_atomspace_is_depre), 0, 1, 0, 0},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_new_atomspace, __pyx_k_new_atomspace, sizeof(__pyx_k_new_atomspace), 0, 0, 1, 1},
  {&__pyx_n_s_node_name, __pyx_k_node_name, sizeof(__pyx_k_node_name), 0, 0, 1, 1},
  {&__pyx_n_s_opencog_atomspace, __pyx_k_opencog_atomspace, sizeof(__pyx_k_opencog_atomspace), 0, 0, 1, 1},
  {&__pyx_n_s_opencog_type_constructors, __pyx_k_opencog_type_constructors, sizeof(__pyx_k_opencog_type_constructors), 0, 0, 1, 1},
  {&__pyx_n_s_opencog_utilities, __pyx_k_opencog_utilities, sizeof(__pyx_k_opencog_utilities), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_set_default_atomspace, __pyx_k_set_default_atomspace, sizeof(__pyx_k_set_default_atomspace), 0, 0, 1, 1},
  {&__pyx_n_s_set_type_ctor_atomspace, __pyx_k_set_type_ctor_atomspace, sizeof(__pyx_k_set_type_ctor_atomspace), 0, 0, 1, 1},
  {&__pyx_kp_u_set_type_ctor_atomspace_is_depre, __pyx_k_set_type_ctor_atomspace_is_depre, sizeof(__pyx_k_set_type_ctor_atomspace_is_depre), 0, 1, 0, 0},
  {&__pyx_n_s_strength, __pyx_k_strength, sizeof(__pyx_k_strength), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_tv, __pyx_k_tv, sizeof(__pyx_k_tv), 0, 0, 1, 1},
  {&__pyx_n_s_types, __pyx_k_types, sizeof(__pyx_k_types), 0, 0, 1, 1},
  {&__pyx_n_s_warn, __pyx_k_warn, sizeof(__pyx_k_warn), 0, 0, 1, 1},
  {&__pyx_n_s_warnings, __pyx_k_warnings, sizeof(__pyx_k_warnings), 0, 0, 1, 1},
  {&__pyx_kp_s_workspaces_opencog_central_atom, __pyx_k_workspaces_opencog_central_atom, sizeof(__pyx_k_workspaces_opencog_central_atom), 0, 0, 1, 0},
  {&__pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_k_workspaces_opencog_central_atom_2, sizeof(__pyx_k_workspaces_opencog_central_atom_2), 0, 0, 1, 0},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_DeprecationWarning = __Pyx_GetBuiltinName(__pyx_n_s_DeprecationWarning); if (!__pyx_builtin_DeprecationWarning) __PYX_ERR(0, 22, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "opencog/type_constructors.pyx":21
 * 
 * def set_type_ctor_atomspace(new_atomspace):
 *     warnings.warn('set_type_ctor_atomspace is deprecated, use set_default_atomspace instead',             # <<<<<<<<<<<<<<
 *             DeprecationWarning)
 *     return set_default_atomspace(new_atomspace)
 */
  __pyx_tuple_ = PyTuple_Pack(2, __pyx_kp_u_set_type_ctor_atomspace_is_depre, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "opencog/type_constructors.pyx":27
 * 
 * def get_type_ctor_atomspace():
 *     warnings.warn('get_type_ctor_atomspace is deprecated, use get_default_atomspace instead',             # <<<<<<<<<<<<<<
 *             DeprecationWarning)
 *     return get_default_atomspace()
 */
  __pyx_tuple__2 = PyTuple_Pack(2, __pyx_kp_u_get_type_ctor_atomspace_is_depre, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "opencog/type_constructors.pyx":20
 * 
 * 
 * def set_type_ctor_atomspace(new_atomspace):             # <<<<<<<<<<<<<<
 *     warnings.warn('set_type_ctor_atomspace is deprecated, use set_default_atomspace instead',
 *             DeprecationWarning)
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_n_s_new_atomspace); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);
  __pyx_codeobj__4 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__3, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom, __pyx_n_s_set_type_ctor_atomspace, 20, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__4)) __PYX_ERR(0, 20, __pyx_L1_error)

  /* "opencog/type_constructors.pyx":26
 * 
 * 
 * def get_type_ctor_atomspace():             # <<<<<<<<<<<<<<
 *     warnings.warn('get_type_ctor_atomspace is deprecated, use get_default_atomspace instead',
 *             DeprecationWarning)
 */
  __pyx_codeobj__5 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom, __pyx_n_s_get_type_ctor_atomspace, 26, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__5)) __PYX_ERR(0, 26, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":10
 * #
 * 
 * def Notype(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Notype, args, tv=tv)
 * def TopType(*args, tv=None):
 */
  __pyx_tuple__6 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(1, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);
  __pyx_codeobj__7 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__6, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_Notype, 10, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__7)) __PYX_ERR(1, 10, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":12
 * def Notype(*args, tv=None):
 *     return add_link(types.Notype, args, tv=tv)
 * def TopType(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TopType, args, tv=tv)
 * def Valuation(*args):
 */
  __pyx_tuple__8 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);
  __pyx_codeobj__9 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__8, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TopType, 12, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__9)) __PYX_ERR(1, 12, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":14
 * def TopType(*args, tv=None):
 *     return add_link(types.TopType, args, tv=tv)
 * def Valuation(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.Valuation, args)
 * def Frame(*args, tv=None):
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_n_s_args); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(1, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);
  __pyx_codeobj__11 = (PyObject*)__Pyx_PyCode_New(0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__10, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_Valuation, 14, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__11)) __PYX_ERR(1, 14, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":16
 * def Valuation(*args):
 *     return add_link(types.Valuation, args)
 * def Frame(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Frame, args, tv=tv)
 * def Node(node_name, tv=None):
 */
  __pyx_tuple__12 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);
  __pyx_codeobj__13 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__12, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_Frame, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__13)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":18
 * def Frame(*args, tv=None):
 *     return add_link(types.Frame, args, tv=tv)
 * def Node(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.Node, node_name, tv)
 * def Link(*args, tv=None):
 */
  __pyx_tuple__14 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(1, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);
  __pyx_codeobj__15 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_Node, 18, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__15)) __PYX_ERR(1, 18, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":20
 * def Node(node_name, tv=None):
 *     return add_node(types.Node, node_name, tv)
 * def Link(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Link, args, tv=tv)
 * def ConceptNode(node_name, tv=None):
 */
  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(1, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);
  __pyx_codeobj__17 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__16, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_Link, 20, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__17)) __PYX_ERR(1, 20, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":22
 * def Link(*args, tv=None):
 *     return add_link(types.Link, args, tv=tv)
 * def ConceptNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ConceptNode, node_name, tv)
 * def NumberNode(node_name, tv=None):
 */
  __pyx_tuple__18 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(1, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);
  __pyx_codeobj__19 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__18, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ConceptNode, 22, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__19)) __PYX_ERR(1, 22, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":24
 * def ConceptNode(node_name, tv=None):
 *     return add_node(types.ConceptNode, node_name, tv)
 * def NumberNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.NumberNode, node_name, tv)
 * def OrderedLink(*args, tv=None):
 */
  __pyx_tuple__20 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(1, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);
  __pyx_codeobj__21 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__20, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_NumberNode, 24, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__21)) __PYX_ERR(1, 24, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":26
 * def NumberNode(node_name, tv=None):
 *     return add_node(types.NumberNode, node_name, tv)
 * def OrderedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.OrderedLink, args, tv=tv)
 * def UnorderedLink(*args, tv=None):
 */
  __pyx_tuple__22 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(1, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);
  __pyx_codeobj__23 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_OrderedLink, 26, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__23)) __PYX_ERR(1, 26, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":28
 * def OrderedLink(*args, tv=None):
 *     return add_link(types.OrderedLink, args, tv=tv)
 * def UnorderedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnorderedLink, args, tv=tv)
 * def PredicateNode(node_name, tv=None):
 */
  __pyx_tuple__24 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);
  __pyx_codeobj__25 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__24, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_UnorderedLink, 28, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__25)) __PYX_ERR(1, 28, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":30
 * def UnorderedLink(*args, tv=None):
 *     return add_link(types.UnorderedLink, args, tv=tv)
 * def PredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.PredicateNode, node_name, tv)
 * def ValuableLink(*args, tv=None):
 */
  __pyx_tuple__26 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(1, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);
  __pyx_codeobj__27 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__26, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PredicateNode, 30, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__27)) __PYX_ERR(1, 30, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":32
 * def PredicateNode(node_name, tv=None):
 *     return add_node(types.PredicateNode, node_name, tv)
 * def ValuableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValuableLink, args, tv=tv)
 * def EvaluatableLink(*args, tv=None):
 */
  __pyx_tuple__28 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(1, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);
  __pyx_codeobj__29 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__28, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ValuableLink, 32, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__29)) __PYX_ERR(1, 32, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":34
 * def ValuableLink(*args, tv=None):
 *     return add_link(types.ValuableLink, args, tv=tv)
 * def EvaluatableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EvaluatableLink, args, tv=tv)
 * def ExecutableLink(*args, tv=None):
 */
  __pyx_tuple__30 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(1, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);
  __pyx_codeobj__31 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__30, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_EvaluatableLink, 34, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__31)) __PYX_ERR(1, 34, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":36
 * def EvaluatableLink(*args, tv=None):
 *     return add_link(types.EvaluatableLink, args, tv=tv)
 * def ExecutableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutableLink, args, tv=tv)
 * def CrispInputLink(*args, tv=None):
 */
  __pyx_tuple__32 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(1, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);
  __pyx_codeobj__33 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__32, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ExecutableLink, 36, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__33)) __PYX_ERR(1, 36, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":38
 * def ExecutableLink(*args, tv=None):
 *     return add_link(types.ExecutableLink, args, tv=tv)
 * def CrispInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrispInputLink, args, tv=tv)
 * def CrispOutputLink(*args, tv=None):
 */
  __pyx_tuple__34 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(1, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);
  __pyx_codeobj__35 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_CrispInputLink, 38, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__35)) __PYX_ERR(1, 38, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":40
 * def CrispInputLink(*args, tv=None):
 *     return add_link(types.CrispInputLink, args, tv=tv)
 * def CrispOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrispOutputLink, args, tv=tv)
 * def BooleanInputLink(*args, tv=None):
 */
  __pyx_tuple__36 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(1, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);
  __pyx_codeobj__37 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__36, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_CrispOutputLink, 40, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__37)) __PYX_ERR(1, 40, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":42
 * def CrispOutputLink(*args, tv=None):
 *     return add_link(types.CrispOutputLink, args, tv=tv)
 * def BooleanInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BooleanInputLink, args, tv=tv)
 * def BooleanOutputLink(*args, tv=None):
 */
  __pyx_tuple__38 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(1, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);
  __pyx_codeobj__39 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__38, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_BooleanInputLink, 42, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__39)) __PYX_ERR(1, 42, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":44
 * def BooleanInputLink(*args, tv=None):
 *     return add_link(types.BooleanInputLink, args, tv=tv)
 * def BooleanOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BooleanOutputLink, args, tv=tv)
 * def NumericInputLink(*args, tv=None):
 */
  __pyx_tuple__40 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(1, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);
  __pyx_codeobj__41 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__40, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_BooleanOutputLink, 44, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__41)) __PYX_ERR(1, 44, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":46
 * def BooleanOutputLink(*args, tv=None):
 *     return add_link(types.BooleanOutputLink, args, tv=tv)
 * def NumericInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericInputLink, args, tv=tv)
 * def NumericOutputLink(*args, tv=None):
 */
  __pyx_tuple__42 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(1, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);
  __pyx_codeobj__43 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_NumericInputLink, 46, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__43)) __PYX_ERR(1, 46, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":48
 * def NumericInputLink(*args, tv=None):
 *     return add_link(types.NumericInputLink, args, tv=tv)
 * def NumericOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericOutputLink, args, tv=tv)
 * def TypeInputLink(*args, tv=None):
 */
  __pyx_tuple__44 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(1, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);
  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_NumericOutputLink, 48, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(1, 48, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":50
 * def NumericOutputLink(*args, tv=None):
 *     return add_link(types.NumericOutputLink, args, tv=tv)
 * def TypeInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeInputLink, args, tv=tv)
 * def TypeOutputLink(*args, tv=None):
 */
  __pyx_tuple__46 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);
  __pyx_codeobj__47 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__46, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TypeInputLink, 50, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__47)) __PYX_ERR(1, 50, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":52
 * def TypeInputLink(*args, tv=None):
 *     return add_link(types.TypeInputLink, args, tv=tv)
 * def TypeOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeOutputLink, args, tv=tv)
 * def AlphaConvertibleLink(*args, tv=None):
 */
  __pyx_tuple__48 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(1, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__48, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TypeOutputLink, 52, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) __PYX_ERR(1, 52, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":54
 * def TypeOutputLink(*args, tv=None):
 *     return add_link(types.TypeOutputLink, args, tv=tv)
 * def AlphaConvertibleLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlphaConvertibleLink, args, tv=tv)
 * def CollectionLink(*args, tv=None):
 */
  __pyx_tuple__50 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(1, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__50, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_AlphaConvertibleLink, 54, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) __PYX_ERR(1, 54, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":56
 * def AlphaConvertibleLink(*args, tv=None):
 *     return add_link(types.AlphaConvertibleLink, args, tv=tv)
 * def CollectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CollectionLink, args, tv=tv)
 * def ListLink(*args, tv=None):
 */
  __pyx_tuple__52 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(1, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__52, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_CollectionLink, 56, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) __PYX_ERR(1, 56, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":58
 * def CollectionLink(*args, tv=None):
 *     return add_link(types.CollectionLink, args, tv=tv)
 * def ListLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ListLink, args, tv=tv)
 * def SetLink(*args, tv=None):
 */
  __pyx_tuple__54 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(1, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ListLink, 58, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(1, 58, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":60
 * def ListLink(*args, tv=None):
 *     return add_link(types.ListLink, args, tv=tv)
 * def SetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetLink, args, tv=tv)
 * def UnionLink(*args, tv=None):
 */
  __pyx_tuple__56 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(1, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__56, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SetLink, 60, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(1, 60, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":62
 * def SetLink(*args, tv=None):
 *     return add_link(types.SetLink, args, tv=tv)
 * def UnionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnionLink, args, tv=tv)
 * def IntersectionLink(*args, tv=None):
 */
  __pyx_tuple__58 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(1, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);
  __pyx_codeobj__59 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_UnionLink, 62, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__59)) __PYX_ERR(1, 62, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":64
 * def UnionLink(*args, tv=None):
 *     return add_link(types.UnionLink, args, tv=tv)
 * def IntersectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IntersectionLink, args, tv=tv)
 * def ComplementLink(*args, tv=None):
 */
  __pyx_tuple__60 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(1, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_IntersectionLink, 64, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(1, 64, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":66
 * def IntersectionLink(*args, tv=None):
 *     return add_link(types.IntersectionLink, args, tv=tv)
 * def ComplementLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ComplementLink, args, tv=tv)
 * def SetDifferenceLink(*args, tv=None):
 */
  __pyx_tuple__62 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(1, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);
  __pyx_codeobj__63 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__62, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ComplementLink, 66, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__63)) __PYX_ERR(1, 66, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":68
 * def ComplementLink(*args, tv=None):
 *     return add_link(types.ComplementLink, args, tv=tv)
 * def SetDifferenceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetDifferenceLink, args, tv=tv)
 * def MemberLink(*args, tv=None):
 */
  __pyx_tuple__64 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(1, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);
  __pyx_codeobj__65 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__64, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SetDifferenceLink, 68, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__65)) __PYX_ERR(1, 68, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":70
 * def SetDifferenceLink(*args, tv=None):
 *     return add_link(types.SetDifferenceLink, args, tv=tv)
 * def MemberLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MemberLink, args, tv=tv)
 * def SubsetLink(*args, tv=None):
 */
  __pyx_tuple__66 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(1, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);
  __pyx_codeobj__67 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__66, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_MemberLink, 70, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__67)) __PYX_ERR(1, 70, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":72
 * def MemberLink(*args, tv=None):
 *     return add_link(types.MemberLink, args, tv=tv)
 * def SubsetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SubsetLink, args, tv=tv)
 * def ContextLink(*args, tv=None):
 */
  __pyx_tuple__68 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(1, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);
  __pyx_codeobj__69 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SubsetLink, 72, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__69)) __PYX_ERR(1, 72, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":74
 * def SubsetLink(*args, tv=None):
 *     return add_link(types.SubsetLink, args, tv=tv)
 * def ContextLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ContextLink, args, tv=tv)
 * def TrueLink(*args, tv=None):
 */
  __pyx_tuple__70 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(1, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);
  __pyx_codeobj__71 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ContextLink, 74, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__71)) __PYX_ERR(1, 74, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":76
 * def ContextLink(*args, tv=None):
 *     return add_link(types.ContextLink, args, tv=tv)
 * def TrueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TrueLink, args, tv=tv)
 * def FalseLink(*args, tv=None):
 */
  __pyx_tuple__72 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(1, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);
  __pyx_codeobj__73 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__72, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TrueLink, 76, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__73)) __PYX_ERR(1, 76, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":78
 * def TrueLink(*args, tv=None):
 *     return add_link(types.TrueLink, args, tv=tv)
 * def FalseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FalseLink, args, tv=tv)
 * def AndLink(*args, tv=None):
 */
  __pyx_tuple__74 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(1, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);
  __pyx_codeobj__75 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__74, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_FalseLink, 78, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__75)) __PYX_ERR(1, 78, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":80
 * def FalseLink(*args, tv=None):
 *     return add_link(types.FalseLink, args, tv=tv)
 * def AndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AndLink, args, tv=tv)
 * def OrLink(*args, tv=None):
 */
  __pyx_tuple__76 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__76)) __PYX_ERR(1, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__76);
  __Pyx_GIVEREF(__pyx_tuple__76);
  __pyx_codeobj__77 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__76, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_AndLink, 80, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__77)) __PYX_ERR(1, 80, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":82
 * def AndLink(*args, tv=None):
 *     return add_link(types.AndLink, args, tv=tv)
 * def OrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.OrLink, args, tv=tv)
 * def NotLink(*args, tv=None):
 */
  __pyx_tuple__78 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(1, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);
  __pyx_codeobj__79 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__78, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_OrLink, 82, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__79)) __PYX_ERR(1, 82, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":84
 * def OrLink(*args, tv=None):
 *     return add_link(types.OrLink, args, tv=tv)
 * def NotLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NotLink, args, tv=tv)
 * def SequentialAndLink(*args, tv=None):
 */
  __pyx_tuple__80 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__80)) __PYX_ERR(1, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__80);
  __Pyx_GIVEREF(__pyx_tuple__80);
  __pyx_codeobj__81 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__80, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_NotLink, 84, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__81)) __PYX_ERR(1, 84, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":86
 * def NotLink(*args, tv=None):
 *     return add_link(types.NotLink, args, tv=tv)
 * def SequentialAndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SequentialAndLink, args, tv=tv)
 * def SequentialOrLink(*args, tv=None):
 */
  __pyx_tuple__82 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__82)) __PYX_ERR(1, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);
  __pyx_codeobj__83 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__82, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SequentialAndLink, 86, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__83)) __PYX_ERR(1, 86, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":88
 * def SequentialAndLink(*args, tv=None):
 *     return add_link(types.SequentialAndLink, args, tv=tv)
 * def SequentialOrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SequentialOrLink, args, tv=tv)
 * def ChoiceLink(*args, tv=None):
 */
  __pyx_tuple__84 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__84)) __PYX_ERR(1, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__84);
  __Pyx_GIVEREF(__pyx_tuple__84);
  __pyx_codeobj__85 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__84, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SequentialOrLink, 88, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__85)) __PYX_ERR(1, 88, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":90
 * def SequentialOrLink(*args, tv=None):
 *     return add_link(types.SequentialOrLink, args, tv=tv)
 * def ChoiceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ChoiceLink, args, tv=tv)
 * def PresentLink(*args, tv=None):
 */
  __pyx_tuple__86 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__86)) __PYX_ERR(1, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__86);
  __Pyx_GIVEREF(__pyx_tuple__86);
  __pyx_codeobj__87 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__86, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ChoiceLink, 90, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__87)) __PYX_ERR(1, 90, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":92
 * def ChoiceLink(*args, tv=None):
 *     return add_link(types.ChoiceLink, args, tv=tv)
 * def PresentLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PresentLink, args, tv=tv)
 * def AbsentLink(*args, tv=None):
 */
  __pyx_tuple__88 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__88)) __PYX_ERR(1, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__88);
  __Pyx_GIVEREF(__pyx_tuple__88);
  __pyx_codeobj__89 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__88, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PresentLink, 92, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__89)) __PYX_ERR(1, 92, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":94
 * def PresentLink(*args, tv=None):
 *     return add_link(types.PresentLink, args, tv=tv)
 * def AbsentLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AbsentLink, args, tv=tv)
 * def AlwaysLink(*args, tv=None):
 */
  __pyx_tuple__90 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__90)) __PYX_ERR(1, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);
  __pyx_codeobj__91 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_AbsentLink, 94, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__91)) __PYX_ERR(1, 94, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":96
 * def AbsentLink(*args, tv=None):
 *     return add_link(types.AbsentLink, args, tv=tv)
 * def AlwaysLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlwaysLink, args, tv=tv)
 * def ContinuationLink(*args, tv=None):
 */
  __pyx_tuple__92 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__92)) __PYX_ERR(1, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__92);
  __Pyx_GIVEREF(__pyx_tuple__92);
  __pyx_codeobj__93 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__92, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_AlwaysLink, 96, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__93)) __PYX_ERR(1, 96, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":98
 * def AlwaysLink(*args, tv=None):
 *     return add_link(types.AlwaysLink, args, tv=tv)
 * def ContinuationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ContinuationLink, args, tv=tv)
 * def EdgeLink(*args, tv=None):
 */
  __pyx_tuple__94 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__94)) __PYX_ERR(1, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__94);
  __Pyx_GIVEREF(__pyx_tuple__94);
  __pyx_codeobj__95 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__94, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ContinuationLink, 98, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__95)) __PYX_ERR(1, 98, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":100
 * def ContinuationLink(*args, tv=None):
 *     return add_link(types.ContinuationLink, args, tv=tv)
 * def EdgeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EdgeLink, args, tv=tv)
 * def LexicalNode(node_name, tv=None):
 */
  __pyx_tuple__96 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__96)) __PYX_ERR(1, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__96);
  __Pyx_GIVEREF(__pyx_tuple__96);
  __pyx_codeobj__97 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__96, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_EdgeLink, 100, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__97)) __PYX_ERR(1, 100, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":102
 * def EdgeLink(*args, tv=None):
 *     return add_link(types.EdgeLink, args, tv=tv)
 * def LexicalNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.LexicalNode, node_name, tv)
 * def AnyNode(node_name, tv=None):
 */
  __pyx_tuple__98 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__98)) __PYX_ERR(1, 102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__98);
  __Pyx_GIVEREF(__pyx_tuple__98);
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__98, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_LexicalNode, 102, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) __PYX_ERR(1, 102, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":104
 * def LexicalNode(node_name, tv=None):
 *     return add_node(types.LexicalNode, node_name, tv)
 * def AnyNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.AnyNode, node_name, tv)
 * def Connector(*args, tv=None):
 */
  __pyx_tuple__100 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__100)) __PYX_ERR(1, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__100);
  __Pyx_GIVEREF(__pyx_tuple__100);
  __pyx_codeobj__101 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__100, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_AnyNode, 104, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__101)) __PYX_ERR(1, 104, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":106
 * def AnyNode(node_name, tv=None):
 *     return add_node(types.AnyNode, node_name, tv)
 * def Connector(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Connector, args, tv=tv)
 * def SexNode(node_name, tv=None):
 */
  __pyx_tuple__102 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__102)) __PYX_ERR(1, 106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__102);
  __Pyx_GIVEREF(__pyx_tuple__102);
  __pyx_codeobj__103 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__102, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_Connector, 106, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__103)) __PYX_ERR(1, 106, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":108
 * def Connector(*args, tv=None):
 *     return add_link(types.Connector, args, tv=tv)
 * def SexNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SexNode, node_name, tv)
 * def ConnectorDir(node_name, tv=None):
 */
  __pyx_tuple__104 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__104)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__104);
  __Pyx_GIVEREF(__pyx_tuple__104);
  __pyx_codeobj__105 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__104, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SexNode, 108, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__105)) __PYX_ERR(1, 108, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":110
 * def SexNode(node_name, tv=None):
 *     return add_node(types.SexNode, node_name, tv)
 * def ConnectorDir(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ConnectorDir, node_name, tv)
 * def BondNode(node_name, tv=None):
 */
  __pyx_tuple__106 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__106)) __PYX_ERR(1, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__106);
  __Pyx_GIVEREF(__pyx_tuple__106);
  __pyx_codeobj__107 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__106, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ConnectorDir, 110, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__107)) __PYX_ERR(1, 110, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":112
 * def ConnectorDir(node_name, tv=None):
 *     return add_node(types.ConnectorDir, node_name, tv)
 * def BondNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.BondNode, node_name, tv)
 * def ConnectorSeq(*args, tv=None):
 */
  __pyx_tuple__108 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__108)) __PYX_ERR(1, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__108);
  __Pyx_GIVEREF(__pyx_tuple__108);
  __pyx_codeobj__109 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__108, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_BondNode, 112, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__109)) __PYX_ERR(1, 112, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":114
 * def BondNode(node_name, tv=None):
 *     return add_node(types.BondNode, node_name, tv)
 * def ConnectorSeq(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorSeq, args, tv=tv)
 * def ConnectorSet(*args, tv=None):
 */
  __pyx_tuple__110 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__110)) __PYX_ERR(1, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__110);
  __Pyx_GIVEREF(__pyx_tuple__110);
  __pyx_codeobj__111 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__110, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ConnectorSeq, 114, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__111)) __PYX_ERR(1, 114, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":116
 * def ConnectorSeq(*args, tv=None):
 *     return add_link(types.ConnectorSeq, args, tv=tv)
 * def ConnectorSet(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorSet, args, tv=tv)
 * def ConnectorChoice(*args, tv=None):
 */
  __pyx_tuple__112 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__112)) __PYX_ERR(1, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__112);
  __Pyx_GIVEREF(__pyx_tuple__112);
  __pyx_codeobj__113 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__112, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ConnectorSet, 116, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__113)) __PYX_ERR(1, 116, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":118
 * def ConnectorSet(*args, tv=None):
 *     return add_link(types.ConnectorSet, args, tv=tv)
 * def ConnectorChoice(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorChoice, args, tv=tv)
 * def Section(*args, tv=None):
 */
  __pyx_tuple__114 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__114)) __PYX_ERR(1, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__114);
  __Pyx_GIVEREF(__pyx_tuple__114);
  __pyx_codeobj__115 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__114, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ConnectorChoice, 118, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__115)) __PYX_ERR(1, 118, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":120
 * def ConnectorChoice(*args, tv=None):
 *     return add_link(types.ConnectorChoice, args, tv=tv)
 * def Section(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Section, args, tv=tv)
 * def ShapeLink(*args, tv=None):
 */
  __pyx_tuple__116 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__116)) __PYX_ERR(1, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__116);
  __Pyx_GIVEREF(__pyx_tuple__116);
  __pyx_codeobj__117 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__116, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_Section, 120, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__117)) __PYX_ERR(1, 120, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":122
 * def Section(*args, tv=None):
 *     return add_link(types.Section, args, tv=tv)
 * def ShapeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ShapeLink, args, tv=tv)
 * def CrossSection(*args, tv=None):
 */
  __pyx_tuple__118 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__118)) __PYX_ERR(1, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__118);
  __Pyx_GIVEREF(__pyx_tuple__118);
  __pyx_codeobj__119 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__118, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ShapeLink, 122, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__119)) __PYX_ERR(1, 122, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":124
 * def ShapeLink(*args, tv=None):
 *     return add_link(types.ShapeLink, args, tv=tv)
 * def CrossSection(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrossSection, args, tv=tv)
 * def ItemNode(node_name, tv=None):
 */
  __pyx_tuple__120 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__120)) __PYX_ERR(1, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__120);
  __Pyx_GIVEREF(__pyx_tuple__120);
  __pyx_codeobj__121 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__120, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_CrossSection, 124, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__121)) __PYX_ERR(1, 124, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":126
 * def CrossSection(*args, tv=None):
 *     return add_link(types.CrossSection, args, tv=tv)
 * def ItemNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ItemNode, node_name, tv)
 * def ItemClassNode(node_name, tv=None):
 */
  __pyx_tuple__122 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__122)) __PYX_ERR(1, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__122);
  __Pyx_GIVEREF(__pyx_tuple__122);
  __pyx_codeobj__123 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__122, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ItemNode, 126, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__123)) __PYX_ERR(1, 126, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":128
 * def ItemNode(node_name, tv=None):
 *     return add_node(types.ItemNode, node_name, tv)
 * def ItemClassNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ItemClassNode, node_name, tv)
 * def TagNode(node_name, tv=None):
 */
  __pyx_tuple__124 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__124)) __PYX_ERR(1, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__124);
  __Pyx_GIVEREF(__pyx_tuple__124);
  __pyx_codeobj__125 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__124, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ItemClassNode, 128, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__125)) __PYX_ERR(1, 128, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":130
 * def ItemClassNode(node_name, tv=None):
 *     return add_node(types.ItemClassNode, node_name, tv)
 * def TagNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TagNode, node_name, tv)
 * def TagLink(*args, tv=None):
 */
  __pyx_tuple__126 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__126)) __PYX_ERR(1, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__126);
  __Pyx_GIVEREF(__pyx_tuple__126);
  __pyx_codeobj__127 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__126, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TagNode, 130, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__127)) __PYX_ERR(1, 130, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":132
 * def TagNode(node_name, tv=None):
 *     return add_node(types.TagNode, node_name, tv)
 * def TagLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TagLink, args, tv=tv)
 * def VariableNode(node_name, tv=None):
 */
  __pyx_tuple__128 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__128)) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__128);
  __Pyx_GIVEREF(__pyx_tuple__128);
  __pyx_codeobj__129 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__128, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TagLink, 132, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__129)) __PYX_ERR(1, 132, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":134
 * def TagLink(*args, tv=None):
 *     return add_link(types.TagLink, args, tv=tv)
 * def VariableNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.VariableNode, node_name, tv)
 * def VariableList(*args, tv=None):
 */
  __pyx_tuple__130 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__130)) __PYX_ERR(1, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__130);
  __Pyx_GIVEREF(__pyx_tuple__130);
  __pyx_codeobj__131 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__130, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_VariableNode, 134, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__131)) __PYX_ERR(1, 134, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":136
 * def VariableNode(node_name, tv=None):
 *     return add_node(types.VariableNode, node_name, tv)
 * def VariableList(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VariableList, args, tv=tv)
 * def VariableSet(*args, tv=None):
 */
  __pyx_tuple__132 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__132)) __PYX_ERR(1, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__132);
  __Pyx_GIVEREF(__pyx_tuple__132);
  __pyx_codeobj__133 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__132, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_VariableList, 136, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__133)) __PYX_ERR(1, 136, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":138
 * def VariableList(*args, tv=None):
 *     return add_link(types.VariableList, args, tv=tv)
 * def VariableSet(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VariableSet, args, tv=tv)
 * def GlobNode(node_name, tv=None):
 */
  __pyx_tuple__134 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__134)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__134);
  __Pyx_GIVEREF(__pyx_tuple__134);
  __pyx_codeobj__135 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__134, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_VariableSet, 138, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__135)) __PYX_ERR(1, 138, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":140
 * def VariableSet(*args, tv=None):
 *     return add_link(types.VariableSet, args, tv=tv)
 * def GlobNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GlobNode, node_name, tv)
 * def QuoteLink(*args, tv=None):
 */
  __pyx_tuple__136 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__136)) __PYX_ERR(1, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__136);
  __Pyx_GIVEREF(__pyx_tuple__136);
  __pyx_codeobj__137 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__136, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_GlobNode, 140, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__137)) __PYX_ERR(1, 140, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":142
 * def GlobNode(node_name, tv=None):
 *     return add_node(types.GlobNode, node_name, tv)
 * def QuoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.QuoteLink, args, tv=tv)
 * def UnquoteLink(*args, tv=None):
 */
  __pyx_tuple__138 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__138)) __PYX_ERR(1, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__138);
  __Pyx_GIVEREF(__pyx_tuple__138);
  __pyx_codeobj__139 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__138, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_QuoteLink, 142, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__139)) __PYX_ERR(1, 142, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":144
 * def QuoteLink(*args, tv=None):
 *     return add_link(types.QuoteLink, args, tv=tv)
 * def UnquoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnquoteLink, args, tv=tv)
 * def DontExecLink(*args, tv=None):
 */
  __pyx_tuple__140 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__140)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__140);
  __Pyx_GIVEREF(__pyx_tuple__140);
  __pyx_codeobj__141 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__140, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_UnquoteLink, 144, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__141)) __PYX_ERR(1, 144, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":146
 * def UnquoteLink(*args, tv=None):
 *     return add_link(types.UnquoteLink, args, tv=tv)
 * def DontExecLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DontExecLink, args, tv=tv)
 * def LocalQuoteLink(*args, tv=None):
 */
  __pyx_tuple__142 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__142)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__142);
  __Pyx_GIVEREF(__pyx_tuple__142);
  __pyx_codeobj__143 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__142, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DontExecLink, 146, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__143)) __PYX_ERR(1, 146, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":148
 * def DontExecLink(*args, tv=None):
 *     return add_link(types.DontExecLink, args, tv=tv)
 * def LocalQuoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LocalQuoteLink, args, tv=tv)
 * def ReplacementLink(*args, tv=None):
 */
  __pyx_tuple__144 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__144)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__144);
  __Pyx_GIVEREF(__pyx_tuple__144);
  __pyx_codeobj__145 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__144, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_LocalQuoteLink, 148, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__145)) __PYX_ERR(1, 148, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":150
 * def LocalQuoteLink(*args, tv=None):
 *     return add_link(types.LocalQuoteLink, args, tv=tv)
 * def ReplacementLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ReplacementLink, args, tv=tv)
 * def FreeLink(*args, tv=None):
 */
  __pyx_tuple__146 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__146)) __PYX_ERR(1, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__146);
  __Pyx_GIVEREF(__pyx_tuple__146);
  __pyx_codeobj__147 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__146, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ReplacementLink, 150, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__147)) __PYX_ERR(1, 150, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":152
 * def ReplacementLink(*args, tv=None):
 *     return add_link(types.ReplacementLink, args, tv=tv)
 * def FreeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FreeLink, args, tv=tv)
 * def DeleteLink(*args, tv=None):
 */
  __pyx_tuple__148 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__148)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__148);
  __Pyx_GIVEREF(__pyx_tuple__148);
  __pyx_codeobj__149 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__148, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_FreeLink, 152, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__149)) __PYX_ERR(1, 152, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":154
 * def FreeLink(*args, tv=None):
 *     return add_link(types.FreeLink, args, tv=tv)
 * def DeleteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DeleteLink, args, tv=tv)
 * def UniqueLink(*args, tv=None):
 */
  __pyx_tuple__150 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__150)) __PYX_ERR(1, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__150);
  __Pyx_GIVEREF(__pyx_tuple__150);
  __pyx_codeobj__151 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__150, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DeleteLink, 154, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__151)) __PYX_ERR(1, 154, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":156
 * def DeleteLink(*args, tv=None):
 *     return add_link(types.DeleteLink, args, tv=tv)
 * def UniqueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UniqueLink, args, tv=tv)
 * def StateLink(*args, tv=None):
 */
  __pyx_tuple__152 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__152)) __PYX_ERR(1, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__152);
  __Pyx_GIVEREF(__pyx_tuple__152);
  __pyx_codeobj__153 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__152, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_UniqueLink, 156, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__153)) __PYX_ERR(1, 156, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":158
 * def UniqueLink(*args, tv=None):
 *     return add_link(types.UniqueLink, args, tv=tv)
 * def StateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StateLink, args, tv=tv)
 * def DefineLink(*args, tv=None):
 */
  __pyx_tuple__154 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__154)) __PYX_ERR(1, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__154);
  __Pyx_GIVEREF(__pyx_tuple__154);
  __pyx_codeobj__155 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__154, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_StateLink, 158, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__155)) __PYX_ERR(1, 158, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":160
 * def StateLink(*args, tv=None):
 *     return add_link(types.StateLink, args, tv=tv)
 * def DefineLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DefineLink, args, tv=tv)
 * def GrantLink(*args, tv=None):
 */
  __pyx_tuple__156 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__156)) __PYX_ERR(1, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__156);
  __Pyx_GIVEREF(__pyx_tuple__156);
  __pyx_codeobj__157 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__156, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DefineLink, 160, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__157)) __PYX_ERR(1, 160, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":162
 * def DefineLink(*args, tv=None):
 *     return add_link(types.DefineLink, args, tv=tv)
 * def GrantLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GrantLink, args, tv=tv)
 * def ScopeLink(*args, tv=None):
 */
  __pyx_tuple__158 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__158)) __PYX_ERR(1, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__158);
  __Pyx_GIVEREF(__pyx_tuple__158);
  __pyx_codeobj__159 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__158, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_GrantLink, 162, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__159)) __PYX_ERR(1, 162, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":164
 * def GrantLink(*args, tv=None):
 *     return add_link(types.GrantLink, args, tv=tv)
 * def ScopeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ScopeLink, args, tv=tv)
 * def RewriteLink(*args, tv=None):
 */
  __pyx_tuple__160 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__160)) __PYX_ERR(1, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__160);
  __Pyx_GIVEREF(__pyx_tuple__160);
  __pyx_codeobj__161 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__160, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ScopeLink, 164, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__161)) __PYX_ERR(1, 164, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":166
 * def ScopeLink(*args, tv=None):
 *     return add_link(types.ScopeLink, args, tv=tv)
 * def RewriteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RewriteLink, args, tv=tv)
 * def PrenexLink(*args, tv=None):
 */
  __pyx_tuple__162 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__162)) __PYX_ERR(1, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__162);
  __Pyx_GIVEREF(__pyx_tuple__162);
  __pyx_codeobj__163 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__162, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_RewriteLink, 166, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__163)) __PYX_ERR(1, 166, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":168
 * def RewriteLink(*args, tv=None):
 *     return add_link(types.RewriteLink, args, tv=tv)
 * def PrenexLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PrenexLink, args, tv=tv)
 * def LambdaLink(*args, tv=None):
 */
  __pyx_tuple__164 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__164)) __PYX_ERR(1, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__164);
  __Pyx_GIVEREF(__pyx_tuple__164);
  __pyx_codeobj__165 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__164, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PrenexLink, 168, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__165)) __PYX_ERR(1, 168, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":170
 * def PrenexLink(*args, tv=None):
 *     return add_link(types.PrenexLink, args, tv=tv)
 * def LambdaLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LambdaLink, args, tv=tv)
 * def PutLink(*args, tv=None):
 */
  __pyx_tuple__166 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__166)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__166);
  __Pyx_GIVEREF(__pyx_tuple__166);
  __pyx_codeobj__167 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__166, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_LambdaLink, 170, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__167)) __PYX_ERR(1, 170, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":172
 * def LambdaLink(*args, tv=None):
 *     return add_link(types.LambdaLink, args, tv=tv)
 * def PutLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PutLink, args, tv=tv)
 * def JoinLink(*args, tv=None):
 */
  __pyx_tuple__168 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__168)) __PYX_ERR(1, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__168);
  __Pyx_GIVEREF(__pyx_tuple__168);
  __pyx_codeobj__169 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__168, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PutLink, 172, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__169)) __PYX_ERR(1, 172, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":174
 * def PutLink(*args, tv=None):
 *     return add_link(types.PutLink, args, tv=tv)
 * def JoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.JoinLink, args, tv=tv)
 * def MinimalJoinLink(*args, tv=None):
 */
  __pyx_tuple__170 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__170)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__170);
  __Pyx_GIVEREF(__pyx_tuple__170);
  __pyx_codeobj__171 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__170, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_JoinLink, 174, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__171)) __PYX_ERR(1, 174, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":176
 * def JoinLink(*args, tv=None):
 *     return add_link(types.JoinLink, args, tv=tv)
 * def MinimalJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinimalJoinLink, args, tv=tv)
 * def UpperSetLink(*args, tv=None):
 */
  __pyx_tuple__172 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__172)) __PYX_ERR(1, 176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__172);
  __Pyx_GIVEREF(__pyx_tuple__172);
  __pyx_codeobj__173 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__172, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_MinimalJoinLink, 176, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__173)) __PYX_ERR(1, 176, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":178
 * def MinimalJoinLink(*args, tv=None):
 *     return add_link(types.MinimalJoinLink, args, tv=tv)
 * def UpperSetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UpperSetLink, args, tv=tv)
 * def MaximalJoinLink(*args, tv=None):
 */
  __pyx_tuple__174 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__174)) __PYX_ERR(1, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__174);
  __Pyx_GIVEREF(__pyx_tuple__174);
  __pyx_codeobj__175 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__174, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_UpperSetLink, 178, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__175)) __PYX_ERR(1, 178, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":180
 * def UpperSetLink(*args, tv=None):
 *     return add_link(types.UpperSetLink, args, tv=tv)
 * def MaximalJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MaximalJoinLink, args, tv=tv)
 * def RuleLink(*args, tv=None):
 */
  __pyx_tuple__176 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__176)) __PYX_ERR(1, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__176);
  __Pyx_GIVEREF(__pyx_tuple__176);
  __pyx_codeobj__177 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__176, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_MaximalJoinLink, 180, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__177)) __PYX_ERR(1, 180, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":182
 * def MaximalJoinLink(*args, tv=None):
 *     return add_link(types.MaximalJoinLink, args, tv=tv)
 * def RuleLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RuleLink, args, tv=tv)
 * def VardeclOfLink(*args, tv=None):
 */
  __pyx_tuple__178 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__178)) __PYX_ERR(1, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__178);
  __Pyx_GIVEREF(__pyx_tuple__178);
  __pyx_codeobj__179 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__178, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_RuleLink, 182, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__179)) __PYX_ERR(1, 182, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":184
 * def RuleLink(*args, tv=None):
 *     return add_link(types.RuleLink, args, tv=tv)
 * def VardeclOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VardeclOfLink, args, tv=tv)
 * def PremiseOfLink(*args, tv=None):
 */
  __pyx_tuple__180 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__180)) __PYX_ERR(1, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__180);
  __Pyx_GIVEREF(__pyx_tuple__180);
  __pyx_codeobj__181 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__180, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_VardeclOfLink, 184, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__181)) __PYX_ERR(1, 184, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":186
 * def VardeclOfLink(*args, tv=None):
 *     return add_link(types.VardeclOfLink, args, tv=tv)
 * def PremiseOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PremiseOfLink, args, tv=tv)
 * def ConclusionOfLink(*args, tv=None):
 */
  __pyx_tuple__182 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__182)) __PYX_ERR(1, 186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__182);
  __Pyx_GIVEREF(__pyx_tuple__182);
  __pyx_codeobj__183 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__182, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PremiseOfLink, 186, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__183)) __PYX_ERR(1, 186, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":188
 * def PremiseOfLink(*args, tv=None):
 *     return add_link(types.PremiseOfLink, args, tv=tv)
 * def ConclusionOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConclusionOfLink, args, tv=tv)
 * def PatternLink(*args, tv=None):
 */
  __pyx_tuple__184 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__184)) __PYX_ERR(1, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__184);
  __Pyx_GIVEREF(__pyx_tuple__184);
  __pyx_codeobj__185 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__184, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ConclusionOfLink, 188, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__185)) __PYX_ERR(1, 188, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":190
 * def ConclusionOfLink(*args, tv=None):
 *     return add_link(types.ConclusionOfLink, args, tv=tv)
 * def PatternLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PatternLink, args, tv=tv)
 * def SatisfyingLink(*args, tv=None):
 */
  __pyx_tuple__186 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__186)) __PYX_ERR(1, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__186);
  __Pyx_GIVEREF(__pyx_tuple__186);
  __pyx_codeobj__187 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__186, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PatternLink, 190, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__187)) __PYX_ERR(1, 190, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":192
 * def PatternLink(*args, tv=None):
 *     return add_link(types.PatternLink, args, tv=tv)
 * def SatisfyingLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SatisfyingLink, args, tv=tv)
 * def MeetLink(*args, tv=None):
 */
  __pyx_tuple__188 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__188)) __PYX_ERR(1, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__188);
  __Pyx_GIVEREF(__pyx_tuple__188);
  __pyx_codeobj__189 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__188, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SatisfyingLink, 192, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__189)) __PYX_ERR(1, 192, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":194
 * def SatisfyingLink(*args, tv=None):
 *     return add_link(types.SatisfyingLink, args, tv=tv)
 * def MeetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MeetLink, args, tv=tv)
 * def GetLink(*args, tv=None):
 */
  __pyx_tuple__190 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__190)) __PYX_ERR(1, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__190);
  __Pyx_GIVEREF(__pyx_tuple__190);
  __pyx_codeobj__191 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__190, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_MeetLink, 194, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__191)) __PYX_ERR(1, 194, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":196
 * def MeetLink(*args, tv=None):
 *     return add_link(types.MeetLink, args, tv=tv)
 * def GetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GetLink, args, tv=tv)
 * def QueryLink(*args, tv=None):
 */
  __pyx_tuple__192 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__192)) __PYX_ERR(1, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__192);
  __Pyx_GIVEREF(__pyx_tuple__192);
  __pyx_codeobj__193 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_GetLink, 196, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__193)) __PYX_ERR(1, 196, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":198
 * def GetLink(*args, tv=None):
 *     return add_link(types.GetLink, args, tv=tv)
 * def QueryLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.QueryLink, args, tv=tv)
 * def BindLink(*args, tv=None):
 */
  __pyx_tuple__194 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__194)) __PYX_ERR(1, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__194);
  __Pyx_GIVEREF(__pyx_tuple__194);
  __pyx_codeobj__195 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__194, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_QueryLink, 198, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__195)) __PYX_ERR(1, 198, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":200
 * def QueryLink(*args, tv=None):
 *     return add_link(types.QueryLink, args, tv=tv)
 * def BindLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BindLink, args, tv=tv)
 * def DualLink(*args, tv=None):
 */
  __pyx_tuple__196 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__196)) __PYX_ERR(1, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__196);
  __Pyx_GIVEREF(__pyx_tuple__196);
  __pyx_codeobj__197 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__196, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_BindLink, 200, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__197)) __PYX_ERR(1, 200, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":202
 * def BindLink(*args, tv=None):
 *     return add_link(types.BindLink, args, tv=tv)
 * def DualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DualLink, args, tv=tv)
 * def EvaluationLink(*args, tv=None):
 */
  __pyx_tuple__198 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__198)) __PYX_ERR(1, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__198);
  __Pyx_GIVEREF(__pyx_tuple__198);
  __pyx_codeobj__199 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__198, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DualLink, 202, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__199)) __PYX_ERR(1, 202, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":204
 * def DualLink(*args, tv=None):
 *     return add_link(types.DualLink, args, tv=tv)
 * def EvaluationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EvaluationLink, args, tv=tv)
 * def TypeNode(node_name, tv=None):
 */
  __pyx_tuple__200 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__200)) __PYX_ERR(1, 204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__200);
  __Pyx_GIVEREF(__pyx_tuple__200);
  __pyx_codeobj__201 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__200, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_EvaluationLink, 204, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__201)) __PYX_ERR(1, 204, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":206
 * def EvaluationLink(*args, tv=None):
 *     return add_link(types.EvaluationLink, args, tv=tv)
 * def TypeNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeNode, node_name, tv)
 * def TypeInhNode(node_name, tv=None):
 */
  __pyx_tuple__202 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__202)) __PYX_ERR(1, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__202);
  __Pyx_GIVEREF(__pyx_tuple__202);
  __pyx_codeobj__203 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__202, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TypeNode, 206, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__203)) __PYX_ERR(1, 206, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":208
 * def TypeNode(node_name, tv=None):
 *     return add_node(types.TypeNode, node_name, tv)
 * def TypeInhNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeInhNode, node_name, tv)
 * def TypeCoInhNode(node_name, tv=None):
 */
  __pyx_tuple__204 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__204)) __PYX_ERR(1, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__204);
  __Pyx_GIVEREF(__pyx_tuple__204);
  __pyx_codeobj__205 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__204, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TypeInhNode, 208, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__205)) __PYX_ERR(1, 208, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":210
 * def TypeInhNode(node_name, tv=None):
 *     return add_node(types.TypeInhNode, node_name, tv)
 * def TypeCoInhNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeCoInhNode, node_name, tv)
 * def DefinedTypeNode(node_name, tv=None):
 */
  __pyx_tuple__206 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__206)) __PYX_ERR(1, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__206);
  __Pyx_GIVEREF(__pyx_tuple__206);
  __pyx_codeobj__207 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__206, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TypeCoInhNode, 210, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__207)) __PYX_ERR(1, 210, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":212
 * def TypeCoInhNode(node_name, tv=None):
 *     return add_node(types.TypeCoInhNode, node_name, tv)
 * def DefinedTypeNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedTypeNode, node_name, tv)
 * def TypeChoice(*args, tv=None):
 */
  __pyx_tuple__208 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__208)) __PYX_ERR(1, 212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__208);
  __Pyx_GIVEREF(__pyx_tuple__208);
  __pyx_codeobj__209 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__208, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DefinedTypeNode, 212, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__209)) __PYX_ERR(1, 212, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":214
 * def DefinedTypeNode(node_name, tv=None):
 *     return add_node(types.DefinedTypeNode, node_name, tv)
 * def TypeChoice(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeChoice, args, tv=tv)
 * def TypeIntersectionLink(*args, tv=None):
 */
  __pyx_tuple__210 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__210)) __PYX_ERR(1, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__210);
  __Pyx_GIVEREF(__pyx_tuple__210);
  __pyx_codeobj__211 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__210, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TypeChoice, 214, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__211)) __PYX_ERR(1, 214, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":216
 * def TypeChoice(*args, tv=None):
 *     return add_link(types.TypeChoice, args, tv=tv)
 * def TypeIntersectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeIntersectionLink, args, tv=tv)
 * def ArrowLink(*args, tv=None):
 */
  __pyx_tuple__212 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__212)) __PYX_ERR(1, 216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__212);
  __Pyx_GIVEREF(__pyx_tuple__212);
  __pyx_codeobj__213 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__212, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TypeIntersectionLink, 216, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__213)) __PYX_ERR(1, 216, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":218
 * def TypeIntersectionLink(*args, tv=None):
 *     return add_link(types.TypeIntersectionLink, args, tv=tv)
 * def ArrowLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ArrowLink, args, tv=tv)
 * def SignatureLink(*args, tv=None):
 */
  __pyx_tuple__214 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__214)) __PYX_ERR(1, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__214);
  __Pyx_GIVEREF(__pyx_tuple__214);
  __pyx_codeobj__215 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__214, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ArrowLink, 218, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__215)) __PYX_ERR(1, 218, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":220
 * def ArrowLink(*args, tv=None):
 *     return add_link(types.ArrowLink, args, tv=tv)
 * def SignatureLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SignatureLink, args, tv=tv)
 * def SignNode(node_name, tv=None):
 */
  __pyx_tuple__216 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__216)) __PYX_ERR(1, 220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__216);
  __Pyx_GIVEREF(__pyx_tuple__216);
  __pyx_codeobj__217 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__216, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SignatureLink, 220, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__217)) __PYX_ERR(1, 220, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":222
 * def SignatureLink(*args, tv=None):
 *     return add_link(types.SignatureLink, args, tv=tv)
 * def SignNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SignNode, node_name, tv)
 * def LinkSignatureLink(*args, tv=None):
 */
  __pyx_tuple__218 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__218)) __PYX_ERR(1, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__218);
  __Pyx_GIVEREF(__pyx_tuple__218);
  __pyx_codeobj__219 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__218, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SignNode, 222, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__219)) __PYX_ERR(1, 222, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":224
 * def SignNode(node_name, tv=None):
 *     return add_node(types.SignNode, node_name, tv)
 * def LinkSignatureLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LinkSignatureLink, args, tv=tv)
 * def TypedVariableLink(*args, tv=None):
 */
  __pyx_tuple__220 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__220)) __PYX_ERR(1, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__220);
  __Pyx_GIVEREF(__pyx_tuple__220);
  __pyx_codeobj__221 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__220, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_LinkSignatureLink, 224, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__221)) __PYX_ERR(1, 224, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":226
 * def LinkSignatureLink(*args, tv=None):
 *     return add_link(types.LinkSignatureLink, args, tv=tv)
 * def TypedVariableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypedVariableLink, args, tv=tv)
 * def TypedAtomLink(*args, tv=None):
 */
  __pyx_tuple__222 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__222)) __PYX_ERR(1, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__222);
  __Pyx_GIVEREF(__pyx_tuple__222);
  __pyx_codeobj__223 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__222, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TypedVariableLink, 226, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__223)) __PYX_ERR(1, 226, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":228
 * def TypedVariableLink(*args, tv=None):
 *     return add_link(types.TypedVariableLink, args, tv=tv)
 * def TypedAtomLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypedAtomLink, args, tv=tv)
 * def IntervalLink(*args, tv=None):
 */
  __pyx_tuple__224 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__224)) __PYX_ERR(1, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__224);
  __Pyx_GIVEREF(__pyx_tuple__224);
  __pyx_codeobj__225 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__224, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TypedAtomLink, 228, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__225)) __PYX_ERR(1, 228, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":230
 * def TypedAtomLink(*args, tv=None):
 *     return add_link(types.TypedAtomLink, args, tv=tv)
 * def IntervalLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IntervalLink, args, tv=tv)
 * def AnchorNode(node_name, tv=None):
 */
  __pyx_tuple__226 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__226)) __PYX_ERR(1, 230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__226);
  __Pyx_GIVEREF(__pyx_tuple__226);
  __pyx_codeobj__227 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__226, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_IntervalLink, 230, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__227)) __PYX_ERR(1, 230, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":232
 * def IntervalLink(*args, tv=None):
 *     return add_link(types.IntervalLink, args, tv=tv)
 * def AnchorNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.AnchorNode, node_name, tv)
 * def SimilarityLink(*args, tv=None):
 */
  __pyx_tuple__228 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__228)) __PYX_ERR(1, 232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__228);
  __Pyx_GIVEREF(__pyx_tuple__228);
  __pyx_codeobj__229 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__228, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_AnchorNode, 232, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__229)) __PYX_ERR(1, 232, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":234
 * def AnchorNode(node_name, tv=None):
 *     return add_node(types.AnchorNode, node_name, tv)
 * def SimilarityLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SimilarityLink, args, tv=tv)
 * def VirtualLink(*args, tv=None):
 */
  __pyx_tuple__230 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__230)) __PYX_ERR(1, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__230);
  __Pyx_GIVEREF(__pyx_tuple__230);
  __pyx_codeobj__231 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__230, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SimilarityLink, 234, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__231)) __PYX_ERR(1, 234, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":236
 * def SimilarityLink(*args, tv=None):
 *     return add_link(types.SimilarityLink, args, tv=tv)
 * def VirtualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VirtualLink, args, tv=tv)
 * def GreaterThanLink(*args, tv=None):
 */
  __pyx_tuple__232 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__232)) __PYX_ERR(1, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__232);
  __Pyx_GIVEREF(__pyx_tuple__232);
  __pyx_codeobj__233 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__232, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_VirtualLink, 236, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__233)) __PYX_ERR(1, 236, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":238
 * def VirtualLink(*args, tv=None):
 *     return add_link(types.VirtualLink, args, tv=tv)
 * def GreaterThanLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GreaterThanLink, args, tv=tv)
 * def LessThanLink(*args, tv=None):
 */
  __pyx_tuple__234 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__234)) __PYX_ERR(1, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__234);
  __Pyx_GIVEREF(__pyx_tuple__234);
  __pyx_codeobj__235 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__234, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_GreaterThanLink, 238, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__235)) __PYX_ERR(1, 238, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":240
 * def GreaterThanLink(*args, tv=None):
 *     return add_link(types.GreaterThanLink, args, tv=tv)
 * def LessThanLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LessThanLink, args, tv=tv)
 * def IsClosedLink(*args, tv=None):
 */
  __pyx_tuple__236 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__236)) __PYX_ERR(1, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__236);
  __Pyx_GIVEREF(__pyx_tuple__236);
  __pyx_codeobj__237 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__236, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_LessThanLink, 240, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__237)) __PYX_ERR(1, 240, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":242
 * def LessThanLink(*args, tv=None):
 *     return add_link(types.LessThanLink, args, tv=tv)
 * def IsClosedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsClosedLink, args, tv=tv)
 * def IsTrueLink(*args, tv=None):
 */
  __pyx_tuple__238 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__238)) __PYX_ERR(1, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__238);
  __Pyx_GIVEREF(__pyx_tuple__238);
  __pyx_codeobj__239 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__238, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_IsClosedLink, 242, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__239)) __PYX_ERR(1, 242, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":244
 * def IsClosedLink(*args, tv=None):
 *     return add_link(types.IsClosedLink, args, tv=tv)
 * def IsTrueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsTrueLink, args, tv=tv)
 * def IsFalseLink(*args, tv=None):
 */
  __pyx_tuple__240 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__240)) __PYX_ERR(1, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__240);
  __Pyx_GIVEREF(__pyx_tuple__240);
  __pyx_codeobj__241 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__240, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_IsTrueLink, 244, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__241)) __PYX_ERR(1, 244, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":246
 * def IsTrueLink(*args, tv=None):
 *     return add_link(types.IsTrueLink, args, tv=tv)
 * def IsFalseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsFalseLink, args, tv=tv)
 * def IdenticalLink(*args, tv=None):
 */
  __pyx_tuple__242 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__242)) __PYX_ERR(1, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__242);
  __Pyx_GIVEREF(__pyx_tuple__242);
  __pyx_codeobj__243 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__242, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_IsFalseLink, 246, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__243)) __PYX_ERR(1, 246, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":248
 * def IsFalseLink(*args, tv=None):
 *     return add_link(types.IsFalseLink, args, tv=tv)
 * def IdenticalLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IdenticalLink, args, tv=tv)
 * def EqualLink(*args, tv=None):
 */
  __pyx_tuple__244 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__244)) __PYX_ERR(1, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__244);
  __Pyx_GIVEREF(__pyx_tuple__244);
  __pyx_codeobj__245 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__244, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_IdenticalLink, 248, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__245)) __PYX_ERR(1, 248, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":250
 * def IdenticalLink(*args, tv=None):
 *     return add_link(types.IdenticalLink, args, tv=tv)
 * def EqualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EqualLink, args, tv=tv)
 * def AlphaEqualLink(*args, tv=None):
 */
  __pyx_tuple__246 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__246)) __PYX_ERR(1, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__246);
  __Pyx_GIVEREF(__pyx_tuple__246);
  __pyx_codeobj__247 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__246, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_EqualLink, 250, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__247)) __PYX_ERR(1, 250, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":252
 * def EqualLink(*args, tv=None):
 *     return add_link(types.EqualLink, args, tv=tv)
 * def AlphaEqualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlphaEqualLink, args, tv=tv)
 * def ExclusiveLink(*args, tv=None):
 */
  __pyx_tuple__248 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__248)) __PYX_ERR(1, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__248);
  __Pyx_GIVEREF(__pyx_tuple__248);
  __pyx_codeobj__249 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__248, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_AlphaEqualLink, 252, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__249)) __PYX_ERR(1, 252, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":254
 * def AlphaEqualLink(*args, tv=None):
 *     return add_link(types.AlphaEqualLink, args, tv=tv)
 * def ExclusiveLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExclusiveLink, args, tv=tv)
 * def SatisfactionLink(*args, tv=None):
 */
  __pyx_tuple__250 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__250)) __PYX_ERR(1, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__250);
  __Pyx_GIVEREF(__pyx_tuple__250);
  __pyx_codeobj__251 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__250, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ExclusiveLink, 254, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__251)) __PYX_ERR(1, 254, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":256
 * def ExclusiveLink(*args, tv=None):
 *     return add_link(types.ExclusiveLink, args, tv=tv)
 * def SatisfactionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SatisfactionLink, args, tv=tv)
 * def FunctionLink(*args, tv=None):
 */
  __pyx_tuple__252 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__252)) __PYX_ERR(1, 256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__252);
  __Pyx_GIVEREF(__pyx_tuple__252);
  __pyx_codeobj__253 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__252, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SatisfactionLink, 256, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__253)) __PYX_ERR(1, 256, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":258
 * def SatisfactionLink(*args, tv=None):
 *     return add_link(types.SatisfactionLink, args, tv=tv)
 * def FunctionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FunctionLink, args, tv=tv)
 * def BoolOpLink(*args, tv=None):
 */
  __pyx_tuple__254 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__254)) __PYX_ERR(1, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__254);
  __Pyx_GIVEREF(__pyx_tuple__254);
  __pyx_codeobj__255 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__254, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_FunctionLink, 258, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__255)) __PYX_ERR(1, 258, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":260
 * def FunctionLink(*args, tv=None):
 *     return add_link(types.FunctionLink, args, tv=tv)
 * def BoolOpLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolOpLink, args, tv=tv)
 * def BoolAndLink(*args, tv=None):
 */
  __pyx_tuple__256 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__256)) __PYX_ERR(1, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__256);
  __Pyx_GIVEREF(__pyx_tuple__256);
  __pyx_codeobj__257 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__256, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_BoolOpLink, 260, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__257)) __PYX_ERR(1, 260, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":262
 * def BoolOpLink(*args, tv=None):
 *     return add_link(types.BoolOpLink, args, tv=tv)
 * def BoolAndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolAndLink, args, tv=tv)
 * def BoolOrLink(*args, tv=None):
 */
  __pyx_tuple__258 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__258)) __PYX_ERR(1, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__258);
  __Pyx_GIVEREF(__pyx_tuple__258);
  __pyx_codeobj__259 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__258, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_BoolAndLink, 262, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__259)) __PYX_ERR(1, 262, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":264
 * def BoolAndLink(*args, tv=None):
 *     return add_link(types.BoolAndLink, args, tv=tv)
 * def BoolOrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolOrLink, args, tv=tv)
 * def BoolNotLink(*args, tv=None):
 */
  __pyx_tuple__260 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__260)) __PYX_ERR(1, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__260);
  __Pyx_GIVEREF(__pyx_tuple__260);
  __pyx_codeobj__261 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__260, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_BoolOrLink, 264, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__261)) __PYX_ERR(1, 264, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":266
 * def BoolOrLink(*args, tv=None):
 *     return add_link(types.BoolOrLink, args, tv=tv)
 * def BoolNotLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolNotLink, args, tv=tv)
 * def NumericFunctionLink(*args, tv=None):
 */
  __pyx_tuple__262 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__262)) __PYX_ERR(1, 266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__262);
  __Pyx_GIVEREF(__pyx_tuple__262);
  __pyx_codeobj__263 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__262, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_BoolNotLink, 266, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__263)) __PYX_ERR(1, 266, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":268
 * def BoolNotLink(*args, tv=None):
 *     return add_link(types.BoolNotLink, args, tv=tv)
 * def NumericFunctionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericFunctionLink, args, tv=tv)
 * def FoldLink(*args, tv=None):
 */
  __pyx_tuple__264 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__264)) __PYX_ERR(1, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__264);
  __Pyx_GIVEREF(__pyx_tuple__264);
  __pyx_codeobj__265 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__264, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_NumericFunctionLink, 268, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__265)) __PYX_ERR(1, 268, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":270
 * def NumericFunctionLink(*args, tv=None):
 *     return add_link(types.NumericFunctionLink, args, tv=tv)
 * def FoldLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FoldLink, args, tv=tv)
 * def ArithmeticLink(*args, tv=None):
 */
  __pyx_tuple__266 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__266)) __PYX_ERR(1, 270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__266);
  __Pyx_GIVEREF(__pyx_tuple__266);
  __pyx_codeobj__267 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__266, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_FoldLink, 270, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__267)) __PYX_ERR(1, 270, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":272
 * def FoldLink(*args, tv=None):
 *     return add_link(types.FoldLink, args, tv=tv)
 * def ArithmeticLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ArithmeticLink, args, tv=tv)
 * def PlusLink(*args, tv=None):
 */
  __pyx_tuple__268 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__268)) __PYX_ERR(1, 272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__268);
  __Pyx_GIVEREF(__pyx_tuple__268);
  __pyx_codeobj__269 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__268, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ArithmeticLink, 272, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__269)) __PYX_ERR(1, 272, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":274
 * def ArithmeticLink(*args, tv=None):
 *     return add_link(types.ArithmeticLink, args, tv=tv)
 * def PlusLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PlusLink, args, tv=tv)
 * def MinusLink(*args, tv=None):
 */
  __pyx_tuple__270 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__270)) __PYX_ERR(1, 274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__270);
  __Pyx_GIVEREF(__pyx_tuple__270);
  __pyx_codeobj__271 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__270, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PlusLink, 274, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__271)) __PYX_ERR(1, 274, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":276
 * def PlusLink(*args, tv=None):
 *     return add_link(types.PlusLink, args, tv=tv)
 * def MinusLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinusLink, args, tv=tv)
 * def TimesLink(*args, tv=None):
 */
  __pyx_tuple__272 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__272)) __PYX_ERR(1, 276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__272);
  __Pyx_GIVEREF(__pyx_tuple__272);
  __pyx_codeobj__273 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__272, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_MinusLink, 276, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__273)) __PYX_ERR(1, 276, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":278
 * def MinusLink(*args, tv=None):
 *     return add_link(types.MinusLink, args, tv=tv)
 * def TimesLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TimesLink, args, tv=tv)
 * def DivideLink(*args, tv=None):
 */
  __pyx_tuple__274 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__274)) __PYX_ERR(1, 278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__274);
  __Pyx_GIVEREF(__pyx_tuple__274);
  __pyx_codeobj__275 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__274, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TimesLink, 278, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__275)) __PYX_ERR(1, 278, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":280
 * def TimesLink(*args, tv=None):
 *     return add_link(types.TimesLink, args, tv=tv)
 * def DivideLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DivideLink, args, tv=tv)
 * def MinLink(*args, tv=None):
 */
  __pyx_tuple__276 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__276)) __PYX_ERR(1, 280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__276);
  __Pyx_GIVEREF(__pyx_tuple__276);
  __pyx_codeobj__277 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__276, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DivideLink, 280, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__277)) __PYX_ERR(1, 280, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":282
 * def DivideLink(*args, tv=None):
 *     return add_link(types.DivideLink, args, tv=tv)
 * def MinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinLink, args, tv=tv)
 * def MaxLink(*args, tv=None):
 */
  __pyx_tuple__278 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__278)) __PYX_ERR(1, 282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__278);
  __Pyx_GIVEREF(__pyx_tuple__278);
  __pyx_codeobj__279 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__278, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_MinLink, 282, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__279)) __PYX_ERR(1, 282, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":284
 * def MinLink(*args, tv=None):
 *     return add_link(types.MinLink, args, tv=tv)
 * def MaxLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MaxLink, args, tv=tv)
 * def FloorLink(*args, tv=None):
 */
  __pyx_tuple__280 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__280)) __PYX_ERR(1, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__280);
  __Pyx_GIVEREF(__pyx_tuple__280);
  __pyx_codeobj__281 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__280, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_MaxLink, 284, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__281)) __PYX_ERR(1, 284, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":286
 * def MaxLink(*args, tv=None):
 *     return add_link(types.MaxLink, args, tv=tv)
 * def FloorLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FloorLink, args, tv=tv)
 * def HeavisideLink(*args, tv=None):
 */
  __pyx_tuple__282 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__282)) __PYX_ERR(1, 286, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__282);
  __Pyx_GIVEREF(__pyx_tuple__282);
  __pyx_codeobj__283 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__282, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_FloorLink, 286, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__283)) __PYX_ERR(1, 286, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":288
 * def FloorLink(*args, tv=None):
 *     return add_link(types.FloorLink, args, tv=tv)
 * def HeavisideLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.HeavisideLink, args, tv=tv)
 * def ImpulseLink(*args, tv=None):
 */
  __pyx_tuple__284 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__284)) __PYX_ERR(1, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__284);
  __Pyx_GIVEREF(__pyx_tuple__284);
  __pyx_codeobj__285 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__284, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_HeavisideLink, 288, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__285)) __PYX_ERR(1, 288, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":290
 * def HeavisideLink(*args, tv=None):
 *     return add_link(types.HeavisideLink, args, tv=tv)
 * def ImpulseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ImpulseLink, args, tv=tv)
 * def Log2Link(*args, tv=None):
 */
  __pyx_tuple__286 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__286)) __PYX_ERR(1, 290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__286);
  __Pyx_GIVEREF(__pyx_tuple__286);
  __pyx_codeobj__287 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__286, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ImpulseLink, 290, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__287)) __PYX_ERR(1, 290, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":292
 * def ImpulseLink(*args, tv=None):
 *     return add_link(types.ImpulseLink, args, tv=tv)
 * def Log2Link(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Log2Link, args, tv=tv)
 * def PowLink(*args, tv=None):
 */
  __pyx_tuple__288 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__288)) __PYX_ERR(1, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__288);
  __Pyx_GIVEREF(__pyx_tuple__288);
  __pyx_codeobj__289 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__288, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_Log2Link, 292, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__289)) __PYX_ERR(1, 292, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":294
 * def Log2Link(*args, tv=None):
 *     return add_link(types.Log2Link, args, tv=tv)
 * def PowLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PowLink, args, tv=tv)
 * def RandomNumberLink(*args, tv=None):
 */
  __pyx_tuple__290 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__290)) __PYX_ERR(1, 294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__290);
  __Pyx_GIVEREF(__pyx_tuple__290);
  __pyx_codeobj__291 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__290, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PowLink, 294, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__291)) __PYX_ERR(1, 294, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":296
 * def PowLink(*args, tv=None):
 *     return add_link(types.PowLink, args, tv=tv)
 * def RandomNumberLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RandomNumberLink, args, tv=tv)
 * def SineLink(*args, tv=None):
 */
  __pyx_tuple__292 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__292)) __PYX_ERR(1, 296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__292);
  __Pyx_GIVEREF(__pyx_tuple__292);
  __pyx_codeobj__293 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__292, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_RandomNumberLink, 296, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__293)) __PYX_ERR(1, 296, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":298
 * def RandomNumberLink(*args, tv=None):
 *     return add_link(types.RandomNumberLink, args, tv=tv)
 * def SineLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SineLink, args, tv=tv)
 * def AccumulateLink(*args, tv=None):
 */
  __pyx_tuple__294 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__294)) __PYX_ERR(1, 298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__294);
  __Pyx_GIVEREF(__pyx_tuple__294);
  __pyx_codeobj__295 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__294, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SineLink, 298, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__295)) __PYX_ERR(1, 298, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":300
 * def SineLink(*args, tv=None):
 *     return add_link(types.SineLink, args, tv=tv)
 * def AccumulateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AccumulateLink, args, tv=tv)
 * def DecimateLink(*args, tv=None):
 */
  __pyx_tuple__296 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__296)) __PYX_ERR(1, 300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__296);
  __Pyx_GIVEREF(__pyx_tuple__296);
  __pyx_codeobj__297 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__296, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_AccumulateLink, 300, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__297)) __PYX_ERR(1, 300, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":302
 * def AccumulateLink(*args, tv=None):
 *     return add_link(types.AccumulateLink, args, tv=tv)
 * def DecimateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DecimateLink, args, tv=tv)
 * def ElementOfLink(*args, tv=None):
 */
  __pyx_tuple__298 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__298)) __PYX_ERR(1, 302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__298);
  __Pyx_GIVEREF(__pyx_tuple__298);
  __pyx_codeobj__299 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__298, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DecimateLink, 302, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__299)) __PYX_ERR(1, 302, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":304
 * def DecimateLink(*args, tv=None):
 *     return add_link(types.DecimateLink, args, tv=tv)
 * def ElementOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ElementOfLink, args, tv=tv)
 * def NumberOfLink(*args, tv=None):
 */
  __pyx_tuple__300 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__300)) __PYX_ERR(1, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__300);
  __Pyx_GIVEREF(__pyx_tuple__300);
  __pyx_codeobj__301 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__300, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ElementOfLink, 304, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__301)) __PYX_ERR(1, 304, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":306
 * def ElementOfLink(*args, tv=None):
 *     return add_link(types.ElementOfLink, args, tv=tv)
 * def NumberOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumberOfLink, args, tv=tv)
 * def TimeLink(*args, tv=None):
 */
  __pyx_tuple__302 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__302)) __PYX_ERR(1, 306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__302);
  __Pyx_GIVEREF(__pyx_tuple__302);
  __pyx_codeobj__303 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__302, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_NumberOfLink, 306, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__303)) __PYX_ERR(1, 306, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":308
 * def NumberOfLink(*args, tv=None):
 *     return add_link(types.NumberOfLink, args, tv=tv)
 * def TimeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TimeLink, args, tv=tv)
 * def ValueOfLink(*args, tv=None):
 */
  __pyx_tuple__304 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__304)) __PYX_ERR(1, 308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__304);
  __Pyx_GIVEREF(__pyx_tuple__304);
  __pyx_codeobj__305 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__304, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TimeLink, 308, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__305)) __PYX_ERR(1, 308, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":310
 * def TimeLink(*args, tv=None):
 *     return add_link(types.TimeLink, args, tv=tv)
 * def ValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValueOfLink, args, tv=tv)
 * def BoolValueOfLink(*args, tv=None):
 */
  __pyx_tuple__306 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__306)) __PYX_ERR(1, 310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__306);
  __Pyx_GIVEREF(__pyx_tuple__306);
  __pyx_codeobj__307 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__306, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ValueOfLink, 310, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__307)) __PYX_ERR(1, 310, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":312
 * def ValueOfLink(*args, tv=None):
 *     return add_link(types.ValueOfLink, args, tv=tv)
 * def BoolValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolValueOfLink, args, tv=tv)
 * def FloatValueOfLink(*args, tv=None):
 */
  __pyx_tuple__308 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__308)) __PYX_ERR(1, 312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__308);
  __Pyx_GIVEREF(__pyx_tuple__308);
  __pyx_codeobj__309 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__308, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_BoolValueOfLink, 312, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__309)) __PYX_ERR(1, 312, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":314
 * def BoolValueOfLink(*args, tv=None):
 *     return add_link(types.BoolValueOfLink, args, tv=tv)
 * def FloatValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FloatValueOfLink, args, tv=tv)
 * def StreamValueOfLink(*args, tv=None):
 */
  __pyx_tuple__310 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__310)) __PYX_ERR(1, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__310);
  __Pyx_GIVEREF(__pyx_tuple__310);
  __pyx_codeobj__311 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__310, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_FloatValueOfLink, 314, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__311)) __PYX_ERR(1, 314, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":316
 * def FloatValueOfLink(*args, tv=None):
 *     return add_link(types.FloatValueOfLink, args, tv=tv)
 * def StreamValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StreamValueOfLink, args, tv=tv)
 * def TruthValueOfLink(*args, tv=None):
 */
  __pyx_tuple__312 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__312)) __PYX_ERR(1, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__312);
  __Pyx_GIVEREF(__pyx_tuple__312);
  __pyx_codeobj__313 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__312, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_StreamValueOfLink, 316, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__313)) __PYX_ERR(1, 316, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":318
 * def StreamValueOfLink(*args, tv=None):
 *     return add_link(types.StreamValueOfLink, args, tv=tv)
 * def TruthValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TruthValueOfLink, args, tv=tv)
 * def StrengthOfLink(*args, tv=None):
 */
  __pyx_tuple__314 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__314)) __PYX_ERR(1, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__314);
  __Pyx_GIVEREF(__pyx_tuple__314);
  __pyx_codeobj__315 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__314, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TruthValueOfLink, 318, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__315)) __PYX_ERR(1, 318, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":320
 * def TruthValueOfLink(*args, tv=None):
 *     return add_link(types.TruthValueOfLink, args, tv=tv)
 * def StrengthOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StrengthOfLink, args, tv=tv)
 * def ConfidenceOfLink(*args, tv=None):
 */
  __pyx_tuple__316 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__316)) __PYX_ERR(1, 320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__316);
  __Pyx_GIVEREF(__pyx_tuple__316);
  __pyx_codeobj__317 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__316, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_StrengthOfLink, 320, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__317)) __PYX_ERR(1, 320, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":322
 * def StrengthOfLink(*args, tv=None):
 *     return add_link(types.StrengthOfLink, args, tv=tv)
 * def ConfidenceOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConfidenceOfLink, args, tv=tv)
 * def CountOfLink(*args, tv=None):
 */
  __pyx_tuple__318 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__318)) __PYX_ERR(1, 322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__318);
  __Pyx_GIVEREF(__pyx_tuple__318);
  __pyx_codeobj__319 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__318, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ConfidenceOfLink, 322, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__319)) __PYX_ERR(1, 322, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":324
 * def ConfidenceOfLink(*args, tv=None):
 *     return add_link(types.ConfidenceOfLink, args, tv=tv)
 * def CountOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CountOfLink, args, tv=tv)
 * def SizeOfLink(*args, tv=None):
 */
  __pyx_tuple__320 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__320)) __PYX_ERR(1, 324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__320);
  __Pyx_GIVEREF(__pyx_tuple__320);
  __pyx_codeobj__321 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__320, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_CountOfLink, 324, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__321)) __PYX_ERR(1, 324, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":326
 * def CountOfLink(*args, tv=None):
 *     return add_link(types.CountOfLink, args, tv=tv)
 * def SizeOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SizeOfLink, args, tv=tv)
 * def TypeOfLink(*args, tv=None):
 */
  __pyx_tuple__322 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__322)) __PYX_ERR(1, 326, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__322);
  __Pyx_GIVEREF(__pyx_tuple__322);
  __pyx_codeobj__323 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__322, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SizeOfLink, 326, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__323)) __PYX_ERR(1, 326, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":328
 * def SizeOfLink(*args, tv=None):
 *     return add_link(types.SizeOfLink, args, tv=tv)
 * def TypeOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeOfLink, args, tv=tv)
 * def IncomingOfLink(*args, tv=None):
 */
  __pyx_tuple__324 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__324)) __PYX_ERR(1, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__324);
  __Pyx_GIVEREF(__pyx_tuple__324);
  __pyx_codeobj__325 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__324, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_TypeOfLink, 328, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__325)) __PYX_ERR(1, 328, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":330
 * def TypeOfLink(*args, tv=None):
 *     return add_link(types.TypeOfLink, args, tv=tv)
 * def IncomingOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IncomingOfLink, args, tv=tv)
 * def CollectionOfLink(*args, tv=None):
 */
  __pyx_tuple__326 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__326)) __PYX_ERR(1, 330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__326);
  __Pyx_GIVEREF(__pyx_tuple__326);
  __pyx_codeobj__327 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__326, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_IncomingOfLink, 330, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__327)) __PYX_ERR(1, 330, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":332
 * def IncomingOfLink(*args, tv=None):
 *     return add_link(types.IncomingOfLink, args, tv=tv)
 * def CollectionOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CollectionOfLink, args, tv=tv)
 * def SetValueLink(*args, tv=None):
 */
  __pyx_tuple__328 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__328)) __PYX_ERR(1, 332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__328);
  __Pyx_GIVEREF(__pyx_tuple__328);
  __pyx_codeobj__329 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__328, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_CollectionOfLink, 332, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__329)) __PYX_ERR(1, 332, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":334
 * def CollectionOfLink(*args, tv=None):
 *     return add_link(types.CollectionOfLink, args, tv=tv)
 * def SetValueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetValueLink, args, tv=tv)
 * def SetTVLink(*args, tv=None):
 */
  __pyx_tuple__330 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__330)) __PYX_ERR(1, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__330);
  __Pyx_GIVEREF(__pyx_tuple__330);
  __pyx_codeobj__331 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__330, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SetValueLink, 334, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__331)) __PYX_ERR(1, 334, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":336
 * def SetValueLink(*args, tv=None):
 *     return add_link(types.SetValueLink, args, tv=tv)
 * def SetTVLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetTVLink, args, tv=tv)
 * def ValueShimLink(*args, tv=None):
 */
  __pyx_tuple__332 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__332)) __PYX_ERR(1, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__332);
  __Pyx_GIVEREF(__pyx_tuple__332);
  __pyx_codeobj__333 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__332, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SetTVLink, 336, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__333)) __PYX_ERR(1, 336, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":338
 * def SetTVLink(*args, tv=None):
 *     return add_link(types.SetTVLink, args, tv=tv)
 * def ValueShimLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValueShimLink, args, tv=tv)
 * def PromiseLink(*args, tv=None):
 */
  __pyx_tuple__334 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__334)) __PYX_ERR(1, 338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__334);
  __Pyx_GIVEREF(__pyx_tuple__334);
  __pyx_codeobj__335 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__334, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ValueShimLink, 338, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__335)) __PYX_ERR(1, 338, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":340
 * def ValueShimLink(*args, tv=None):
 *     return add_link(types.ValueShimLink, args, tv=tv)
 * def PromiseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PromiseLink, args, tv=tv)
 * def PromisePredicateLink(*args, tv=None):
 */
  __pyx_tuple__336 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__336)) __PYX_ERR(1, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__336);
  __Pyx_GIVEREF(__pyx_tuple__336);
  __pyx_codeobj__337 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__336, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PromiseLink, 340, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__337)) __PYX_ERR(1, 340, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":342
 * def PromiseLink(*args, tv=None):
 *     return add_link(types.PromiseLink, args, tv=tv)
 * def PromisePredicateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PromisePredicateLink, args, tv=tv)
 * def FormulaPredicateLink(*args, tv=None):
 */
  __pyx_tuple__338 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__338)) __PYX_ERR(1, 342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__338);
  __Pyx_GIVEREF(__pyx_tuple__338);
  __pyx_codeobj__339 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__338, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PromisePredicateLink, 342, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__339)) __PYX_ERR(1, 342, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":344
 * def PromisePredicateLink(*args, tv=None):
 *     return add_link(types.PromisePredicateLink, args, tv=tv)
 * def FormulaPredicateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FormulaPredicateLink, args, tv=tv)
 * def FilterLink(*args, tv=None):
 */
  __pyx_tuple__340 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__340)) __PYX_ERR(1, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__340);
  __Pyx_GIVEREF(__pyx_tuple__340);
  __pyx_codeobj__341 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__340, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_FormulaPredicateLink, 344, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__341)) __PYX_ERR(1, 344, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":346
 * def FormulaPredicateLink(*args, tv=None):
 *     return add_link(types.FormulaPredicateLink, args, tv=tv)
 * def FilterLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FilterLink, args, tv=tv)
 * def ExecutionOutputLink(*args, tv=None):
 */
  __pyx_tuple__342 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__342)) __PYX_ERR(1, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__342);
  __Pyx_GIVEREF(__pyx_tuple__342);
  __pyx_codeobj__343 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__342, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_FilterLink, 346, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__343)) __PYX_ERR(1, 346, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":348
 * def FilterLink(*args, tv=None):
 *     return add_link(types.FilterLink, args, tv=tv)
 * def ExecutionOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutionOutputLink, args, tv=tv)
 * def RandomChoiceLink(*args, tv=None):
 */
  __pyx_tuple__344 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__344)) __PYX_ERR(1, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__344);
  __Pyx_GIVEREF(__pyx_tuple__344);
  __pyx_codeobj__345 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__344, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ExecutionOutputLink, 348, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__345)) __PYX_ERR(1, 348, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":350
 * def ExecutionOutputLink(*args, tv=None):
 *     return add_link(types.ExecutionOutputLink, args, tv=tv)
 * def RandomChoiceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RandomChoiceLink, args, tv=tv)
 * def CondLink(*args, tv=None):
 */
  __pyx_tuple__346 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__346)) __PYX_ERR(1, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__346);
  __Pyx_GIVEREF(__pyx_tuple__346);
  __pyx_codeobj__347 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__346, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_RandomChoiceLink, 350, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__347)) __PYX_ERR(1, 350, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":352
 * def RandomChoiceLink(*args, tv=None):
 *     return add_link(types.RandomChoiceLink, args, tv=tv)
 * def CondLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CondLink, args, tv=tv)
 * def SleepLink(*args, tv=None):
 */
  __pyx_tuple__348 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__348)) __PYX_ERR(1, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__348);
  __Pyx_GIVEREF(__pyx_tuple__348);
  __pyx_codeobj__349 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__348, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_CondLink, 352, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__349)) __PYX_ERR(1, 352, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":354
 * def CondLink(*args, tv=None):
 *     return add_link(types.CondLink, args, tv=tv)
 * def SleepLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SleepLink, args, tv=tv)
 * def ParallelLink(*args, tv=None):
 */
  __pyx_tuple__350 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__350)) __PYX_ERR(1, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__350);
  __Pyx_GIVEREF(__pyx_tuple__350);
  __pyx_codeobj__351 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__350, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SleepLink, 354, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__351)) __PYX_ERR(1, 354, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":356
 * def SleepLink(*args, tv=None):
 *     return add_link(types.SleepLink, args, tv=tv)
 * def ParallelLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ParallelLink, args, tv=tv)
 * def ThreadJoinLink(*args, tv=None):
 */
  __pyx_tuple__352 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__352)) __PYX_ERR(1, 356, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__352);
  __Pyx_GIVEREF(__pyx_tuple__352);
  __pyx_codeobj__353 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__352, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ParallelLink, 356, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__353)) __PYX_ERR(1, 356, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":358
 * def ParallelLink(*args, tv=None):
 *     return add_link(types.ParallelLink, args, tv=tv)
 * def ThreadJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ThreadJoinLink, args, tv=tv)
 * def ExecuteThreadedLink(*args, tv=None):
 */
  __pyx_tuple__354 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__354)) __PYX_ERR(1, 358, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__354);
  __Pyx_GIVEREF(__pyx_tuple__354);
  __pyx_codeobj__355 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__354, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ThreadJoinLink, 358, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__355)) __PYX_ERR(1, 358, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":360
 * def ThreadJoinLink(*args, tv=None):
 *     return add_link(types.ThreadJoinLink, args, tv=tv)
 * def ExecuteThreadedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecuteThreadedLink, args, tv=tv)
 * def PureExecLink(*args, tv=None):
 */
  __pyx_tuple__356 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__356)) __PYX_ERR(1, 360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__356);
  __Pyx_GIVEREF(__pyx_tuple__356);
  __pyx_codeobj__357 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__356, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ExecuteThreadedLink, 360, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__357)) __PYX_ERR(1, 360, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":362
 * def ExecuteThreadedLink(*args, tv=None):
 *     return add_link(types.ExecuteThreadedLink, args, tv=tv)
 * def PureExecLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PureExecLink, args, tv=tv)
 * def ProcedureNode(node_name, tv=None):
 */
  __pyx_tuple__358 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__358)) __PYX_ERR(1, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__358);
  __Pyx_GIVEREF(__pyx_tuple__358);
  __pyx_codeobj__359 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__358, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PureExecLink, 362, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__359)) __PYX_ERR(1, 362, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":364
 * def PureExecLink(*args, tv=None):
 *     return add_link(types.PureExecLink, args, tv=tv)
 * def ProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ProcedureNode, node_name, tv)
 * def DefinedProcedureNode(node_name, tv=None):
 */
  __pyx_tuple__360 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__360)) __PYX_ERR(1, 364, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__360);
  __Pyx_GIVEREF(__pyx_tuple__360);
  __pyx_codeobj__361 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__360, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ProcedureNode, 364, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__361)) __PYX_ERR(1, 364, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":366
 * def ProcedureNode(node_name, tv=None):
 *     return add_node(types.ProcedureNode, node_name, tv)
 * def DefinedProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedProcedureNode, node_name, tv)
 * def GroundedProcedureNode(node_name, tv=None):
 */
  __pyx_tuple__362 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__362)) __PYX_ERR(1, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__362);
  __Pyx_GIVEREF(__pyx_tuple__362);
  __pyx_codeobj__363 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__362, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DefinedProcedureNode, 366, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__363)) __PYX_ERR(1, 366, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":368
 * def DefinedProcedureNode(node_name, tv=None):
 *     return add_node(types.DefinedProcedureNode, node_name, tv)
 * def GroundedProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedProcedureNode, node_name, tv)
 * def GroundedPredicateNode(node_name, tv=None):
 */
  __pyx_tuple__364 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__364)) __PYX_ERR(1, 368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__364);
  __Pyx_GIVEREF(__pyx_tuple__364);
  __pyx_codeobj__365 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__364, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_GroundedProcedureNode, 368, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__365)) __PYX_ERR(1, 368, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":370
 * def GroundedProcedureNode(node_name, tv=None):
 *     return add_node(types.GroundedProcedureNode, node_name, tv)
 * def GroundedPredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedPredicateNode, node_name, tv)
 * def DefinedPredicateNode(node_name, tv=None):
 */
  __pyx_tuple__366 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__366)) __PYX_ERR(1, 370, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__366);
  __Pyx_GIVEREF(__pyx_tuple__366);
  __pyx_codeobj__367 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__366, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_GroundedPredicateNode, 370, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__367)) __PYX_ERR(1, 370, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":372
 * def GroundedPredicateNode(node_name, tv=None):
 *     return add_node(types.GroundedPredicateNode, node_name, tv)
 * def DefinedPredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedPredicateNode, node_name, tv)
 * def SchemaNode(node_name, tv=None):
 */
  __pyx_tuple__368 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__368)) __PYX_ERR(1, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__368);
  __Pyx_GIVEREF(__pyx_tuple__368);
  __pyx_codeobj__369 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__368, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DefinedPredicateNode, 372, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__369)) __PYX_ERR(1, 372, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":374
 * def DefinedPredicateNode(node_name, tv=None):
 *     return add_node(types.DefinedPredicateNode, node_name, tv)
 * def SchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SchemaNode, node_name, tv)
 * def DefinedSchemaNode(node_name, tv=None):
 */
  __pyx_tuple__370 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__370)) __PYX_ERR(1, 374, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__370);
  __Pyx_GIVEREF(__pyx_tuple__370);
  __pyx_codeobj__371 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__370, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SchemaNode, 374, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__371)) __PYX_ERR(1, 374, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":376
 * def SchemaNode(node_name, tv=None):
 *     return add_node(types.SchemaNode, node_name, tv)
 * def DefinedSchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedSchemaNode, node_name, tv)
 * def GroundedSchemaNode(node_name, tv=None):
 */
  __pyx_tuple__372 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__372)) __PYX_ERR(1, 376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__372);
  __Pyx_GIVEREF(__pyx_tuple__372);
  __pyx_codeobj__373 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__372, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DefinedSchemaNode, 376, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__373)) __PYX_ERR(1, 376, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":378
 * def DefinedSchemaNode(node_name, tv=None):
 *     return add_node(types.DefinedSchemaNode, node_name, tv)
 * def GroundedSchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedSchemaNode, node_name, tv)
 * def ForeignAst(*args):
 */
  __pyx_tuple__374 = PyTuple_Pack(2, __pyx_n_s_node_name, __pyx_n_s_tv); if (unlikely(!__pyx_tuple__374)) __PYX_ERR(1, 378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__374);
  __Pyx_GIVEREF(__pyx_tuple__374);
  __pyx_codeobj__375 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__374, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_GroundedSchemaNode, 378, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__375)) __PYX_ERR(1, 378, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":380
 * def GroundedSchemaNode(node_name, tv=None):
 *     return add_node(types.GroundedSchemaNode, node_name, tv)
 * def ForeignAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.ForeignAst, args)
 * def SexprAst(*args):
 */
  __pyx_tuple__376 = PyTuple_Pack(1, __pyx_n_s_args); if (unlikely(!__pyx_tuple__376)) __PYX_ERR(1, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__376);
  __Pyx_GIVEREF(__pyx_tuple__376);
  __pyx_codeobj__377 = (PyObject*)__Pyx_PyCode_New(0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__376, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ForeignAst, 380, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__377)) __PYX_ERR(1, 380, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":382
 * def ForeignAst(*args):
 *     return add_link(types.ForeignAst, args)
 * def SexprAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.SexprAst, args)
 * def DatalogAst(*args):
 */
  __pyx_tuple__378 = PyTuple_Pack(1, __pyx_n_s_args); if (unlikely(!__pyx_tuple__378)) __PYX_ERR(1, 382, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__378);
  __Pyx_GIVEREF(__pyx_tuple__378);
  __pyx_codeobj__379 = (PyObject*)__Pyx_PyCode_New(0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__378, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_SexprAst, 382, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__379)) __PYX_ERR(1, 382, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":384
 * def SexprAst(*args):
 *     return add_link(types.SexprAst, args)
 * def DatalogAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.DatalogAst, args)
 * def JsonAst(*args):
 */
  __pyx_tuple__380 = PyTuple_Pack(1, __pyx_n_s_args); if (unlikely(!__pyx_tuple__380)) __PYX_ERR(1, 384, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__380);
  __Pyx_GIVEREF(__pyx_tuple__380);
  __pyx_codeobj__381 = (PyObject*)__Pyx_PyCode_New(0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__380, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DatalogAst, 384, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__381)) __PYX_ERR(1, 384, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":386
 * def DatalogAst(*args):
 *     return add_link(types.DatalogAst, args)
 * def JsonAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.JsonAst, args)
 * def PythonAst(*args):
 */
  __pyx_tuple__382 = PyTuple_Pack(1, __pyx_n_s_args); if (unlikely(!__pyx_tuple__382)) __PYX_ERR(1, 386, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__382);
  __Pyx_GIVEREF(__pyx_tuple__382);
  __pyx_codeobj__383 = (PyObject*)__Pyx_PyCode_New(0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__382, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_JsonAst, 386, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__383)) __PYX_ERR(1, 386, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":388
 * def JsonAst(*args):
 *     return add_link(types.JsonAst, args)
 * def PythonAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.PythonAst, args)
 * def DirectlyEvaluatableLink(*args, tv=None):
 */
  __pyx_tuple__384 = PyTuple_Pack(1, __pyx_n_s_args); if (unlikely(!__pyx_tuple__384)) __PYX_ERR(1, 388, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__384);
  __Pyx_GIVEREF(__pyx_tuple__384);
  __pyx_codeobj__385 = (PyObject*)__Pyx_PyCode_New(0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__384, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_PythonAst, 388, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__385)) __PYX_ERR(1, 388, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":390
 * def PythonAst(*args):
 *     return add_link(types.PythonAst, args)
 * def DirectlyEvaluatableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DirectlyEvaluatableLink, args, tv=tv)
 * def ImplicationLink(*args, tv=None):
 */
  __pyx_tuple__386 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__386)) __PYX_ERR(1, 390, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__386);
  __Pyx_GIVEREF(__pyx_tuple__386);
  __pyx_codeobj__387 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__386, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_DirectlyEvaluatableLink, 390, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__387)) __PYX_ERR(1, 390, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":392
 * def DirectlyEvaluatableLink(*args, tv=None):
 *     return add_link(types.DirectlyEvaluatableLink, args, tv=tv)
 * def ImplicationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ImplicationLink, args, tv=tv)
 * def InheritanceLink(*args, tv=None):
 */
  __pyx_tuple__388 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__388)) __PYX_ERR(1, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__388);
  __Pyx_GIVEREF(__pyx_tuple__388);
  __pyx_codeobj__389 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__388, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ImplicationLink, 392, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__389)) __PYX_ERR(1, 392, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":394
 * def ImplicationLink(*args, tv=None):
 *     return add_link(types.ImplicationLink, args, tv=tv)
 * def InheritanceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.InheritanceLink, args, tv=tv)
 * def ForAllLink(*args, tv=None):
 */
  __pyx_tuple__390 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__390)) __PYX_ERR(1, 394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__390);
  __Pyx_GIVEREF(__pyx_tuple__390);
  __pyx_codeobj__391 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__390, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_InheritanceLink, 394, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__391)) __PYX_ERR(1, 394, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":396
 * def InheritanceLink(*args, tv=None):
 *     return add_link(types.InheritanceLink, args, tv=tv)
 * def ForAllLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ForAllLink, args, tv=tv)
 * def ExistsLink(*args, tv=None):
 */
  __pyx_tuple__392 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__392)) __PYX_ERR(1, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__392);
  __Pyx_GIVEREF(__pyx_tuple__392);
  __pyx_codeobj__393 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__392, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ForAllLink, 396, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__393)) __PYX_ERR(1, 396, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":398
 * def ForAllLink(*args, tv=None):
 *     return add_link(types.ForAllLink, args, tv=tv)
 * def ExistsLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExistsLink, args, tv=tv)
 * def AssociativeLink(*args, tv=None):
 */
  __pyx_tuple__394 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__394)) __PYX_ERR(1, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__394);
  __Pyx_GIVEREF(__pyx_tuple__394);
  __pyx_codeobj__395 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__394, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ExistsLink, 398, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__395)) __PYX_ERR(1, 398, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":400
 * def ExistsLink(*args, tv=None):
 *     return add_link(types.ExistsLink, args, tv=tv)
 * def AssociativeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AssociativeLink, args, tv=tv)
 * def EquivalenceLink(*args, tv=None):
 */
  __pyx_tuple__396 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__396)) __PYX_ERR(1, 400, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__396);
  __Pyx_GIVEREF(__pyx_tuple__396);
  __pyx_codeobj__397 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__396, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_AssociativeLink, 400, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__397)) __PYX_ERR(1, 400, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":402
 * def AssociativeLink(*args, tv=None):
 *     return add_link(types.AssociativeLink, args, tv=tv)
 * def EquivalenceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EquivalenceLink, args, tv=tv)
 * def ExecutionLink(*args, tv=None):
 */
  __pyx_tuple__398 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__398)) __PYX_ERR(1, 402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__398);
  __Pyx_GIVEREF(__pyx_tuple__398);
  __pyx_codeobj__399 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__398, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_EquivalenceLink, 402, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__399)) __PYX_ERR(1, 402, __pyx_L1_error)

  /* "../../atoms/atom_types/core_types.pyx":404
 * def EquivalenceLink(*args, tv=None):
 *     return add_link(types.EquivalenceLink, args, tv=tv)
 * def ExecutionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutionLink, args, tv=tv)
 */
  __pyx_tuple__400 = PyTuple_Pack(2, __pyx_n_s_tv, __pyx_n_s_args); if (unlikely(!__pyx_tuple__400)) __PYX_ERR(1, 404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__400);
  __Pyx_GIVEREF(__pyx_tuple__400);
  __pyx_codeobj__401 = (PyObject*)__Pyx_PyCode_New(0, 1, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__400, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom_2, __pyx_n_s_ExecutionLink, 404, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__401)) __PYX_ERR(1, 404, __pyx_L1_error)

  /* "opencog/type_constructors.pyx":35
 * 
 * 
 * def FloatValue(arg):             # <<<<<<<<<<<<<<
 *     return createFloatValue(arg)
 * 
 */
  __pyx_tuple__402 = PyTuple_Pack(1, __pyx_n_s_arg); if (unlikely(!__pyx_tuple__402)) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__402);
  __Pyx_GIVEREF(__pyx_tuple__402);
  __pyx_codeobj__403 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__402, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom, __pyx_n_s_FloatValue, 35, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__403)) __PYX_ERR(0, 35, __pyx_L1_error)

  /* "opencog/type_constructors.pyx":39
 * 
 * 
 * def LinkValue(arg):             # <<<<<<<<<<<<<<
 *     return createLinkValue(arg)
 * 
 */
  __pyx_tuple__404 = PyTuple_Pack(1, __pyx_n_s_arg); if (unlikely(!__pyx_tuple__404)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__404);
  __Pyx_GIVEREF(__pyx_tuple__404);
  __pyx_codeobj__405 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__404, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom, __pyx_n_s_LinkValue, 39, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__405)) __PYX_ERR(0, 39, __pyx_L1_error)

  /* "opencog/type_constructors.pyx":43
 * 
 * 
 * def StringValue(arg):             # <<<<<<<<<<<<<<
 *     return createStringValue(arg)
 * 
 */
  __pyx_tuple__406 = PyTuple_Pack(1, __pyx_n_s_arg); if (unlikely(!__pyx_tuple__406)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__406);
  __Pyx_GIVEREF(__pyx_tuple__406);
  __pyx_codeobj__407 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__406, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom, __pyx_n_s_StringValue, 43, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__407)) __PYX_ERR(0, 43, __pyx_L1_error)

  /* "opencog/type_constructors.pyx":47
 * 
 * 
 * def TruthValue(strength_t strength=1.0, confidence_t confidence=1.0):             # <<<<<<<<<<<<<<
 *     return createTruthValue(strength, confidence)
 */
  __pyx_tuple__408 = PyTuple_Pack(2, __pyx_n_s_strength, __pyx_n_s_confidence); if (unlikely(!__pyx_tuple__408)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__408);
  __Pyx_GIVEREF(__pyx_tuple__408);
  __pyx_codeobj__409 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__408, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_workspaces_opencog_central_atom, __pyx_n_s_TruthValue, 47, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__409)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 2, __pyx_L1_error);
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule("opencog.atomspace"); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7opencog_9atomspace_PtrHolder = __Pyx_ImportType(__pyx_t_1, "opencog.atomspace", "PtrHolder", sizeof(struct __pyx_obj_7opencog_9atomspace_PtrHolder), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7opencog_9atomspace_PtrHolder) __PYX_ERR(2, 62, __pyx_L1_error)
  __pyx_vtabptr_7opencog_9atomspace_PtrHolder = (struct __pyx_vtabstruct_7opencog_9atomspace_PtrHolder*)__Pyx_GetVtable(__pyx_ptype_7opencog_9atomspace_PtrHolder->tp_dict); if (unlikely(!__pyx_vtabptr_7opencog_9atomspace_PtrHolder)) __PYX_ERR(2, 62, __pyx_L1_error)
  __pyx_ptype_7opencog_9atomspace_Value = __Pyx_ImportType(__pyx_t_1, "opencog.atomspace", "Value", sizeof(struct __pyx_obj_7opencog_9atomspace_Value), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7opencog_9atomspace_Value) __PYX_ERR(2, 68, __pyx_L1_error)
  __pyx_vtabptr_7opencog_9atomspace_Value = (struct __pyx_vtabstruct_7opencog_9atomspace_Value*)__Pyx_GetVtable(__pyx_ptype_7opencog_9atomspace_Value->tp_dict); if (unlikely(!__pyx_vtabptr_7opencog_9atomspace_Value)) __PYX_ERR(2, 68, __pyx_L1_error)
  __pyx_ptype_7opencog_9atomspace_TruthValue = __Pyx_ImportType(__pyx_t_1, "opencog.atomspace", "TruthValue", sizeof(struct __pyx_obj_7opencog_9atomspace_TruthValue), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7opencog_9atomspace_TruthValue) __PYX_ERR(2, 106, __pyx_L1_error)
  __pyx_vtabptr_7opencog_9atomspace_TruthValue = (struct __pyx_vtabstruct_7opencog_9atomspace_TruthValue*)__Pyx_GetVtable(__pyx_ptype_7opencog_9atomspace_TruthValue->tp_dict); if (unlikely(!__pyx_vtabptr_7opencog_9atomspace_TruthValue)) __PYX_ERR(2, 106, __pyx_L1_error)
  __pyx_ptype_7opencog_9atomspace_Atom = __Pyx_ImportType(__pyx_t_1, "opencog.atomspace", "Atom", sizeof(struct __pyx_obj_7opencog_9atomspace_Atom), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7opencog_9atomspace_Atom) __PYX_ERR(2, 172, __pyx_L1_error)
  __pyx_vtabptr_7opencog_9atomspace_Atom = (struct __pyx_vtabstruct_7opencog_9atomspace_Atom*)__Pyx_GetVtable(__pyx_ptype_7opencog_9atomspace_Atom->tp_dict); if (unlikely(!__pyx_vtabptr_7opencog_9atomspace_Atom)) __PYX_ERR(2, 172, __pyx_L1_error)
  __pyx_ptype_7opencog_9atomspace_AtomSpace = __Pyx_ImportType(__pyx_t_1, "opencog.atomspace", "AtomSpace", sizeof(struct __pyx_obj_7opencog_9atomspace_AtomSpace), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7opencog_9atomspace_AtomSpace) __PYX_ERR(2, 222, __pyx_L1_error)
  __pyx_vtabptr_7opencog_9atomspace_AtomSpace = (struct __pyx_vtabstruct_7opencog_9atomspace_AtomSpace*)__Pyx_GetVtable(__pyx_ptype_7opencog_9atomspace_AtomSpace->tp_dict); if (unlikely(!__pyx_vtabptr_7opencog_9atomspace_AtomSpace)) __PYX_ERR(2, 222, __pyx_L1_error)
  __pyx_ptype_7opencog_9atomspace_FloatValue = __Pyx_ImportType(__pyx_t_1, "opencog.atomspace", "FloatValue", sizeof(struct __pyx_obj_7opencog_9atomspace_FloatValue), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7opencog_9atomspace_FloatValue) __PYX_ERR(3, 1, __pyx_L1_error)
  __pyx_vtabptr_7opencog_9atomspace_FloatValue = (struct __pyx_vtabstruct_7opencog_9atomspace_FloatValue*)__Pyx_GetVtable(__pyx_ptype_7opencog_9atomspace_FloatValue->tp_dict); if (unlikely(!__pyx_vtabptr_7opencog_9atomspace_FloatValue)) __PYX_ERR(3, 1, __pyx_L1_error)
  __pyx_ptype_7opencog_9atomspace_StringValue = __Pyx_ImportType(__pyx_t_1, "opencog.atomspace", "StringValue", sizeof(struct __pyx_obj_7opencog_9atomspace_StringValue), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7opencog_9atomspace_StringValue) __PYX_ERR(3, 9, __pyx_L1_error)
  __pyx_vtabptr_7opencog_9atomspace_StringValue = (struct __pyx_vtabstruct_7opencog_9atomspace_StringValue*)__Pyx_GetVtable(__pyx_ptype_7opencog_9atomspace_StringValue->tp_dict); if (unlikely(!__pyx_vtabptr_7opencog_9atomspace_StringValue)) __PYX_ERR(3, 9, __pyx_L1_error)
  __pyx_ptype_7opencog_9atomspace_LinkValue = __Pyx_ImportType(__pyx_t_1, "opencog.atomspace", "LinkValue", sizeof(struct __pyx_obj_7opencog_9atomspace_LinkValue), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7opencog_9atomspace_LinkValue) __PYX_ERR(3, 17, __pyx_L1_error)
  __pyx_vtabptr_7opencog_9atomspace_LinkValue = (struct __pyx_vtabstruct_7opencog_9atomspace_LinkValue*)__Pyx_GetVtable(__pyx_ptype_7opencog_9atomspace_LinkValue->tp_dict); if (unlikely(!__pyx_vtabptr_7opencog_9atomspace_LinkValue)) __PYX_ERR(3, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC inittype_constructors(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC inittype_constructors(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_type_constructors(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_type_constructors(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_type_constructors(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'type_constructors' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_type_constructors(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 2, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 2, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 2, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("type_constructors", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 2, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 2, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 2, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 2, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 2, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_opencog__type_constructors) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 2, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "opencog.type_constructors")) {
      if (unlikely(PyDict_SetItemString(modules, "opencog.type_constructors", __pyx_m) < 0)) __PYX_ERR(0, 2, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  (void)__Pyx_modinit_type_init_code();
  if (unlikely(__Pyx_modinit_type_import_code() < 0)) __PYX_ERR(0, 2, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  #endif

  /* "opencog/type_constructors.pyx":11
 * from opencog.atomspace cimport strength_t, confidence_t
 * 
 * import warnings             # <<<<<<<<<<<<<<
 * 
 * from opencog.atomspace import (createFloatValue, createLinkValue,
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_warnings, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_warnings, __pyx_t_1) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":13
 * import warnings
 * 
 * from opencog.atomspace import (createFloatValue, createLinkValue,             # <<<<<<<<<<<<<<
 *                                createStringValue, createTruthValue)
 * from opencog.atomspace import types, AtomSpace
 */
  __pyx_t_1 = PyList_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_createFloatValue);
  __Pyx_GIVEREF(__pyx_n_s_createFloatValue);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_createFloatValue);
  __Pyx_INCREF(__pyx_n_s_createLinkValue);
  __Pyx_GIVEREF(__pyx_n_s_createLinkValue);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_createLinkValue);
  __Pyx_INCREF(__pyx_n_s_createStringValue);
  __Pyx_GIVEREF(__pyx_n_s_createStringValue);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_createStringValue);
  __Pyx_INCREF(__pyx_n_s_createTruthValue);
  __Pyx_GIVEREF(__pyx_n_s_createTruthValue);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_s_createTruthValue);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_opencog_atomspace, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_createFloatValue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_createFloatValue, __pyx_t_1) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_createLinkValue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_createLinkValue, __pyx_t_1) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_createStringValue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_createStringValue, __pyx_t_1) < 0) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_createTruthValue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_createTruthValue, __pyx_t_1) < 0) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "opencog/type_constructors.pyx":15
 * from opencog.atomspace import (createFloatValue, createLinkValue,
 *                                createStringValue, createTruthValue)
 * from opencog.atomspace import types, AtomSpace             # <<<<<<<<<<<<<<
 * from opencog.utilities import add_node, add_link
 * from opencog.utilities import get_default_atomspace, set_default_atomspace
 */
  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_types);
  __Pyx_GIVEREF(__pyx_n_s_types);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_types);
  __Pyx_INCREF(__pyx_n_s_AtomSpace);
  __Pyx_GIVEREF(__pyx_n_s_AtomSpace);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_AtomSpace);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_opencog_atomspace, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_types, __pyx_t_2) < 0) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_AtomSpace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AtomSpace, __pyx_t_2) < 0) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":16
 *                                createStringValue, createTruthValue)
 * from opencog.atomspace import types, AtomSpace
 * from opencog.utilities import add_node, add_link             # <<<<<<<<<<<<<<
 * from opencog.utilities import get_default_atomspace, set_default_atomspace
 * 
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_add_node);
  __Pyx_GIVEREF(__pyx_n_s_add_node);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_add_node);
  __Pyx_INCREF(__pyx_n_s_add_link);
  __Pyx_GIVEREF(__pyx_n_s_add_link);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_add_link);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_opencog_utilities, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_add_node); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_add_node, __pyx_t_1) < 0) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_add_link); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_add_link, __pyx_t_1) < 0) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "opencog/type_constructors.pyx":17
 * from opencog.atomspace import types, AtomSpace
 * from opencog.utilities import add_node, add_link
 * from opencog.utilities import get_default_atomspace, set_default_atomspace             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_get_default_atomspace);
  __Pyx_GIVEREF(__pyx_n_s_get_default_atomspace);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_get_default_atomspace);
  __Pyx_INCREF(__pyx_n_s_set_default_atomspace);
  __Pyx_GIVEREF(__pyx_n_s_set_default_atomspace);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_set_default_atomspace);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_opencog_utilities, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_get_default_atomspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_default_atomspace, __pyx_t_2) < 0) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_set_default_atomspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_default_atomspace, __pyx_t_2) < 0) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":20
 * 
 * 
 * def set_type_ctor_atomspace(new_atomspace):             # <<<<<<<<<<<<<<
 *     warnings.warn('set_type_ctor_atomspace is deprecated, use set_default_atomspace instead',
 *             DeprecationWarning)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_1set_type_ctor_atomspace, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_type_ctor_atomspace, __pyx_t_1) < 0) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":26
 * 
 * 
 * def get_type_ctor_atomspace():             # <<<<<<<<<<<<<<
 *     warnings.warn('get_type_ctor_atomspace is deprecated, use get_default_atomspace instead',
 *             DeprecationWarning)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_3get_type_ctor_atomspace, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_type_ctor_atomspace, __pyx_t_1) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":10
 * #
 * 
 * def Notype(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Notype, args, tv=tv)
 * def TopType(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_5Notype, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Notype, __pyx_t_1) < 0) __PYX_ERR(1, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":12
 * def Notype(*args, tv=None):
 *     return add_link(types.Notype, args, tv=tv)
 * def TopType(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TopType, args, tv=tv)
 * def Valuation(*args):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_7TopType, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TopType, __pyx_t_1) < 0) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":14
 * def TopType(*args, tv=None):
 *     return add_link(types.TopType, args, tv=tv)
 * def Valuation(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.Valuation, args)
 * def Frame(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_9Valuation, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Valuation, __pyx_t_1) < 0) __PYX_ERR(1, 14, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":16
 * def Valuation(*args):
 *     return add_link(types.Valuation, args)
 * def Frame(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Frame, args, tv=tv)
 * def Node(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_11Frame, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Frame, __pyx_t_1) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":18
 * def Frame(*args, tv=None):
 *     return add_link(types.Frame, args, tv=tv)
 * def Node(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.Node, node_name, tv)
 * def Link(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_13Node, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Node, __pyx_t_1) < 0) __PYX_ERR(1, 18, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":20
 * def Node(node_name, tv=None):
 *     return add_node(types.Node, node_name, tv)
 * def Link(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Link, args, tv=tv)
 * def ConceptNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_15Link, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Link, __pyx_t_1) < 0) __PYX_ERR(1, 20, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":22
 * def Link(*args, tv=None):
 *     return add_link(types.Link, args, tv=tv)
 * def ConceptNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ConceptNode, node_name, tv)
 * def NumberNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_17ConceptNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ConceptNode, __pyx_t_1) < 0) __PYX_ERR(1, 22, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":24
 * def ConceptNode(node_name, tv=None):
 *     return add_node(types.ConceptNode, node_name, tv)
 * def NumberNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.NumberNode, node_name, tv)
 * def OrderedLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_19NumberNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NumberNode, __pyx_t_1) < 0) __PYX_ERR(1, 24, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":26
 * def NumberNode(node_name, tv=None):
 *     return add_node(types.NumberNode, node_name, tv)
 * def OrderedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.OrderedLink, args, tv=tv)
 * def UnorderedLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_21OrderedLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OrderedLink, __pyx_t_1) < 0) __PYX_ERR(1, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":28
 * def OrderedLink(*args, tv=None):
 *     return add_link(types.OrderedLink, args, tv=tv)
 * def UnorderedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnorderedLink, args, tv=tv)
 * def PredicateNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_23UnorderedLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_UnorderedLink, __pyx_t_1) < 0) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":30
 * def UnorderedLink(*args, tv=None):
 *     return add_link(types.UnorderedLink, args, tv=tv)
 * def PredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.PredicateNode, node_name, tv)
 * def ValuableLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_25PredicateNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PredicateNode, __pyx_t_1) < 0) __PYX_ERR(1, 30, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":32
 * def PredicateNode(node_name, tv=None):
 *     return add_node(types.PredicateNode, node_name, tv)
 * def ValuableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValuableLink, args, tv=tv)
 * def EvaluatableLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_27ValuableLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ValuableLink, __pyx_t_1) < 0) __PYX_ERR(1, 32, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":34
 * def ValuableLink(*args, tv=None):
 *     return add_link(types.ValuableLink, args, tv=tv)
 * def EvaluatableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EvaluatableLink, args, tv=tv)
 * def ExecutableLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_29EvaluatableLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_EvaluatableLink, __pyx_t_1) < 0) __PYX_ERR(1, 34, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":36
 * def EvaluatableLink(*args, tv=None):
 *     return add_link(types.EvaluatableLink, args, tv=tv)
 * def ExecutableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutableLink, args, tv=tv)
 * def CrispInputLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_31ExecutableLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ExecutableLink, __pyx_t_1) < 0) __PYX_ERR(1, 36, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":38
 * def ExecutableLink(*args, tv=None):
 *     return add_link(types.ExecutableLink, args, tv=tv)
 * def CrispInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrispInputLink, args, tv=tv)
 * def CrispOutputLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_33CrispInputLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CrispInputLink, __pyx_t_1) < 0) __PYX_ERR(1, 38, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":40
 * def CrispInputLink(*args, tv=None):
 *     return add_link(types.CrispInputLink, args, tv=tv)
 * def CrispOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrispOutputLink, args, tv=tv)
 * def BooleanInputLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_35CrispOutputLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CrispOutputLink, __pyx_t_1) < 0) __PYX_ERR(1, 40, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":42
 * def CrispOutputLink(*args, tv=None):
 *     return add_link(types.CrispOutputLink, args, tv=tv)
 * def BooleanInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BooleanInputLink, args, tv=tv)
 * def BooleanOutputLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_37BooleanInputLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BooleanInputLink, __pyx_t_1) < 0) __PYX_ERR(1, 42, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":44
 * def BooleanInputLink(*args, tv=None):
 *     return add_link(types.BooleanInputLink, args, tv=tv)
 * def BooleanOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BooleanOutputLink, args, tv=tv)
 * def NumericInputLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_39BooleanOutputLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BooleanOutputLink, __pyx_t_1) < 0) __PYX_ERR(1, 44, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":46
 * def BooleanOutputLink(*args, tv=None):
 *     return add_link(types.BooleanOutputLink, args, tv=tv)
 * def NumericInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericInputLink, args, tv=tv)
 * def NumericOutputLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_41NumericInputLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NumericInputLink, __pyx_t_1) < 0) __PYX_ERR(1, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":48
 * def NumericInputLink(*args, tv=None):
 *     return add_link(types.NumericInputLink, args, tv=tv)
 * def NumericOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericOutputLink, args, tv=tv)
 * def TypeInputLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_43NumericOutputLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NumericOutputLink, __pyx_t_1) < 0) __PYX_ERR(1, 48, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":50
 * def NumericOutputLink(*args, tv=None):
 *     return add_link(types.NumericOutputLink, args, tv=tv)
 * def TypeInputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeInputLink, args, tv=tv)
 * def TypeOutputLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_45TypeInputLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TypeInputLink, __pyx_t_1) < 0) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":52
 * def TypeInputLink(*args, tv=None):
 *     return add_link(types.TypeInputLink, args, tv=tv)
 * def TypeOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeOutputLink, args, tv=tv)
 * def AlphaConvertibleLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_47TypeOutputLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TypeOutputLink, __pyx_t_1) < 0) __PYX_ERR(1, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":54
 * def TypeOutputLink(*args, tv=None):
 *     return add_link(types.TypeOutputLink, args, tv=tv)
 * def AlphaConvertibleLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlphaConvertibleLink, args, tv=tv)
 * def CollectionLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_49AlphaConvertibleLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AlphaConvertibleLink, __pyx_t_1) < 0) __PYX_ERR(1, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":56
 * def AlphaConvertibleLink(*args, tv=None):
 *     return add_link(types.AlphaConvertibleLink, args, tv=tv)
 * def CollectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CollectionLink, args, tv=tv)
 * def ListLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_51CollectionLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CollectionLink, __pyx_t_1) < 0) __PYX_ERR(1, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":58
 * def CollectionLink(*args, tv=None):
 *     return add_link(types.CollectionLink, args, tv=tv)
 * def ListLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ListLink, args, tv=tv)
 * def SetLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_53ListLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ListLink, __pyx_t_1) < 0) __PYX_ERR(1, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":60
 * def ListLink(*args, tv=None):
 *     return add_link(types.ListLink, args, tv=tv)
 * def SetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetLink, args, tv=tv)
 * def UnionLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_55SetLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SetLink, __pyx_t_1) < 0) __PYX_ERR(1, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":62
 * def SetLink(*args, tv=None):
 *     return add_link(types.SetLink, args, tv=tv)
 * def UnionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnionLink, args, tv=tv)
 * def IntersectionLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_57UnionLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_UnionLink, __pyx_t_1) < 0) __PYX_ERR(1, 62, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":64
 * def UnionLink(*args, tv=None):
 *     return add_link(types.UnionLink, args, tv=tv)
 * def IntersectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IntersectionLink, args, tv=tv)
 * def ComplementLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_59IntersectionLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IntersectionLink, __pyx_t_1) < 0) __PYX_ERR(1, 64, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":66
 * def IntersectionLink(*args, tv=None):
 *     return add_link(types.IntersectionLink, args, tv=tv)
 * def ComplementLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ComplementLink, args, tv=tv)
 * def SetDifferenceLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_61ComplementLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ComplementLink, __pyx_t_1) < 0) __PYX_ERR(1, 66, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":68
 * def ComplementLink(*args, tv=None):
 *     return add_link(types.ComplementLink, args, tv=tv)
 * def SetDifferenceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetDifferenceLink, args, tv=tv)
 * def MemberLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_63SetDifferenceLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SetDifferenceLink, __pyx_t_1) < 0) __PYX_ERR(1, 68, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":70
 * def SetDifferenceLink(*args, tv=None):
 *     return add_link(types.SetDifferenceLink, args, tv=tv)
 * def MemberLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MemberLink, args, tv=tv)
 * def SubsetLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_65MemberLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MemberLink, __pyx_t_1) < 0) __PYX_ERR(1, 70, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":72
 * def MemberLink(*args, tv=None):
 *     return add_link(types.MemberLink, args, tv=tv)
 * def SubsetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SubsetLink, args, tv=tv)
 * def ContextLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_67SubsetLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SubsetLink, __pyx_t_1) < 0) __PYX_ERR(1, 72, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":74
 * def SubsetLink(*args, tv=None):
 *     return add_link(types.SubsetLink, args, tv=tv)
 * def ContextLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ContextLink, args, tv=tv)
 * def TrueLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_69ContextLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ContextLink, __pyx_t_1) < 0) __PYX_ERR(1, 74, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":76
 * def ContextLink(*args, tv=None):
 *     return add_link(types.ContextLink, args, tv=tv)
 * def TrueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TrueLink, args, tv=tv)
 * def FalseLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_71TrueLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TrueLink, __pyx_t_1) < 0) __PYX_ERR(1, 76, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":78
 * def TrueLink(*args, tv=None):
 *     return add_link(types.TrueLink, args, tv=tv)
 * def FalseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FalseLink, args, tv=tv)
 * def AndLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_73FalseLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FalseLink, __pyx_t_1) < 0) __PYX_ERR(1, 78, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":80
 * def FalseLink(*args, tv=None):
 *     return add_link(types.FalseLink, args, tv=tv)
 * def AndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AndLink, args, tv=tv)
 * def OrLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_75AndLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AndLink, __pyx_t_1) < 0) __PYX_ERR(1, 80, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":82
 * def AndLink(*args, tv=None):
 *     return add_link(types.AndLink, args, tv=tv)
 * def OrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.OrLink, args, tv=tv)
 * def NotLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_77OrLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OrLink, __pyx_t_1) < 0) __PYX_ERR(1, 82, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":84
 * def OrLink(*args, tv=None):
 *     return add_link(types.OrLink, args, tv=tv)
 * def NotLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NotLink, args, tv=tv)
 * def SequentialAndLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_79NotLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NotLink, __pyx_t_1) < 0) __PYX_ERR(1, 84, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":86
 * def NotLink(*args, tv=None):
 *     return add_link(types.NotLink, args, tv=tv)
 * def SequentialAndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SequentialAndLink, args, tv=tv)
 * def SequentialOrLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_81SequentialAndLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SequentialAndLink, __pyx_t_1) < 0) __PYX_ERR(1, 86, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":88
 * def SequentialAndLink(*args, tv=None):
 *     return add_link(types.SequentialAndLink, args, tv=tv)
 * def SequentialOrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SequentialOrLink, args, tv=tv)
 * def ChoiceLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_83SequentialOrLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SequentialOrLink, __pyx_t_1) < 0) __PYX_ERR(1, 88, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":90
 * def SequentialOrLink(*args, tv=None):
 *     return add_link(types.SequentialOrLink, args, tv=tv)
 * def ChoiceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ChoiceLink, args, tv=tv)
 * def PresentLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_85ChoiceLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ChoiceLink, __pyx_t_1) < 0) __PYX_ERR(1, 90, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":92
 * def ChoiceLink(*args, tv=None):
 *     return add_link(types.ChoiceLink, args, tv=tv)
 * def PresentLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PresentLink, args, tv=tv)
 * def AbsentLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_87PresentLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PresentLink, __pyx_t_1) < 0) __PYX_ERR(1, 92, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":94
 * def PresentLink(*args, tv=None):
 *     return add_link(types.PresentLink, args, tv=tv)
 * def AbsentLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AbsentLink, args, tv=tv)
 * def AlwaysLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_89AbsentLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AbsentLink, __pyx_t_1) < 0) __PYX_ERR(1, 94, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":96
 * def AbsentLink(*args, tv=None):
 *     return add_link(types.AbsentLink, args, tv=tv)
 * def AlwaysLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlwaysLink, args, tv=tv)
 * def ContinuationLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_91AlwaysLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AlwaysLink, __pyx_t_1) < 0) __PYX_ERR(1, 96, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":98
 * def AlwaysLink(*args, tv=None):
 *     return add_link(types.AlwaysLink, args, tv=tv)
 * def ContinuationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ContinuationLink, args, tv=tv)
 * def EdgeLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_93ContinuationLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ContinuationLink, __pyx_t_1) < 0) __PYX_ERR(1, 98, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":100
 * def ContinuationLink(*args, tv=None):
 *     return add_link(types.ContinuationLink, args, tv=tv)
 * def EdgeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EdgeLink, args, tv=tv)
 * def LexicalNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_95EdgeLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_EdgeLink, __pyx_t_1) < 0) __PYX_ERR(1, 100, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":102
 * def EdgeLink(*args, tv=None):
 *     return add_link(types.EdgeLink, args, tv=tv)
 * def LexicalNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.LexicalNode, node_name, tv)
 * def AnyNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_97LexicalNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LexicalNode, __pyx_t_1) < 0) __PYX_ERR(1, 102, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":104
 * def LexicalNode(node_name, tv=None):
 *     return add_node(types.LexicalNode, node_name, tv)
 * def AnyNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.AnyNode, node_name, tv)
 * def Connector(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_99AnyNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AnyNode, __pyx_t_1) < 0) __PYX_ERR(1, 104, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":106
 * def AnyNode(node_name, tv=None):
 *     return add_node(types.AnyNode, node_name, tv)
 * def Connector(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Connector, args, tv=tv)
 * def SexNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_101Connector, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Connector, __pyx_t_1) < 0) __PYX_ERR(1, 106, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":108
 * def Connector(*args, tv=None):
 *     return add_link(types.Connector, args, tv=tv)
 * def SexNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SexNode, node_name, tv)
 * def ConnectorDir(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_103SexNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SexNode, __pyx_t_1) < 0) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":110
 * def SexNode(node_name, tv=None):
 *     return add_node(types.SexNode, node_name, tv)
 * def ConnectorDir(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ConnectorDir, node_name, tv)
 * def BondNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_105ConnectorDir, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ConnectorDir, __pyx_t_1) < 0) __PYX_ERR(1, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":112
 * def ConnectorDir(node_name, tv=None):
 *     return add_node(types.ConnectorDir, node_name, tv)
 * def BondNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.BondNode, node_name, tv)
 * def ConnectorSeq(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_107BondNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BondNode, __pyx_t_1) < 0) __PYX_ERR(1, 112, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":114
 * def BondNode(node_name, tv=None):
 *     return add_node(types.BondNode, node_name, tv)
 * def ConnectorSeq(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorSeq, args, tv=tv)
 * def ConnectorSet(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_109ConnectorSeq, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ConnectorSeq, __pyx_t_1) < 0) __PYX_ERR(1, 114, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":116
 * def ConnectorSeq(*args, tv=None):
 *     return add_link(types.ConnectorSeq, args, tv=tv)
 * def ConnectorSet(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorSet, args, tv=tv)
 * def ConnectorChoice(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_111ConnectorSet, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ConnectorSet, __pyx_t_1) < 0) __PYX_ERR(1, 116, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":118
 * def ConnectorSet(*args, tv=None):
 *     return add_link(types.ConnectorSet, args, tv=tv)
 * def ConnectorChoice(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConnectorChoice, args, tv=tv)
 * def Section(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_113ConnectorChoice, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ConnectorChoice, __pyx_t_1) < 0) __PYX_ERR(1, 118, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":120
 * def ConnectorChoice(*args, tv=None):
 *     return add_link(types.ConnectorChoice, args, tv=tv)
 * def Section(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Section, args, tv=tv)
 * def ShapeLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_115Section, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Section, __pyx_t_1) < 0) __PYX_ERR(1, 120, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":122
 * def Section(*args, tv=None):
 *     return add_link(types.Section, args, tv=tv)
 * def ShapeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ShapeLink, args, tv=tv)
 * def CrossSection(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_117ShapeLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ShapeLink, __pyx_t_1) < 0) __PYX_ERR(1, 122, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":124
 * def ShapeLink(*args, tv=None):
 *     return add_link(types.ShapeLink, args, tv=tv)
 * def CrossSection(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CrossSection, args, tv=tv)
 * def ItemNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_119CrossSection, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CrossSection, __pyx_t_1) < 0) __PYX_ERR(1, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":126
 * def CrossSection(*args, tv=None):
 *     return add_link(types.CrossSection, args, tv=tv)
 * def ItemNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ItemNode, node_name, tv)
 * def ItemClassNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_121ItemNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ItemNode, __pyx_t_1) < 0) __PYX_ERR(1, 126, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":128
 * def ItemNode(node_name, tv=None):
 *     return add_node(types.ItemNode, node_name, tv)
 * def ItemClassNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ItemClassNode, node_name, tv)
 * def TagNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_123ItemClassNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ItemClassNode, __pyx_t_1) < 0) __PYX_ERR(1, 128, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":130
 * def ItemClassNode(node_name, tv=None):
 *     return add_node(types.ItemClassNode, node_name, tv)
 * def TagNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TagNode, node_name, tv)
 * def TagLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_125TagNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TagNode, __pyx_t_1) < 0) __PYX_ERR(1, 130, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":132
 * def TagNode(node_name, tv=None):
 *     return add_node(types.TagNode, node_name, tv)
 * def TagLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TagLink, args, tv=tv)
 * def VariableNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_127TagLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TagLink, __pyx_t_1) < 0) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":134
 * def TagLink(*args, tv=None):
 *     return add_link(types.TagLink, args, tv=tv)
 * def VariableNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.VariableNode, node_name, tv)
 * def VariableList(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_129VariableNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VariableNode, __pyx_t_1) < 0) __PYX_ERR(1, 134, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":136
 * def VariableNode(node_name, tv=None):
 *     return add_node(types.VariableNode, node_name, tv)
 * def VariableList(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VariableList, args, tv=tv)
 * def VariableSet(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_131VariableList, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VariableList, __pyx_t_1) < 0) __PYX_ERR(1, 136, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":138
 * def VariableList(*args, tv=None):
 *     return add_link(types.VariableList, args, tv=tv)
 * def VariableSet(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VariableSet, args, tv=tv)
 * def GlobNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_133VariableSet, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VariableSet, __pyx_t_1) < 0) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":140
 * def VariableSet(*args, tv=None):
 *     return add_link(types.VariableSet, args, tv=tv)
 * def GlobNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GlobNode, node_name, tv)
 * def QuoteLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_135GlobNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GlobNode, __pyx_t_1) < 0) __PYX_ERR(1, 140, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":142
 * def GlobNode(node_name, tv=None):
 *     return add_node(types.GlobNode, node_name, tv)
 * def QuoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.QuoteLink, args, tv=tv)
 * def UnquoteLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_137QuoteLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_QuoteLink, __pyx_t_1) < 0) __PYX_ERR(1, 142, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":144
 * def QuoteLink(*args, tv=None):
 *     return add_link(types.QuoteLink, args, tv=tv)
 * def UnquoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UnquoteLink, args, tv=tv)
 * def DontExecLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_139UnquoteLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_UnquoteLink, __pyx_t_1) < 0) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":146
 * def UnquoteLink(*args, tv=None):
 *     return add_link(types.UnquoteLink, args, tv=tv)
 * def DontExecLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DontExecLink, args, tv=tv)
 * def LocalQuoteLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_141DontExecLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DontExecLink, __pyx_t_1) < 0) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":148
 * def DontExecLink(*args, tv=None):
 *     return add_link(types.DontExecLink, args, tv=tv)
 * def LocalQuoteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LocalQuoteLink, args, tv=tv)
 * def ReplacementLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_143LocalQuoteLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LocalQuoteLink, __pyx_t_1) < 0) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":150
 * def LocalQuoteLink(*args, tv=None):
 *     return add_link(types.LocalQuoteLink, args, tv=tv)
 * def ReplacementLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ReplacementLink, args, tv=tv)
 * def FreeLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_145ReplacementLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ReplacementLink, __pyx_t_1) < 0) __PYX_ERR(1, 150, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":152
 * def ReplacementLink(*args, tv=None):
 *     return add_link(types.ReplacementLink, args, tv=tv)
 * def FreeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FreeLink, args, tv=tv)
 * def DeleteLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_147FreeLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FreeLink, __pyx_t_1) < 0) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":154
 * def FreeLink(*args, tv=None):
 *     return add_link(types.FreeLink, args, tv=tv)
 * def DeleteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DeleteLink, args, tv=tv)
 * def UniqueLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_149DeleteLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DeleteLink, __pyx_t_1) < 0) __PYX_ERR(1, 154, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":156
 * def DeleteLink(*args, tv=None):
 *     return add_link(types.DeleteLink, args, tv=tv)
 * def UniqueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UniqueLink, args, tv=tv)
 * def StateLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_151UniqueLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_UniqueLink, __pyx_t_1) < 0) __PYX_ERR(1, 156, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":158
 * def UniqueLink(*args, tv=None):
 *     return add_link(types.UniqueLink, args, tv=tv)
 * def StateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StateLink, args, tv=tv)
 * def DefineLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_153StateLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_StateLink, __pyx_t_1) < 0) __PYX_ERR(1, 158, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":160
 * def StateLink(*args, tv=None):
 *     return add_link(types.StateLink, args, tv=tv)
 * def DefineLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DefineLink, args, tv=tv)
 * def GrantLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_155DefineLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DefineLink, __pyx_t_1) < 0) __PYX_ERR(1, 160, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":162
 * def DefineLink(*args, tv=None):
 *     return add_link(types.DefineLink, args, tv=tv)
 * def GrantLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GrantLink, args, tv=tv)
 * def ScopeLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_157GrantLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GrantLink, __pyx_t_1) < 0) __PYX_ERR(1, 162, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":164
 * def GrantLink(*args, tv=None):
 *     return add_link(types.GrantLink, args, tv=tv)
 * def ScopeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ScopeLink, args, tv=tv)
 * def RewriteLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_159ScopeLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ScopeLink, __pyx_t_1) < 0) __PYX_ERR(1, 164, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":166
 * def ScopeLink(*args, tv=None):
 *     return add_link(types.ScopeLink, args, tv=tv)
 * def RewriteLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RewriteLink, args, tv=tv)
 * def PrenexLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_161RewriteLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RewriteLink, __pyx_t_1) < 0) __PYX_ERR(1, 166, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":168
 * def RewriteLink(*args, tv=None):
 *     return add_link(types.RewriteLink, args, tv=tv)
 * def PrenexLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PrenexLink, args, tv=tv)
 * def LambdaLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_163PrenexLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PrenexLink, __pyx_t_1) < 0) __PYX_ERR(1, 168, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":170
 * def PrenexLink(*args, tv=None):
 *     return add_link(types.PrenexLink, args, tv=tv)
 * def LambdaLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LambdaLink, args, tv=tv)
 * def PutLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_165LambdaLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LambdaLink, __pyx_t_1) < 0) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":172
 * def LambdaLink(*args, tv=None):
 *     return add_link(types.LambdaLink, args, tv=tv)
 * def PutLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PutLink, args, tv=tv)
 * def JoinLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_167PutLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PutLink, __pyx_t_1) < 0) __PYX_ERR(1, 172, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":174
 * def PutLink(*args, tv=None):
 *     return add_link(types.PutLink, args, tv=tv)
 * def JoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.JoinLink, args, tv=tv)
 * def MinimalJoinLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_169JoinLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JoinLink, __pyx_t_1) < 0) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":176
 * def JoinLink(*args, tv=None):
 *     return add_link(types.JoinLink, args, tv=tv)
 * def MinimalJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinimalJoinLink, args, tv=tv)
 * def UpperSetLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_171MinimalJoinLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MinimalJoinLink, __pyx_t_1) < 0) __PYX_ERR(1, 176, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":178
 * def MinimalJoinLink(*args, tv=None):
 *     return add_link(types.MinimalJoinLink, args, tv=tv)
 * def UpperSetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.UpperSetLink, args, tv=tv)
 * def MaximalJoinLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_173UpperSetLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_UpperSetLink, __pyx_t_1) < 0) __PYX_ERR(1, 178, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":180
 * def UpperSetLink(*args, tv=None):
 *     return add_link(types.UpperSetLink, args, tv=tv)
 * def MaximalJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MaximalJoinLink, args, tv=tv)
 * def RuleLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_175MaximalJoinLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MaximalJoinLink, __pyx_t_1) < 0) __PYX_ERR(1, 180, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":182
 * def MaximalJoinLink(*args, tv=None):
 *     return add_link(types.MaximalJoinLink, args, tv=tv)
 * def RuleLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RuleLink, args, tv=tv)
 * def VardeclOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_177RuleLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RuleLink, __pyx_t_1) < 0) __PYX_ERR(1, 182, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":184
 * def RuleLink(*args, tv=None):
 *     return add_link(types.RuleLink, args, tv=tv)
 * def VardeclOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VardeclOfLink, args, tv=tv)
 * def PremiseOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_179VardeclOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VardeclOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 184, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":186
 * def VardeclOfLink(*args, tv=None):
 *     return add_link(types.VardeclOfLink, args, tv=tv)
 * def PremiseOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PremiseOfLink, args, tv=tv)
 * def ConclusionOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_181PremiseOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PremiseOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 186, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":188
 * def PremiseOfLink(*args, tv=None):
 *     return add_link(types.PremiseOfLink, args, tv=tv)
 * def ConclusionOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConclusionOfLink, args, tv=tv)
 * def PatternLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_183ConclusionOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ConclusionOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 188, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":190
 * def ConclusionOfLink(*args, tv=None):
 *     return add_link(types.ConclusionOfLink, args, tv=tv)
 * def PatternLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PatternLink, args, tv=tv)
 * def SatisfyingLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_185PatternLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PatternLink, __pyx_t_1) < 0) __PYX_ERR(1, 190, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":192
 * def PatternLink(*args, tv=None):
 *     return add_link(types.PatternLink, args, tv=tv)
 * def SatisfyingLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SatisfyingLink, args, tv=tv)
 * def MeetLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_187SatisfyingLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SatisfyingLink, __pyx_t_1) < 0) __PYX_ERR(1, 192, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":194
 * def SatisfyingLink(*args, tv=None):
 *     return add_link(types.SatisfyingLink, args, tv=tv)
 * def MeetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MeetLink, args, tv=tv)
 * def GetLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_189MeetLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MeetLink, __pyx_t_1) < 0) __PYX_ERR(1, 194, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":196
 * def MeetLink(*args, tv=None):
 *     return add_link(types.MeetLink, args, tv=tv)
 * def GetLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GetLink, args, tv=tv)
 * def QueryLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_191GetLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GetLink, __pyx_t_1) < 0) __PYX_ERR(1, 196, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":198
 * def GetLink(*args, tv=None):
 *     return add_link(types.GetLink, args, tv=tv)
 * def QueryLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.QueryLink, args, tv=tv)
 * def BindLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_193QueryLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_QueryLink, __pyx_t_1) < 0) __PYX_ERR(1, 198, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":200
 * def QueryLink(*args, tv=None):
 *     return add_link(types.QueryLink, args, tv=tv)
 * def BindLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BindLink, args, tv=tv)
 * def DualLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_195BindLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BindLink, __pyx_t_1) < 0) __PYX_ERR(1, 200, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":202
 * def BindLink(*args, tv=None):
 *     return add_link(types.BindLink, args, tv=tv)
 * def DualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DualLink, args, tv=tv)
 * def EvaluationLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_197DualLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DualLink, __pyx_t_1) < 0) __PYX_ERR(1, 202, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":204
 * def DualLink(*args, tv=None):
 *     return add_link(types.DualLink, args, tv=tv)
 * def EvaluationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EvaluationLink, args, tv=tv)
 * def TypeNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_199EvaluationLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_EvaluationLink, __pyx_t_1) < 0) __PYX_ERR(1, 204, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":206
 * def EvaluationLink(*args, tv=None):
 *     return add_link(types.EvaluationLink, args, tv=tv)
 * def TypeNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeNode, node_name, tv)
 * def TypeInhNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_201TypeNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TypeNode, __pyx_t_1) < 0) __PYX_ERR(1, 206, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":208
 * def TypeNode(node_name, tv=None):
 *     return add_node(types.TypeNode, node_name, tv)
 * def TypeInhNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeInhNode, node_name, tv)
 * def TypeCoInhNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_203TypeInhNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TypeInhNode, __pyx_t_1) < 0) __PYX_ERR(1, 208, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":210
 * def TypeInhNode(node_name, tv=None):
 *     return add_node(types.TypeInhNode, node_name, tv)
 * def TypeCoInhNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.TypeCoInhNode, node_name, tv)
 * def DefinedTypeNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_205TypeCoInhNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TypeCoInhNode, __pyx_t_1) < 0) __PYX_ERR(1, 210, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":212
 * def TypeCoInhNode(node_name, tv=None):
 *     return add_node(types.TypeCoInhNode, node_name, tv)
 * def DefinedTypeNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedTypeNode, node_name, tv)
 * def TypeChoice(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_207DefinedTypeNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DefinedTypeNode, __pyx_t_1) < 0) __PYX_ERR(1, 212, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":214
 * def DefinedTypeNode(node_name, tv=None):
 *     return add_node(types.DefinedTypeNode, node_name, tv)
 * def TypeChoice(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeChoice, args, tv=tv)
 * def TypeIntersectionLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_209TypeChoice, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TypeChoice, __pyx_t_1) < 0) __PYX_ERR(1, 214, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":216
 * def TypeChoice(*args, tv=None):
 *     return add_link(types.TypeChoice, args, tv=tv)
 * def TypeIntersectionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeIntersectionLink, args, tv=tv)
 * def ArrowLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_211TypeIntersectionLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TypeIntersectionLink, __pyx_t_1) < 0) __PYX_ERR(1, 216, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":218
 * def TypeIntersectionLink(*args, tv=None):
 *     return add_link(types.TypeIntersectionLink, args, tv=tv)
 * def ArrowLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ArrowLink, args, tv=tv)
 * def SignatureLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_213ArrowLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ArrowLink, __pyx_t_1) < 0) __PYX_ERR(1, 218, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":220
 * def ArrowLink(*args, tv=None):
 *     return add_link(types.ArrowLink, args, tv=tv)
 * def SignatureLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SignatureLink, args, tv=tv)
 * def SignNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_215SignatureLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SignatureLink, __pyx_t_1) < 0) __PYX_ERR(1, 220, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":222
 * def SignatureLink(*args, tv=None):
 *     return add_link(types.SignatureLink, args, tv=tv)
 * def SignNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SignNode, node_name, tv)
 * def LinkSignatureLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_217SignNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SignNode, __pyx_t_1) < 0) __PYX_ERR(1, 222, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":224
 * def SignNode(node_name, tv=None):
 *     return add_node(types.SignNode, node_name, tv)
 * def LinkSignatureLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LinkSignatureLink, args, tv=tv)
 * def TypedVariableLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_219LinkSignatureLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LinkSignatureLink, __pyx_t_1) < 0) __PYX_ERR(1, 224, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":226
 * def LinkSignatureLink(*args, tv=None):
 *     return add_link(types.LinkSignatureLink, args, tv=tv)
 * def TypedVariableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypedVariableLink, args, tv=tv)
 * def TypedAtomLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_221TypedVariableLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TypedVariableLink, __pyx_t_1) < 0) __PYX_ERR(1, 226, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":228
 * def TypedVariableLink(*args, tv=None):
 *     return add_link(types.TypedVariableLink, args, tv=tv)
 * def TypedAtomLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypedAtomLink, args, tv=tv)
 * def IntervalLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_223TypedAtomLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TypedAtomLink, __pyx_t_1) < 0) __PYX_ERR(1, 228, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":230
 * def TypedAtomLink(*args, tv=None):
 *     return add_link(types.TypedAtomLink, args, tv=tv)
 * def IntervalLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IntervalLink, args, tv=tv)
 * def AnchorNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_225IntervalLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IntervalLink, __pyx_t_1) < 0) __PYX_ERR(1, 230, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":232
 * def IntervalLink(*args, tv=None):
 *     return add_link(types.IntervalLink, args, tv=tv)
 * def AnchorNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.AnchorNode, node_name, tv)
 * def SimilarityLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_227AnchorNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AnchorNode, __pyx_t_1) < 0) __PYX_ERR(1, 232, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":234
 * def AnchorNode(node_name, tv=None):
 *     return add_node(types.AnchorNode, node_name, tv)
 * def SimilarityLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SimilarityLink, args, tv=tv)
 * def VirtualLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_229SimilarityLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SimilarityLink, __pyx_t_1) < 0) __PYX_ERR(1, 234, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":236
 * def SimilarityLink(*args, tv=None):
 *     return add_link(types.SimilarityLink, args, tv=tv)
 * def VirtualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.VirtualLink, args, tv=tv)
 * def GreaterThanLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_231VirtualLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VirtualLink, __pyx_t_1) < 0) __PYX_ERR(1, 236, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":238
 * def VirtualLink(*args, tv=None):
 *     return add_link(types.VirtualLink, args, tv=tv)
 * def GreaterThanLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.GreaterThanLink, args, tv=tv)
 * def LessThanLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_233GreaterThanLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GreaterThanLink, __pyx_t_1) < 0) __PYX_ERR(1, 238, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":240
 * def GreaterThanLink(*args, tv=None):
 *     return add_link(types.GreaterThanLink, args, tv=tv)
 * def LessThanLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.LessThanLink, args, tv=tv)
 * def IsClosedLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_235LessThanLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LessThanLink, __pyx_t_1) < 0) __PYX_ERR(1, 240, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":242
 * def LessThanLink(*args, tv=None):
 *     return add_link(types.LessThanLink, args, tv=tv)
 * def IsClosedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsClosedLink, args, tv=tv)
 * def IsTrueLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_237IsClosedLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IsClosedLink, __pyx_t_1) < 0) __PYX_ERR(1, 242, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":244
 * def IsClosedLink(*args, tv=None):
 *     return add_link(types.IsClosedLink, args, tv=tv)
 * def IsTrueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsTrueLink, args, tv=tv)
 * def IsFalseLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_239IsTrueLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IsTrueLink, __pyx_t_1) < 0) __PYX_ERR(1, 244, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":246
 * def IsTrueLink(*args, tv=None):
 *     return add_link(types.IsTrueLink, args, tv=tv)
 * def IsFalseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IsFalseLink, args, tv=tv)
 * def IdenticalLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_241IsFalseLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IsFalseLink, __pyx_t_1) < 0) __PYX_ERR(1, 246, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":248
 * def IsFalseLink(*args, tv=None):
 *     return add_link(types.IsFalseLink, args, tv=tv)
 * def IdenticalLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IdenticalLink, args, tv=tv)
 * def EqualLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_243IdenticalLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IdenticalLink, __pyx_t_1) < 0) __PYX_ERR(1, 248, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":250
 * def IdenticalLink(*args, tv=None):
 *     return add_link(types.IdenticalLink, args, tv=tv)
 * def EqualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EqualLink, args, tv=tv)
 * def AlphaEqualLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_245EqualLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_EqualLink, __pyx_t_1) < 0) __PYX_ERR(1, 250, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":252
 * def EqualLink(*args, tv=None):
 *     return add_link(types.EqualLink, args, tv=tv)
 * def AlphaEqualLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AlphaEqualLink, args, tv=tv)
 * def ExclusiveLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_247AlphaEqualLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AlphaEqualLink, __pyx_t_1) < 0) __PYX_ERR(1, 252, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":254
 * def AlphaEqualLink(*args, tv=None):
 *     return add_link(types.AlphaEqualLink, args, tv=tv)
 * def ExclusiveLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExclusiveLink, args, tv=tv)
 * def SatisfactionLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_249ExclusiveLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ExclusiveLink, __pyx_t_1) < 0) __PYX_ERR(1, 254, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":256
 * def ExclusiveLink(*args, tv=None):
 *     return add_link(types.ExclusiveLink, args, tv=tv)
 * def SatisfactionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SatisfactionLink, args, tv=tv)
 * def FunctionLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_251SatisfactionLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SatisfactionLink, __pyx_t_1) < 0) __PYX_ERR(1, 256, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":258
 * def SatisfactionLink(*args, tv=None):
 *     return add_link(types.SatisfactionLink, args, tv=tv)
 * def FunctionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FunctionLink, args, tv=tv)
 * def BoolOpLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_253FunctionLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FunctionLink, __pyx_t_1) < 0) __PYX_ERR(1, 258, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":260
 * def FunctionLink(*args, tv=None):
 *     return add_link(types.FunctionLink, args, tv=tv)
 * def BoolOpLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolOpLink, args, tv=tv)
 * def BoolAndLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_255BoolOpLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BoolOpLink, __pyx_t_1) < 0) __PYX_ERR(1, 260, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":262
 * def BoolOpLink(*args, tv=None):
 *     return add_link(types.BoolOpLink, args, tv=tv)
 * def BoolAndLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolAndLink, args, tv=tv)
 * def BoolOrLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_257BoolAndLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BoolAndLink, __pyx_t_1) < 0) __PYX_ERR(1, 262, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":264
 * def BoolAndLink(*args, tv=None):
 *     return add_link(types.BoolAndLink, args, tv=tv)
 * def BoolOrLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolOrLink, args, tv=tv)
 * def BoolNotLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_259BoolOrLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BoolOrLink, __pyx_t_1) < 0) __PYX_ERR(1, 264, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":266
 * def BoolOrLink(*args, tv=None):
 *     return add_link(types.BoolOrLink, args, tv=tv)
 * def BoolNotLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolNotLink, args, tv=tv)
 * def NumericFunctionLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_261BoolNotLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BoolNotLink, __pyx_t_1) < 0) __PYX_ERR(1, 266, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":268
 * def BoolNotLink(*args, tv=None):
 *     return add_link(types.BoolNotLink, args, tv=tv)
 * def NumericFunctionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumericFunctionLink, args, tv=tv)
 * def FoldLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_263NumericFunctionLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NumericFunctionLink, __pyx_t_1) < 0) __PYX_ERR(1, 268, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":270
 * def NumericFunctionLink(*args, tv=None):
 *     return add_link(types.NumericFunctionLink, args, tv=tv)
 * def FoldLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FoldLink, args, tv=tv)
 * def ArithmeticLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_265FoldLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FoldLink, __pyx_t_1) < 0) __PYX_ERR(1, 270, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":272
 * def FoldLink(*args, tv=None):
 *     return add_link(types.FoldLink, args, tv=tv)
 * def ArithmeticLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ArithmeticLink, args, tv=tv)
 * def PlusLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_267ArithmeticLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ArithmeticLink, __pyx_t_1) < 0) __PYX_ERR(1, 272, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":274
 * def ArithmeticLink(*args, tv=None):
 *     return add_link(types.ArithmeticLink, args, tv=tv)
 * def PlusLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PlusLink, args, tv=tv)
 * def MinusLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_269PlusLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PlusLink, __pyx_t_1) < 0) __PYX_ERR(1, 274, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":276
 * def PlusLink(*args, tv=None):
 *     return add_link(types.PlusLink, args, tv=tv)
 * def MinusLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinusLink, args, tv=tv)
 * def TimesLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_271MinusLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MinusLink, __pyx_t_1) < 0) __PYX_ERR(1, 276, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":278
 * def MinusLink(*args, tv=None):
 *     return add_link(types.MinusLink, args, tv=tv)
 * def TimesLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TimesLink, args, tv=tv)
 * def DivideLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_273TimesLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TimesLink, __pyx_t_1) < 0) __PYX_ERR(1, 278, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":280
 * def TimesLink(*args, tv=None):
 *     return add_link(types.TimesLink, args, tv=tv)
 * def DivideLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DivideLink, args, tv=tv)
 * def MinLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_275DivideLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DivideLink, __pyx_t_1) < 0) __PYX_ERR(1, 280, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":282
 * def DivideLink(*args, tv=None):
 *     return add_link(types.DivideLink, args, tv=tv)
 * def MinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MinLink, args, tv=tv)
 * def MaxLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_277MinLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MinLink, __pyx_t_1) < 0) __PYX_ERR(1, 282, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":284
 * def MinLink(*args, tv=None):
 *     return add_link(types.MinLink, args, tv=tv)
 * def MaxLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.MaxLink, args, tv=tv)
 * def FloorLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_279MaxLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MaxLink, __pyx_t_1) < 0) __PYX_ERR(1, 284, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":286
 * def MaxLink(*args, tv=None):
 *     return add_link(types.MaxLink, args, tv=tv)
 * def FloorLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FloorLink, args, tv=tv)
 * def HeavisideLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_281FloorLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 286, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FloorLink, __pyx_t_1) < 0) __PYX_ERR(1, 286, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":288
 * def FloorLink(*args, tv=None):
 *     return add_link(types.FloorLink, args, tv=tv)
 * def HeavisideLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.HeavisideLink, args, tv=tv)
 * def ImpulseLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_283HeavisideLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HeavisideLink, __pyx_t_1) < 0) __PYX_ERR(1, 288, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":290
 * def HeavisideLink(*args, tv=None):
 *     return add_link(types.HeavisideLink, args, tv=tv)
 * def ImpulseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ImpulseLink, args, tv=tv)
 * def Log2Link(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_285ImpulseLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ImpulseLink, __pyx_t_1) < 0) __PYX_ERR(1, 290, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":292
 * def ImpulseLink(*args, tv=None):
 *     return add_link(types.ImpulseLink, args, tv=tv)
 * def Log2Link(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.Log2Link, args, tv=tv)
 * def PowLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_287Log2Link, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Log2Link, __pyx_t_1) < 0) __PYX_ERR(1, 292, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":294
 * def Log2Link(*args, tv=None):
 *     return add_link(types.Log2Link, args, tv=tv)
 * def PowLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PowLink, args, tv=tv)
 * def RandomNumberLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_289PowLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PowLink, __pyx_t_1) < 0) __PYX_ERR(1, 294, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":296
 * def PowLink(*args, tv=None):
 *     return add_link(types.PowLink, args, tv=tv)
 * def RandomNumberLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RandomNumberLink, args, tv=tv)
 * def SineLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_291RandomNumberLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RandomNumberLink, __pyx_t_1) < 0) __PYX_ERR(1, 296, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":298
 * def RandomNumberLink(*args, tv=None):
 *     return add_link(types.RandomNumberLink, args, tv=tv)
 * def SineLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SineLink, args, tv=tv)
 * def AccumulateLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_293SineLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SineLink, __pyx_t_1) < 0) __PYX_ERR(1, 298, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":300
 * def SineLink(*args, tv=None):
 *     return add_link(types.SineLink, args, tv=tv)
 * def AccumulateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AccumulateLink, args, tv=tv)
 * def DecimateLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_295AccumulateLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AccumulateLink, __pyx_t_1) < 0) __PYX_ERR(1, 300, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":302
 * def AccumulateLink(*args, tv=None):
 *     return add_link(types.AccumulateLink, args, tv=tv)
 * def DecimateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DecimateLink, args, tv=tv)
 * def ElementOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_297DecimateLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DecimateLink, __pyx_t_1) < 0) __PYX_ERR(1, 302, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":304
 * def DecimateLink(*args, tv=None):
 *     return add_link(types.DecimateLink, args, tv=tv)
 * def ElementOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ElementOfLink, args, tv=tv)
 * def NumberOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_299ElementOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ElementOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 304, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":306
 * def ElementOfLink(*args, tv=None):
 *     return add_link(types.ElementOfLink, args, tv=tv)
 * def NumberOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.NumberOfLink, args, tv=tv)
 * def TimeLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_301NumberOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NumberOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 306, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":308
 * def NumberOfLink(*args, tv=None):
 *     return add_link(types.NumberOfLink, args, tv=tv)
 * def TimeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TimeLink, args, tv=tv)
 * def ValueOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_303TimeLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TimeLink, __pyx_t_1) < 0) __PYX_ERR(1, 308, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":310
 * def TimeLink(*args, tv=None):
 *     return add_link(types.TimeLink, args, tv=tv)
 * def ValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValueOfLink, args, tv=tv)
 * def BoolValueOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_305ValueOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ValueOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 310, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":312
 * def ValueOfLink(*args, tv=None):
 *     return add_link(types.ValueOfLink, args, tv=tv)
 * def BoolValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.BoolValueOfLink, args, tv=tv)
 * def FloatValueOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_307BoolValueOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BoolValueOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 312, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":314
 * def BoolValueOfLink(*args, tv=None):
 *     return add_link(types.BoolValueOfLink, args, tv=tv)
 * def FloatValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FloatValueOfLink, args, tv=tv)
 * def StreamValueOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_309FloatValueOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FloatValueOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 314, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":316
 * def FloatValueOfLink(*args, tv=None):
 *     return add_link(types.FloatValueOfLink, args, tv=tv)
 * def StreamValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StreamValueOfLink, args, tv=tv)
 * def TruthValueOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_311StreamValueOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_StreamValueOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 316, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":318
 * def StreamValueOfLink(*args, tv=None):
 *     return add_link(types.StreamValueOfLink, args, tv=tv)
 * def TruthValueOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TruthValueOfLink, args, tv=tv)
 * def StrengthOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_313TruthValueOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TruthValueOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 318, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":320
 * def TruthValueOfLink(*args, tv=None):
 *     return add_link(types.TruthValueOfLink, args, tv=tv)
 * def StrengthOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.StrengthOfLink, args, tv=tv)
 * def ConfidenceOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_315StrengthOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_StrengthOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 320, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":322
 * def StrengthOfLink(*args, tv=None):
 *     return add_link(types.StrengthOfLink, args, tv=tv)
 * def ConfidenceOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ConfidenceOfLink, args, tv=tv)
 * def CountOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_317ConfidenceOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ConfidenceOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 322, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":324
 * def ConfidenceOfLink(*args, tv=None):
 *     return add_link(types.ConfidenceOfLink, args, tv=tv)
 * def CountOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CountOfLink, args, tv=tv)
 * def SizeOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_319CountOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CountOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 324, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":326
 * def CountOfLink(*args, tv=None):
 *     return add_link(types.CountOfLink, args, tv=tv)
 * def SizeOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SizeOfLink, args, tv=tv)
 * def TypeOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_321SizeOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 326, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SizeOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 326, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":328
 * def SizeOfLink(*args, tv=None):
 *     return add_link(types.SizeOfLink, args, tv=tv)
 * def TypeOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.TypeOfLink, args, tv=tv)
 * def IncomingOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_323TypeOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TypeOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 328, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":330
 * def TypeOfLink(*args, tv=None):
 *     return add_link(types.TypeOfLink, args, tv=tv)
 * def IncomingOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.IncomingOfLink, args, tv=tv)
 * def CollectionOfLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_325IncomingOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IncomingOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 330, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":332
 * def IncomingOfLink(*args, tv=None):
 *     return add_link(types.IncomingOfLink, args, tv=tv)
 * def CollectionOfLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CollectionOfLink, args, tv=tv)
 * def SetValueLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_327CollectionOfLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CollectionOfLink, __pyx_t_1) < 0) __PYX_ERR(1, 332, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":334
 * def CollectionOfLink(*args, tv=None):
 *     return add_link(types.CollectionOfLink, args, tv=tv)
 * def SetValueLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetValueLink, args, tv=tv)
 * def SetTVLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_329SetValueLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SetValueLink, __pyx_t_1) < 0) __PYX_ERR(1, 334, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":336
 * def SetValueLink(*args, tv=None):
 *     return add_link(types.SetValueLink, args, tv=tv)
 * def SetTVLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SetTVLink, args, tv=tv)
 * def ValueShimLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_331SetTVLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SetTVLink, __pyx_t_1) < 0) __PYX_ERR(1, 336, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":338
 * def SetTVLink(*args, tv=None):
 *     return add_link(types.SetTVLink, args, tv=tv)
 * def ValueShimLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ValueShimLink, args, tv=tv)
 * def PromiseLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_333ValueShimLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ValueShimLink, __pyx_t_1) < 0) __PYX_ERR(1, 338, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":340
 * def ValueShimLink(*args, tv=None):
 *     return add_link(types.ValueShimLink, args, tv=tv)
 * def PromiseLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PromiseLink, args, tv=tv)
 * def PromisePredicateLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_335PromiseLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PromiseLink, __pyx_t_1) < 0) __PYX_ERR(1, 340, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":342
 * def PromiseLink(*args, tv=None):
 *     return add_link(types.PromiseLink, args, tv=tv)
 * def PromisePredicateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PromisePredicateLink, args, tv=tv)
 * def FormulaPredicateLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_337PromisePredicateLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PromisePredicateLink, __pyx_t_1) < 0) __PYX_ERR(1, 342, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":344
 * def PromisePredicateLink(*args, tv=None):
 *     return add_link(types.PromisePredicateLink, args, tv=tv)
 * def FormulaPredicateLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FormulaPredicateLink, args, tv=tv)
 * def FilterLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_339FormulaPredicateLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FormulaPredicateLink, __pyx_t_1) < 0) __PYX_ERR(1, 344, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":346
 * def FormulaPredicateLink(*args, tv=None):
 *     return add_link(types.FormulaPredicateLink, args, tv=tv)
 * def FilterLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.FilterLink, args, tv=tv)
 * def ExecutionOutputLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_341FilterLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FilterLink, __pyx_t_1) < 0) __PYX_ERR(1, 346, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":348
 * def FilterLink(*args, tv=None):
 *     return add_link(types.FilterLink, args, tv=tv)
 * def ExecutionOutputLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutionOutputLink, args, tv=tv)
 * def RandomChoiceLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_343ExecutionOutputLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ExecutionOutputLink, __pyx_t_1) < 0) __PYX_ERR(1, 348, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":350
 * def ExecutionOutputLink(*args, tv=None):
 *     return add_link(types.ExecutionOutputLink, args, tv=tv)
 * def RandomChoiceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.RandomChoiceLink, args, tv=tv)
 * def CondLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_345RandomChoiceLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RandomChoiceLink, __pyx_t_1) < 0) __PYX_ERR(1, 350, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":352
 * def RandomChoiceLink(*args, tv=None):
 *     return add_link(types.RandomChoiceLink, args, tv=tv)
 * def CondLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.CondLink, args, tv=tv)
 * def SleepLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_347CondLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CondLink, __pyx_t_1) < 0) __PYX_ERR(1, 352, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":354
 * def CondLink(*args, tv=None):
 *     return add_link(types.CondLink, args, tv=tv)
 * def SleepLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.SleepLink, args, tv=tv)
 * def ParallelLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_349SleepLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SleepLink, __pyx_t_1) < 0) __PYX_ERR(1, 354, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":356
 * def SleepLink(*args, tv=None):
 *     return add_link(types.SleepLink, args, tv=tv)
 * def ParallelLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ParallelLink, args, tv=tv)
 * def ThreadJoinLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_351ParallelLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 356, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ParallelLink, __pyx_t_1) < 0) __PYX_ERR(1, 356, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":358
 * def ParallelLink(*args, tv=None):
 *     return add_link(types.ParallelLink, args, tv=tv)
 * def ThreadJoinLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ThreadJoinLink, args, tv=tv)
 * def ExecuteThreadedLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_353ThreadJoinLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 358, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ThreadJoinLink, __pyx_t_1) < 0) __PYX_ERR(1, 358, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":360
 * def ThreadJoinLink(*args, tv=None):
 *     return add_link(types.ThreadJoinLink, args, tv=tv)
 * def ExecuteThreadedLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecuteThreadedLink, args, tv=tv)
 * def PureExecLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_355ExecuteThreadedLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ExecuteThreadedLink, __pyx_t_1) < 0) __PYX_ERR(1, 360, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":362
 * def ExecuteThreadedLink(*args, tv=None):
 *     return add_link(types.ExecuteThreadedLink, args, tv=tv)
 * def PureExecLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.PureExecLink, args, tv=tv)
 * def ProcedureNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_357PureExecLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PureExecLink, __pyx_t_1) < 0) __PYX_ERR(1, 362, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":364
 * def PureExecLink(*args, tv=None):
 *     return add_link(types.PureExecLink, args, tv=tv)
 * def ProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.ProcedureNode, node_name, tv)
 * def DefinedProcedureNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_359ProcedureNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 364, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ProcedureNode, __pyx_t_1) < 0) __PYX_ERR(1, 364, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":366
 * def ProcedureNode(node_name, tv=None):
 *     return add_node(types.ProcedureNode, node_name, tv)
 * def DefinedProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedProcedureNode, node_name, tv)
 * def GroundedProcedureNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_361DefinedProcedureNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DefinedProcedureNode, __pyx_t_1) < 0) __PYX_ERR(1, 366, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":368
 * def DefinedProcedureNode(node_name, tv=None):
 *     return add_node(types.DefinedProcedureNode, node_name, tv)
 * def GroundedProcedureNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedProcedureNode, node_name, tv)
 * def GroundedPredicateNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_363GroundedProcedureNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GroundedProcedureNode, __pyx_t_1) < 0) __PYX_ERR(1, 368, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":370
 * def GroundedProcedureNode(node_name, tv=None):
 *     return add_node(types.GroundedProcedureNode, node_name, tv)
 * def GroundedPredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedPredicateNode, node_name, tv)
 * def DefinedPredicateNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_365GroundedPredicateNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 370, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GroundedPredicateNode, __pyx_t_1) < 0) __PYX_ERR(1, 370, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":372
 * def GroundedPredicateNode(node_name, tv=None):
 *     return add_node(types.GroundedPredicateNode, node_name, tv)
 * def DefinedPredicateNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedPredicateNode, node_name, tv)
 * def SchemaNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_367DefinedPredicateNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DefinedPredicateNode, __pyx_t_1) < 0) __PYX_ERR(1, 372, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":374
 * def DefinedPredicateNode(node_name, tv=None):
 *     return add_node(types.DefinedPredicateNode, node_name, tv)
 * def SchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.SchemaNode, node_name, tv)
 * def DefinedSchemaNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_369SchemaNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 374, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SchemaNode, __pyx_t_1) < 0) __PYX_ERR(1, 374, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":376
 * def SchemaNode(node_name, tv=None):
 *     return add_node(types.SchemaNode, node_name, tv)
 * def DefinedSchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.DefinedSchemaNode, node_name, tv)
 * def GroundedSchemaNode(node_name, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_371DefinedSchemaNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DefinedSchemaNode, __pyx_t_1) < 0) __PYX_ERR(1, 376, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":378
 * def DefinedSchemaNode(node_name, tv=None):
 *     return add_node(types.DefinedSchemaNode, node_name, tv)
 * def GroundedSchemaNode(node_name, tv=None):             # <<<<<<<<<<<<<<
 *     return add_node(types.GroundedSchemaNode, node_name, tv)
 * def ForeignAst(*args):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_373GroundedSchemaNode, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GroundedSchemaNode, __pyx_t_1) < 0) __PYX_ERR(1, 378, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":380
 * def GroundedSchemaNode(node_name, tv=None):
 *     return add_node(types.GroundedSchemaNode, node_name, tv)
 * def ForeignAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.ForeignAst, args)
 * def SexprAst(*args):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_375ForeignAst, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ForeignAst, __pyx_t_1) < 0) __PYX_ERR(1, 380, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":382
 * def ForeignAst(*args):
 *     return add_link(types.ForeignAst, args)
 * def SexprAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.SexprAst, args)
 * def DatalogAst(*args):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_377SexprAst, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 382, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SexprAst, __pyx_t_1) < 0) __PYX_ERR(1, 382, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":384
 * def SexprAst(*args):
 *     return add_link(types.SexprAst, args)
 * def DatalogAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.DatalogAst, args)
 * def JsonAst(*args):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_379DatalogAst, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 384, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DatalogAst, __pyx_t_1) < 0) __PYX_ERR(1, 384, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":386
 * def DatalogAst(*args):
 *     return add_link(types.DatalogAst, args)
 * def JsonAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.JsonAst, args)
 * def PythonAst(*args):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_381JsonAst, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 386, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JsonAst, __pyx_t_1) < 0) __PYX_ERR(1, 386, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":388
 * def JsonAst(*args):
 *     return add_link(types.JsonAst, args)
 * def PythonAst(*args):             # <<<<<<<<<<<<<<
 *     return add_link(types.PythonAst, args)
 * def DirectlyEvaluatableLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_383PythonAst, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 388, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PythonAst, __pyx_t_1) < 0) __PYX_ERR(1, 388, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":390
 * def PythonAst(*args):
 *     return add_link(types.PythonAst, args)
 * def DirectlyEvaluatableLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.DirectlyEvaluatableLink, args, tv=tv)
 * def ImplicationLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_385DirectlyEvaluatableLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 390, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DirectlyEvaluatableLink, __pyx_t_1) < 0) __PYX_ERR(1, 390, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":392
 * def DirectlyEvaluatableLink(*args, tv=None):
 *     return add_link(types.DirectlyEvaluatableLink, args, tv=tv)
 * def ImplicationLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ImplicationLink, args, tv=tv)
 * def InheritanceLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_387ImplicationLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ImplicationLink, __pyx_t_1) < 0) __PYX_ERR(1, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":394
 * def ImplicationLink(*args, tv=None):
 *     return add_link(types.ImplicationLink, args, tv=tv)
 * def InheritanceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.InheritanceLink, args, tv=tv)
 * def ForAllLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_389InheritanceLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_InheritanceLink, __pyx_t_1) < 0) __PYX_ERR(1, 394, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":396
 * def InheritanceLink(*args, tv=None):
 *     return add_link(types.InheritanceLink, args, tv=tv)
 * def ForAllLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ForAllLink, args, tv=tv)
 * def ExistsLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_391ForAllLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ForAllLink, __pyx_t_1) < 0) __PYX_ERR(1, 396, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":398
 * def ForAllLink(*args, tv=None):
 *     return add_link(types.ForAllLink, args, tv=tv)
 * def ExistsLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExistsLink, args, tv=tv)
 * def AssociativeLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_393ExistsLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ExistsLink, __pyx_t_1) < 0) __PYX_ERR(1, 398, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":400
 * def ExistsLink(*args, tv=None):
 *     return add_link(types.ExistsLink, args, tv=tv)
 * def AssociativeLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.AssociativeLink, args, tv=tv)
 * def EquivalenceLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_395AssociativeLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 400, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AssociativeLink, __pyx_t_1) < 0) __PYX_ERR(1, 400, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":402
 * def AssociativeLink(*args, tv=None):
 *     return add_link(types.AssociativeLink, args, tv=tv)
 * def EquivalenceLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.EquivalenceLink, args, tv=tv)
 * def ExecutionLink(*args, tv=None):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_397EquivalenceLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_EquivalenceLink, __pyx_t_1) < 0) __PYX_ERR(1, 402, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../atoms/atom_types/core_types.pyx":404
 * def EquivalenceLink(*args, tv=None):
 *     return add_link(types.EquivalenceLink, args, tv=tv)
 * def ExecutionLink(*args, tv=None):             # <<<<<<<<<<<<<<
 *     return add_link(types.ExecutionLink, args, tv=tv)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_399ExecutionLink, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ExecutionLink, __pyx_t_1) < 0) __PYX_ERR(1, 404, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":35
 * 
 * 
 * def FloatValue(arg):             # <<<<<<<<<<<<<<
 *     return createFloatValue(arg)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_401FloatValue, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FloatValue, __pyx_t_1) < 0) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":39
 * 
 * 
 * def LinkValue(arg):             # <<<<<<<<<<<<<<
 *     return createLinkValue(arg)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_403LinkValue, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LinkValue, __pyx_t_1) < 0) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":43
 * 
 * 
 * def StringValue(arg):             # <<<<<<<<<<<<<<
 *     return createStringValue(arg)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_405StringValue, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_StringValue, __pyx_t_1) < 0) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":47
 * 
 * 
 * def TruthValue(strength_t strength=1.0, confidence_t confidence=1.0):             # <<<<<<<<<<<<<<
 *     return createTruthValue(strength, confidence)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7opencog_17type_constructors_407TruthValue, NULL, __pyx_n_s_opencog_type_constructors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TruthValue, __pyx_t_1) < 0) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "opencog/type_constructors.pyx":2
 * 
 * # This file reads files that are generated by the OPENCOG_ADD_ATOM_TYPES             # <<<<<<<<<<<<<<
 * # macro so they can be imported using:
 * #
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init opencog.type_constructors", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init opencog.type_constructors");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (__Pyx_PyFastCFunction_Check(func)) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#if defined(__Pyx_CyFunction_USED) && defined(NDEBUG)
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* TypeImport */
#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(PyObject *module, const char *module_name, const char *class_name,
    size_t size, enum __Pyx_ImportType_CheckSize check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if ((size_t)basicsize < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error && (size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* GetVTable */
static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s_pyx_vtable);
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);  // XDECREF since it's only set on Py3 if cline
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[5];
    int same=1, i, found_dot;
    const char* rt_from_call = Py_GetVersion();
    PyOS_snprintf(ctversion, 5, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    found_dot = 0;
    for (i = 0; i < 4; i++) {
        if (!ctversion[i]) {
            same = (rt_from_call[i] < '0' || rt_from_call[i] > '9');
            break;
        }
        if (rt_from_call[i] != ctversion[i]) {
            same = 0;
            break;
        }
    }
    if (!same) {
        char rtversion[5] = {'\0'};
        char message[200];
        for (i=0; i<4; ++i) {
            if (rt_from_call[i] == '.') {
                if (found_dot) break;
                found_dot = 1;
            } else if (rt_from_call[i] < '0' || rt_from_call[i] > '9') {
                break;
            }
            rtversion[i] = rt_from_call[i];
        }
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
