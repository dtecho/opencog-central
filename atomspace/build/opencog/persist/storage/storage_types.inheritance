/* File automatically generated by the macro OPENCOG_CXX_ATOMTYPES. Do not edit */

/* Touch the server before adding types. */
opencog::nameserver();
opencog::STORAGE_NODE = opencog::nameserver().declType(opencog::TAG_NODE, "StorageNode", "Storage");
opencog::POSTGRES_STORAGE_NODE = opencog::nameserver().declType(opencog::STORAGE_NODE, "PostgresStorageNode", "PostgresStorage");
opencog::FILE_STORAGE_NODE = opencog::nameserver().declType(opencog::STORAGE_NODE, "FileStorageNode", "FileStorage");
opencog::MONO_STORAGE_NODE = opencog::nameserver().declType(opencog::STORAGE_NODE, "MonoStorageNode", "MonoStorage");
opencog::ROCKS_STORAGE_NODE = opencog::nameserver().declType(opencog::STORAGE_NODE, "RocksStorageNode", "RocksStorage");
opencog::COG_SIMPLE_STORAGE_NODE = opencog::nameserver().declType(opencog::STORAGE_NODE, "CogSimpleStorageNode", "CogSimpleStorage");
opencog::COG_STORAGE_NODE = opencog::nameserver().declType(opencog::STORAGE_NODE, "CogStorageNode", "CogStorage");
opencog::FOREIGN_STORAGE_NODE = opencog::nameserver().declType(opencog::STORAGE_NODE, "ForeignStorageNode", "ForeignStorage");
opencog::BRIDGE_STORAGE_NODE = opencog::nameserver().declType(opencog::STORAGE_NODE, "BridgeStorageNode", "BridgeStorage");
opencog::PROXY_NODE = opencog::nameserver().declType(opencog::STORAGE_NODE, "ProxyNode", "Proxy");
opencog::NULL_PROXY_NODE = opencog::nameserver().declType(opencog::PROXY_NODE, "NullProxyNode", "NullProxy");
opencog::READ_THRU_PROXY_NODE = opencog::nameserver().declType(opencog::PROXY_NODE, "ReadThruProxyNode", "ReadThruProxy");
opencog::SEQUENTIAL_READ_PROXY_NODE = opencog::nameserver().declType(opencog::PROXY_NODE, "SequentialReadProxyNode", "SequentialReadProxy");
opencog::WRITE_THRU_PROXY_NODE = opencog::nameserver().declType(opencog::PROXY_NODE, "WriteThruProxyNode", "WriteThruProxy");
opencog::READ_WRITE_PROXY_NODE = opencog::nameserver().declType(opencog::PROXY_NODE, "ReadWriteProxyNode", "ReadWriteProxy");
opencog::WRITE_BUFFER_PROXY_NODE = opencog::nameserver().declType(opencog::WRITE_THRU_PROXY_NODE, "WriteBufferProxyNode", "WriteBufferProxy");
opencog::CACHING_PROXY_NODE = opencog::nameserver().declType(opencog::PROXY_NODE, "CachingProxyNode", "CachingProxy");
opencog::DYNAMIC_DATA_PROXY_NODE = opencog::nameserver().declType(opencog::PROXY_NODE, "DynamicDataProxyNode", "DynamicDataProxy");
opencog::PROXY_PARAMETERS_LINK = opencog::nameserver().declType(opencog::UNIQUE_LINK, "ProxyParametersLink", "ProxyParameters");
opencog::FETCH_VALUE_OF_LINK = opencog::nameserver().declType(opencog::VALUE_OF_LINK, "FetchValueOfLink", "FetchValueOf");
opencog::FETCH_VALUE_OF_LINK = opencog::nameserver().declType(opencog::NUMERIC_OUTPUT_LINK, "FetchValueOfLink", "FetchValueOf");
opencog::STORE_VALUE_OF_LINK = opencog::nameserver().declType(opencog::VALUE_OF_LINK, "StoreValueOfLink", "StoreValueOf");
opencog::STORE_VALUE_OF_LINK = opencog::nameserver().declType(opencog::NUMERIC_OUTPUT_LINK, "StoreValueOfLink", "StoreValueOf");
