
# DO NOT EDIT THIS FILE! This file was automatically
# generated from atom definitions in
# /workspaces/opencog-central/atomspace/opencog/persist/storage/storage_types.script
# by the macro OPENCOG_PYTHON_ATOMTYPES
#
# This file contains basic python wrappers for atom creation.
#

def StorageNode(node_name, tv=None):
    return add_node(types.StorageNode, node_name, tv)
def PostgresStorageNode(node_name, tv=None):
    return add_node(types.PostgresStorageNode, node_name, tv)
def FileStorageNode(node_name, tv=None):
    return add_node(types.FileStorageNode, node_name, tv)
def MonoStorageNode(node_name, tv=None):
    return add_node(types.MonoStorageNode, node_name, tv)
def RocksStorageNode(node_name, tv=None):
    return add_node(types.RocksStorageNode, node_name, tv)
def CogSimpleStorageNode(node_name, tv=None):
    return add_node(types.CogSimpleStorageNode, node_name, tv)
def CogStorageNode(node_name, tv=None):
    return add_node(types.CogStorageNode, node_name, tv)
def ForeignStorageNode(node_name, tv=None):
    return add_node(types.ForeignStorageNode, node_name, tv)
def BridgeStorageNode(node_name, tv=None):
    return add_node(types.BridgeStorageNode, node_name, tv)
def ProxyNode(node_name, tv=None):
    return add_node(types.ProxyNode, node_name, tv)
def NullProxyNode(node_name, tv=None):
    return add_node(types.NullProxyNode, node_name, tv)
def ReadThruProxyNode(node_name, tv=None):
    return add_node(types.ReadThruProxyNode, node_name, tv)
def SequentialReadProxyNode(node_name, tv=None):
    return add_node(types.SequentialReadProxyNode, node_name, tv)
def WriteThruProxyNode(node_name, tv=None):
    return add_node(types.WriteThruProxyNode, node_name, tv)
def ReadWriteProxyNode(node_name, tv=None):
    return add_node(types.ReadWriteProxyNode, node_name, tv)
def WriteBufferProxyNode(node_name, tv=None):
    return add_node(types.WriteBufferProxyNode, node_name, tv)
def CachingProxyNode(node_name, tv=None):
    return add_node(types.CachingProxyNode, node_name, tv)
def DynamicDataProxyNode(node_name, tv=None):
    return add_node(types.DynamicDataProxyNode, node_name, tv)
def ProxyParametersLink(*args, tv=None):
    return add_link(types.ProxyParametersLink, args, tv=tv)
def FetchValueOfLink(*args, tv=None):
    return add_link(types.FetchValueOfLink, args, tv=tv)
def StoreValueOfLink(*args, tv=None):
    return add_link(types.StoreValueOfLink, args, tv=tv)
